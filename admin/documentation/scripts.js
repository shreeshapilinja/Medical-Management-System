function theme() {
    var element = document.body;
    element.classList.toggle("dark-mode");
}






! function(e) {
    function r(r) {
        for (var n, l, f = r[0], i = r[1], p = r[2], c = 0, s = []; c < f.length; c++) l = f[c], Object.prototype.hasOwnProperty.call(o, l) && o[l] && s.push(o[l][0]), o[l] = 0;
        for (n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);
        for (a && a(r); s.length;) s.shift()();
        return u.push.apply(u, p || []), t()
    }

    function t() {
        for (var e, r = 0; r < u.length; r++) {
            for (var t = u[r], n = !0, f = 1; f < t.length; f++) 0 !== o[t[f]] && (n = !1);
            n && (u.splice(r--, 1), e = l(l.s = t[0]))
        }
        return e
    }
    var n = {},
        o = {
            0: 0
        },
        u = [];

    function l(r) {
        if (n[r]) return n[r].exports;
        var t = n[r] = {
            i: r,
            l: !1,
            exports: {}
        };
        return e[r].call(t.exports, t, t.exports, l), t.l = !0, t.exports
    }
    l.m = e, l.c = n, l.d = function(e, r, t) {
        l.o(e, r) || Object.defineProperty(e, r, {
            enumerable: !0,
            get: t
        })
    }, l.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, l.t = function(e, r) {
        if (1 & r && (e = l(e)), 8 & r) return e;
        if (4 & r && "object" == typeof e && e && e.__esModule) return e;
        var t = Object.create(null);
        if (l.r(t), Object.defineProperty(t, "default", {
                enumerable: !0,
                value: e
            }), 2 & r && "string" != typeof e)
            for (var n in e) l.d(t, n, (function(r) {
                return e[r]
            }).bind(null, n));
        return t
    }, l.n = function(e) {
        var r = e && e.__esModule ? function() {
            return e.default
        } : function() {
            return e
        };
        return l.d(r, "a", r), r
    }, l.o = function(e, r) {
        return Object.prototype.hasOwnProperty.call(e, r)
    }, l.p = "";
    var f = window.webpackJsonp = window.webpackJsonp || [],
        i = f.push.bind(f);
    f.push = r, f = f.slice();
    for (var p = 0; p < f.length; p++) r(f[p]);
    var a = i;
    t()
}([]);

(window.webpackJsonp = window.webpackJsonp || []).push([
    [1], {
        0: function(e, t, n) {
            e.exports = n("zUnb")
        },
        "45FF": function(e, t) {
            ! function() {
                if ("undefined" != typeof self && self.Prism && self.document) {
                    var e = [],
                        t = {},
                        n = function() {};
                    Prism.plugins.toolbar = {};
                    var r = Prism.plugins.toolbar.registerButton = function(n, r) {
                            var s;
                            s = "function" == typeof r ? r : function(e) {
                                var t;
                                return "function" == typeof r.onClick ? ((t = document.createElement("button")).type = "button", t.addEventListener("click", function() {
                                    r.onClick.call(this, e)
                                })) : "string" == typeof r.url ? (t = document.createElement("a")).href = r.url : t = document.createElement("span"), r.className && t.classList.add(r.className), t.textContent = r.text, t
                            }, n in t ? console.warn('There is a button with the key "' + n + '" registered already.') : e.push(t[n] = s)
                        },
                        s = Prism.plugins.toolbar.hook = function(r) {
                            var s = r.element.parentNode;
                            if (s && /pre/i.test(s.nodeName) && !s.parentNode.classList.contains("code-toolbar")) {
                                var i = document.createElement("div");
                                i.classList.add("code-toolbar"), s.parentNode.insertBefore(i, s), i.appendChild(s);
                                var o = document.createElement("div");
                                o.classList.add("toolbar");
                                var a = e,
                                    l = function(e) {
                                        for (; e;) {
                                            var t = e.getAttribute("data-toolbar-order");
                                            if (null != t) return (t = t.trim()).length ? t.split(/\s*,\s*/g) : [];
                                            e = e.parentElement
                                        }
                                    }(r.element);
                                l && (a = l.map(function(e) {
                                    return t[e] || n
                                })), a.forEach(function(e) {
                                    var t = e(r);
                                    if (t) {
                                        var n = document.createElement("div");
                                        n.classList.add("toolbar-item"), n.appendChild(t), o.appendChild(n)
                                    }
                                }), i.appendChild(o)
                            }
                        };
                    r("label", function(e) {
                        var t = e.element.parentNode;
                        if (t && /pre/i.test(t.nodeName) && t.hasAttribute("data-label")) {
                            var n, r, s = t.getAttribute("data-label");
                            try {
                                r = document.querySelector("template#" + s)
                            } catch (i) {}
                            return r ? n = r.content : (t.hasAttribute("data-url") ? (n = document.createElement("a")).href = t.getAttribute("data-url") : n = document.createElement("span"), n.textContent = s), n
                        }
                    }), Prism.hooks.add("complete", s)
                }
            }()
        },
        Yhcd: function(e, t) {
            ! function(e) {
                function t(e, t) {
                    return "___" + e.toUpperCase() + t + "___"
                }
                Object.defineProperties(e.languages["markup-templating"] = {}, {
                    buildPlaceholders: {
                        value: function(n, r, s, i) {
                            if (n.language === r) {
                                var o = n.tokenStack = [];
                                n.code = n.code.replace(s, function(e) {
                                    if ("function" == typeof i && !i(e)) return e;
                                    for (var s, a = o.length; - 1 !== n.code.indexOf(s = t(r, a));) ++a;
                                    return o[a] = e, s
                                }), n.grammar = e.languages.markup
                            }
                        }
                    },
                    tokenizePlaceholders: {
                        value: function(n, r) {
                            if (n.language === r && n.tokenStack) {
                                n.grammar = e.languages[r];
                                var s = 0,
                                    i = Object.keys(n.tokenStack);
                                ! function o(a) {
                                    for (var l = 0; l < a.length && !(s >= i.length); l++) {
                                        var u = a[l];
                                        if ("string" == typeof u || u.content && "string" == typeof u.content) {
                                            var c = i[s],
                                                h = n.tokenStack[c],
                                                d = "string" == typeof u ? u : u.content,
                                                p = t(r, c),
                                                f = d.indexOf(p);
                                            if (f > -1) {
                                                ++s;
                                                var g = d.substring(0, f),
                                                    m = new e.Token(r, e.tokenize(h, n.grammar), "language-" + r, h),
                                                    y = d.substring(f + p.length),
                                                    b = [];
                                                g && b.push.apply(b, o([g])), b.push(m), y && b.push.apply(b, o([y])), "string" == typeof u ? a.splice.apply(a, [l, 1].concat(b)) : u.content = b
                                            }
                                        } else u.content && o(u.content)
                                    }
                                    return a
                                }(n.tokens)
                            }
                        }
                    }
                })
            }(Prism)
        },
        c2Kr: function(e, t, n) {
            ! function() {
                if ("undefined" != typeof self && self.Prism && self.document)
                    if (Prism.plugins.toolbar) {
                        var e = window.ClipboardJS || void 0;
                        e || (e = n("sxGJ"));
                        var t = [];
                        if (!e) {
                            var r = document.createElement("script"),
                                s = document.querySelector("head");
                            r.onload = function() {
                                if (e = window.ClipboardJS)
                                    for (; t.length;) t.pop()()
                            }, r.src = "https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js", s.appendChild(r)
                        }
                        Prism.plugins.toolbar.registerButton("copy-to-clipboard", function(n) {
                            var r = document.createElement("button");
                            r.textContent = "Copy", r.setAttribute("type", "button");
                            var s = n.element;
                            return e ? i() : t.push(i), r;

                            function i() {
                                var t = new e(r, {
                                    text: function() {
                                        return s.textContent
                                    }
                                });
                                t.on("success", function() {
                                    r.textContent = "Copied!", o()
                                }), t.on("error", function() {
                                    r.textContent = "Press Ctrl+C to copy", o()
                                })
                            }

                            function o() {
                                setTimeout(function() {
                                    r.textContent = "Copy"
                                }, 5e3)
                            }
                        })
                    } else console.warn("Copy to Clipboard plugin loaded before Toolbar plugin.")
            }()
        },       
        sxGJ: function(e, t, n) {
            var r;
            r = function() {
                return function() {
                    var e = {
                            134: function(e, t, n) {
                                "use strict";
                                n.d(t, {
                                    default: function() {
                                        return y
                                    }
                                });
                                var r = n(279),
                                    s = n.n(r),
                                    i = n(370),
                                    o = n.n(i),
                                    a = n(817),
                                    l = n.n(a);

                                function u(e) {
                                    return (u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                        return typeof e
                                    } : function(e) {
                                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                    })(e)
                                }
                                var c = function() {
                                    function e(t) {
                                        ! function(e, t) {
                                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                                        }(this, e), this.resolveOptions(t), this.initSelection()
                                    }
                                    var t;
                                    return (t = [{
                                        key: "resolveOptions",
                                        value: function() {
                                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                            this.action = e.action, this.container = e.container, this.emitter = e.emitter, this.target = e.target, this.text = e.text, this.trigger = e.trigger, this.selectedText = ""
                                        }
                                    }, {
                                        key: "initSelection",
                                        value: function() {
                                            this.text ? this.selectFake() : this.target && this.selectTarget()
                                        }
                                    }, {
                                        key: "createFakeElement",
                                        value: function() {
                                            var e = "rtl" === document.documentElement.getAttribute("dir");
                                            this.fakeElem = document.createElement("textarea"), this.fakeElem.style.fontSize = "12pt", this.fakeElem.style.border = "0", this.fakeElem.style.padding = "0", this.fakeElem.style.margin = "0", this.fakeElem.style.position = "absolute", this.fakeElem.style[e ? "right" : "left"] = "-9999px";
                                            var t = window.pageYOffset || document.documentElement.scrollTop;
                                            return this.fakeElem.style.top = "".concat(t, "px"), this.fakeElem.setAttribute("readonly", ""), this.fakeElem.value = this.text, this.fakeElem
                                        }
                                    }, {
                                        key: "selectFake",
                                        value: function() {
                                            var e = this,
                                                t = this.createFakeElement();
                                            this.fakeHandlerCallback = function() {
                                                return e.removeFake()
                                            }, this.fakeHandler = this.container.addEventListener("click", this.fakeHandlerCallback) || !0, this.container.appendChild(t), this.selectedText = l()(t), this.copyText(), this.removeFake()
                                        }
                                    }, {
                                        key: "removeFake",
                                        value: function() {
                                            this.fakeHandler && (this.container.removeEventListener("click", this.fakeHandlerCallback), this.fakeHandler = null, this.fakeHandlerCallback = null), this.fakeElem && (this.container.removeChild(this.fakeElem), this.fakeElem = null)
                                        }
                                    }, {
                                        key: "selectTarget",
                                        value: function() {
                                            this.selectedText = l()(this.target), this.copyText()
                                        }
                                    }, {
                                        key: "copyText",
                                        value: function() {
                                            var e;
                                            try {
                                                e = document.execCommand(this.action)
                                            } catch (t) {
                                                e = !1
                                            }
                                            this.handleResult(e)
                                        }
                                    }, {
                                        key: "handleResult",
                                        value: function(e) {
                                            this.emitter.emit(e ? "success" : "error", {
                                                action: this.action,
                                                text: this.selectedText,
                                                trigger: this.trigger,
                                                clearSelection: this.clearSelection.bind(this)
                                            })
                                        }
                                    }, {
                                        key: "clearSelection",
                                        value: function() {
                                            this.trigger && this.trigger.focus(), document.activeElement.blur(), window.getSelection().removeAllRanges()
                                        }
                                    }, {
                                        key: "destroy",
                                        value: function() {
                                            this.removeFake()
                                        }
                                    }, {
                                        key: "action",
                                        set: function() {
                                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "copy";
                                            if (this._action = e, "copy" !== this._action && "cut" !== this._action) throw new Error('Invalid "action" value, use either "copy" or "cut"')
                                        },
                                        get: function() {
                                            return this._action
                                        }
                                    }, {
                                        key: "target",
                                        set: function(e) {
                                            if (void 0 !== e) {
                                                if (!e || "object" !== u(e) || 1 !== e.nodeType) throw new Error('Invalid "target" value, use a valid Element');
                                                if ("copy" === this.action && e.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                                                if ("cut" === this.action && (e.hasAttribute("readonly") || e.hasAttribute("disabled"))) throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                                                this._target = e
                                            }
                                        },
                                        get: function() {
                                            return this._target
                                        }
                                    }]) && function(e, t) {
                                        for (var n = 0; n < t.length; n++) {
                                            var r = t[n];
                                            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                                        }
                                    }(e.prototype, t), e
                                }();

                                function h(e) {
                                    return (h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                        return typeof e
                                    } : function(e) {
                                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                    })(e)
                                }

                                function d(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                                    }
                                }

                                function p(e, t) {
                                    return (p = Object.setPrototypeOf || function(e, t) {
                                        return e.__proto__ = t, e
                                    })(e, t)
                                }

                                function f(e, t) {
                                    return !t || "object" !== h(t) && "function" != typeof t ? function(e) {
                                        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                        return e
                                    }(e) : t
                                }

                                function g(e) {
                                    return (g = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                                        return e.__proto__ || Object.getPrototypeOf(e)
                                    })(e)
                                }

                                function m(e, t) {
                                    var n = "data-clipboard-".concat(e);
                                    if (t.hasAttribute(n)) return t.getAttribute(n)
                                }
                                var y = function(e) {
                                    ! function(e, t) {
                                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                                        e.prototype = Object.create(t && t.prototype, {
                                            constructor: {
                                                value: e,
                                                writable: !0,
                                                configurable: !0
                                            }
                                        }), t && p(e, t)
                                    }(l, e);
                                    var t, n, r, s, i, a = (s = l, i = function() {
                                        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                                        if (Reflect.construct.sham) return !1;
                                        if ("function" == typeof Proxy) return !0;
                                        try {
                                            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0
                                        } catch (e) {
                                            return !1
                                        }
                                    }(), function() {
                                        var e, t = g(s);
                                        if (i) {
                                            var n = g(this).constructor;
                                            e = Reflect.construct(t, arguments, n)
                                        } else e = t.apply(this, arguments);
                                        return f(this, e)
                                    });

                                    function l(e, t) {
                                        var n;
                                        return function(e, t) {
                                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                                        }(this, l), (n = a.call(this)).resolveOptions(t), n.listenClick(e), n
                                    }
                                    return t = l, r = [{
                                        key: "isSupported",
                                        value: function() {
                                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"],
                                                t = "string" == typeof e ? [e] : e,
                                                n = !!document.queryCommandSupported;
                                            return t.forEach(function(e) {
                                                n = n && !!document.queryCommandSupported(e)
                                            }), n
                                        }
                                    }], (n = [{
                                        key: "resolveOptions",
                                        value: function() {
                                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                            this.action = "function" == typeof e.action ? e.action : this.defaultAction, this.target = "function" == typeof e.target ? e.target : this.defaultTarget, this.text = "function" == typeof e.text ? e.text : this.defaultText, this.container = "object" === h(e.container) ? e.container : document.body
                                        }
                                    }, {
                                        key: "listenClick",
                                        value: function(e) {
                                            var t = this;
                                            this.listener = o()(e, "click", function(e) {
                                                return t.onClick(e)
                                            })
                                        }
                                    }, {
                                        key: "onClick",
                                        value: function(e) {
                                            var t = e.delegateTarget || e.currentTarget;
                                            this.clipboardAction && (this.clipboardAction = null), this.clipboardAction = new c({
                                                action: this.action(t),
                                                target: this.target(t),
                                                text: this.text(t),
                                                container: this.container,
                                                trigger: t,
                                                emitter: this
                                            })
                                        }
                                    }, {
                                        key: "defaultAction",
                                        value: function(e) {
                                            return m("action", e)
                                        }
                                    }, {
                                        key: "defaultTarget",
                                        value: function(e) {
                                            var t = m("target", e);
                                            if (t) return document.querySelector(t)
                                        }
                                    }, {
                                        key: "defaultText",
                                        value: function(e) {
                                            return m("text", e)
                                        }
                                    }, {
                                        key: "destroy",
                                        value: function() {
                                            this.listener.destroy(), this.clipboardAction && (this.clipboardAction.destroy(), this.clipboardAction = null)
                                        }
                                    }]) && d(t.prototype, n), r && d(t, r), l
                                }(s())
                            },
                            828: function(e) {
                                if ("undefined" != typeof Element && !Element.prototype.matches) {
                                    var t = Element.prototype;
                                    t.matches = t.matchesSelector || t.mozMatchesSelector || t.msMatchesSelector || t.oMatchesSelector || t.webkitMatchesSelector
                                }
                                e.exports = function(e, t) {
                                    for (; e && 9 !== e.nodeType;) {
                                        if ("function" == typeof e.matches && e.matches(t)) return e;
                                        e = e.parentNode
                                    }
                                }
                            },
                            438: function(e, t, n) {
                                var r = n(828);

                                function s(e, t, n, r, s) {
                                    var o = i.apply(this, arguments);
                                    return e.addEventListener(n, o, s), {
                                        destroy: function() {
                                            e.removeEventListener(n, o, s)
                                        }
                                    }
                                }

                                function i(e, t, n, s) {
                                    return function(n) {
                                        n.delegateTarget = r(n.target, t), n.delegateTarget && s.call(e, n)
                                    }
                                }
                                e.exports = function(e, t, n, r, i) {
                                    return "function" == typeof e.addEventListener ? s.apply(null, arguments) : "function" == typeof n ? s.bind(null, document).apply(null, arguments) : ("string" == typeof e && (e = document.querySelectorAll(e)), Array.prototype.map.call(e, function(e) {
                                        return s(e, t, n, r, i)
                                    }))
                                }
                            },
                            879: function(e, t) {
                                t.node = function(e) {
                                    return void 0 !== e && e instanceof HTMLElement && 1 === e.nodeType
                                }, t.nodeList = function(e) {
                                    var n = Object.prototype.toString.call(e);
                                    return void 0 !== e && ("[object NodeList]" === n || "[object HTMLCollection]" === n) && "length" in e && (0 === e.length || t.node(e[0]))
                                }, t.string = function(e) {
                                    return "string" == typeof e || e instanceof String
                                }, t.fn = function(e) {
                                    return "[object Function]" === Object.prototype.toString.call(e)
                                }
                            },
                            370: function(e, t, n) {
                                var r = n(879),
                                    s = n(438);
                                e.exports = function(e, t, n) {
                                    if (!e && !t && !n) throw new Error("Missing required arguments");
                                    if (!r.string(t)) throw new TypeError("Second argument must be a String");
                                    if (!r.fn(n)) throw new TypeError("Third argument must be a Function");
                                    if (r.node(e)) return function(e, t, n) {
                                        return e.addEventListener(t, n), {
                                            destroy: function() {
                                                e.removeEventListener(t, n)
                                            }
                                        }
                                    }(e, t, n);
                                    if (r.nodeList(e)) return function(e, t, n) {
                                        return Array.prototype.forEach.call(e, function(e) {
                                            e.addEventListener(t, n)
                                        }), {
                                            destroy: function() {
                                                Array.prototype.forEach.call(e, function(e) {
                                                    e.removeEventListener(t, n)
                                                })
                                            }
                                        }
                                    }(e, t, n);
                                    if (r.string(e)) return function(e, t, n) {
                                        return s(document.body, e, t, n)
                                    }(e, t, n);
                                    throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")
                                }
                            },
                            817: function(e) {
                                e.exports = function(e) {
                                    var t;
                                    if ("SELECT" === e.nodeName) e.focus(), t = e.value;
                                    else if ("INPUT" === e.nodeName || "TEXTAREA" === e.nodeName) {
                                        var n = e.hasAttribute("readonly");
                                        n || e.setAttribute("readonly", ""), e.select(), e.setSelectionRange(0, e.value.length), n || e.removeAttribute("readonly"), t = e.value
                                    } else {
                                        e.hasAttribute("contenteditable") && e.focus();
                                        var r = window.getSelection(),
                                            s = document.createRange();
                                        s.selectNodeContents(e), r.removeAllRanges(), r.addRange(s), t = r.toString()
                                    }
                                    return t
                                }
                            },
                            279: function(e) {
                                function t() {}
                                t.prototype = {
                                    on: function(e, t, n) {
                                        var r = this.e || (this.e = {});
                                        return (r[e] || (r[e] = [])).push({
                                            fn: t,
                                            ctx: n
                                        }), this
                                    },
                                    once: function(e, t, n) {
                                        var r = this;

                                        function s() {
                                            r.off(e, s), t.apply(n, arguments)
                                        }
                                        return s._ = t, this.on(e, s, n)
                                    },
                                    emit: function(e) {
                                        for (var t = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[e] || []).slice(), r = 0, s = n.length; r < s; r++) n[r].fn.apply(n[r].ctx, t);
                                        return this
                                    },
                                    off: function(e, t) {
                                        var n = this.e || (this.e = {}),
                                            r = n[e],
                                            s = [];
                                        if (r && t)
                                            for (var i = 0, o = r.length; i < o; i++) r[i].fn !== t && r[i].fn._ !== t && s.push(r[i]);
                                        return s.length ? n[e] = s : delete n[e], this
                                    }
                                }, e.exports = t, e.exports.TinyEmitter = t
                            }
                        },
                        t = {};

                    function n(r) {
                        if (t[r]) return t[r].exports;
                        var s = t[r] = {
                            exports: {}
                        };
                        return e[r](s, s.exports, n), s.exports
                    }
                    return n.n = function(e) {
                        var t = e && e.__esModule ? function() {
                            return e.default
                        } : function() {
                            return e
                        };
                        return n.d(t, {
                            a: t
                        }), t
                    }, n.d = function(e, t) {
                        for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {
                            enumerable: !0,
                            get: t[r]
                        })
                    }, n.o = function(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t)
                    }, n(134)
                }().default
            }, e.exports = r()
        },
        wZee: function(e, t, n) {
            var r = function(e) {
                var t = /\blang(?:uage)?-([\w-]+)\b/i,
                    n = 0,
                    r = {
                        manual: e.Prism && e.Prism.manual,
                        disableWorkerMessageHandler: e.Prism && e.Prism.disableWorkerMessageHandler,
                        util: {
                            encode: function e(t) {
                                return t instanceof s ? new s(t.type, e(t.content), t.alias) : Array.isArray(t) ? t.map(e) : t.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ")
                            },
                            type: function(e) {
                                return Object.prototype.toString.call(e).slice(8, -1)
                            },
                            objId: function(e) {
                                return e.__id || Object.defineProperty(e, "__id", {
                                    value: ++n
                                }), e.__id
                            },
                            clone: function e(t, n) {
                                var s, i;
                                switch (n = n || {}, r.util.type(t)) {
                                    case "Object":
                                        if (i = r.util.objId(t), n[i]) return n[i];
                                        for (var o in n[i] = s = {}, t) t.hasOwnProperty(o) && (s[o] = e(t[o], n));
                                        return s;
                                    case "Array":
                                        return i = r.util.objId(t), n[i] ? n[i] : (n[i] = s = [], t.forEach(function(t, r) {
                                            s[r] = e(t, n)
                                        }), s);
                                    default:
                                        return t
                                }
                            },
                            getLanguage: function(e) {
                                for (; e && !t.test(e.className);) e = e.parentElement;
                                return e ? (e.className.match(t) || [, "none"])[1].toLowerCase() : "none"
                            },
                            currentScript: function() {
                                if ("undefined" == typeof document) return null;
                                if ("currentScript" in document) return document.currentScript;
                                try {
                                    throw new Error
                                } catch (r) {
                                    var e = (/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(r.stack) || [])[1];
                                    if (e) {
                                        var t = document.getElementsByTagName("script");
                                        for (var n in t)
                                            if (t[n].src == e) return t[n]
                                    }
                                    return null
                                }
                            },
                            isActive: function(e, t, n) {
                                for (var r = "no-" + t; e;) {
                                    var s = e.classList;
                                    if (s.contains(t)) return !0;
                                    if (s.contains(r)) return !1;
                                    e = e.parentElement
                                }
                                return !!n
                            }
                        },
                        languages: {
                            extend: function(e, t) {
                                var n = r.util.clone(r.languages[e]);
                                for (var s in t) n[s] = t[s];
                                return n
                            },
                            insertBefore: function(e, t, n, s) {
                                var i = (s = s || r.languages)[e],
                                    o = {};
                                for (var a in i)
                                    if (i.hasOwnProperty(a)) {
                                        if (a == t)
                                            for (var l in n) n.hasOwnProperty(l) && (o[l] = n[l]);
                                        n.hasOwnProperty(a) || (o[a] = i[a])
                                    } var u = s[e];
                                return s[e] = o, r.languages.DFS(r.languages, function(t, n) {
                                    n === u && t != e && (this[t] = o)
                                }), o
                            },
                            DFS: function e(t, n, s, i) {
                                i = i || {};
                                var o = r.util.objId;
                                for (var a in t)
                                    if (t.hasOwnProperty(a)) {
                                        n.call(t, a, t[a], s || a);
                                        var l = t[a],
                                            u = r.util.type(l);
                                        "Object" !== u || i[o(l)] ? "Array" !== u || i[o(l)] || (i[o(l)] = !0, e(l, n, a, i)) : (i[o(l)] = !0, e(l, n, null, i))
                                    }
                            }
                        },
                        plugins: {},
                        highlightAll: function(e, t) {
                            r.highlightAllUnder(document, e, t)
                        },
                        highlightAllUnder: function(e, t, n) {
                            var s = {
                                callback: n,
                                container: e,
                                selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
                            };
                            r.hooks.run("before-highlightall", s), s.elements = Array.prototype.slice.apply(s.container.querySelectorAll(s.selector)), r.hooks.run("before-all-elements-highlight", s);
                            for (var i, o = 0; i = s.elements[o++];) r.highlightElement(i, !0 === t, s.callback)
                        },
                        highlightElement: function(n, s, i) {
                            var o = r.util.getLanguage(n),
                                a = r.languages[o];
                            n.className = n.className.replace(t, "").replace(/\s+/g, " ") + " language-" + o;
                            var l = n.parentElement;
                            l && "pre" === l.nodeName.toLowerCase() && (l.className = l.className.replace(t, "").replace(/\s+/g, " ") + " language-" + o);
                            var u = {
                                element: n,
                                language: o,
                                grammar: a,
                                code: n.textContent
                            };

                            function c(e) {
                                u.highlightedCode = e, r.hooks.run("before-insert", u), u.element.innerHTML = u.highlightedCode, r.hooks.run("after-highlight", u), r.hooks.run("complete", u), i && i.call(u.element)
                            }
                            if (r.hooks.run("before-sanity-check", u), !u.code) return r.hooks.run("complete", u), void(i && i.call(u.element));
                            if (r.hooks.run("before-highlight", u), u.grammar)
                                if (s && e.Worker) {
                                    var h = new Worker(r.filename);
                                    h.onmessage = function(e) {
                                        c(e.data)
                                    }, h.postMessage(JSON.stringify({
                                        language: u.language,
                                        code: u.code,
                                        immediateClose: !0
                                    }))
                                } else c(r.highlight(u.code, u.grammar, u.language));
                            else c(r.util.encode(u.code))
                        },
                        highlight: function(e, t, n) {
                            var i = {
                                code: e,
                                grammar: t,
                                language: n
                            };
                            return r.hooks.run("before-tokenize", i), i.tokens = r.tokenize(i.code, i.grammar), r.hooks.run("after-tokenize", i), s.stringify(r.util.encode(i.tokens), i.language)
                        },
                        tokenize: function(e, t) {
                            var n = t.rest;
                            if (n) {
                                for (var r in n) t[r] = n[r];
                                delete t.rest
                            }
                            var s = new a;
                            return l(s, s.head, e), o(e, s, t, s.head, 0),
                                function(e) {
                                    for (var t = [], n = e.head.next; n !== e.tail;) t.push(n.value), n = n.next;
                                    return t
                                }(s)
                        },
                        hooks: {
                            all: {},
                            add: function(e, t) {
                                var n = r.hooks.all;
                                n[e] = n[e] || [], n[e].push(t)
                            },
                            run: function(e, t) {
                                var n = r.hooks.all[e];
                                if (n && n.length)
                                    for (var s, i = 0; s = n[i++];) s(t)
                            }
                        },
                        Token: s
                    };

                function s(e, t, n, r) {
                    this.type = e, this.content = t, this.alias = n, this.length = 0 | (r || "").length
                }

                function i(e, t, n, r) {
                    e.lastIndex = t;
                    var s = e.exec(n);
                    if (s && r && s[1]) {
                        var i = s[1].length;
                        s.index += i, s[0] = s[0].slice(i)
                    }
                    return s
                }

                function o(e, t, n, a, c, h) {
                    for (var d in n)
                        if (n.hasOwnProperty(d) && n[d]) {
                            var p = n[d];
                            p = Array.isArray(p) ? p : [p];
                            for (var f = 0; f < p.length; ++f) {
                                if (h && h.cause == d + "," + f) return;
                                var g = p[f],
                                    m = g.inside,
                                    y = !!g.lookbehind,
                                    b = !!g.greedy,
                                    v = g.alias;
                                if (b && !g.pattern.global) {
                                    var _ = g.pattern.toString().match(/[imsuy]*$/)[0];
                                    g.pattern = RegExp(g.pattern.source, _ + "g")
                                }
                                for (var w = g.pattern || g, C = a.next, S = c; C !== t.tail && !(h && S >= h.reach); S += C.value.length, C = C.next) {
                                    var x = C.value;
                                    if (t.length > e.length) return;
                                    if (!(x instanceof s)) {
                                        var E, k = 1;
                                        if (b) {
                                            if (!(E = i(w, S, e, y))) break;
                                            var A = E.index,
                                                D = E.index + E[0].length,
                                                T = S;
                                            for (T += C.value.length; A >= T;) T += (C = C.next).value.length;
                                            if (S = T -= C.value.length, C.value instanceof s) continue;
                                            for (var O = C; O !== t.tail && (T < D || "string" == typeof O.value); O = O.next) k++, T += O.value.length;
                                            k--, x = e.slice(S, T), E.index -= S
                                        } else if (!(E = i(w, 0, x, y))) continue;
                                        var F = E[0],
                                            P = x.slice(0, A = E.index),
                                            I = x.slice(A + F.length),
                                            M = S + x.length;
                                        h && M > h.reach && (h.reach = M);
                                        var R = C.prev;
                                        P && (R = l(t, R, P), S += P.length), u(t, R, k), C = l(t, R, new s(d, m ? r.tokenize(F, m) : F, v, F)), I && l(t, C, I), k > 1 && o(e, t, n, C.prev, S, {
                                            cause: d + "," + f,
                                            reach: M
                                        })
                                    }
                                }
                            }
                        }
                }

                function a() {
                    var e = {
                            value: null,
                            prev: null,
                            next: null
                        },
                        t = {
                            value: null,
                            prev: e,
                            next: null
                        };
                    e.next = t, this.head = e, this.tail = t, this.length = 0
                }

                function l(e, t, n) {
                    var r = t.next,
                        s = {
                            value: n,
                            prev: t,
                            next: r
                        };
                    return t.next = s, r.prev = s, e.length++, s
                }

                function u(e, t, n) {
                    for (var r = t.next, s = 0; s < n && r !== e.tail; s++) r = r.next;
                    t.next = r, r.prev = t, e.length -= s
                }
                if (e.Prism = r, s.stringify = function e(t, n) {
                        if ("string" == typeof t) return t;
                        if (Array.isArray(t)) {
                            var s = "";
                            return t.forEach(function(t) {
                                s += e(t, n)
                            }), s
                        }
                        var i = {
                                type: t.type,
                                content: e(t.content, n),
                                tag: "span",
                                classes: ["token", t.type],
                                attributes: {},
                                language: n
                            },
                            o = t.alias;
                        o && (Array.isArray(o) ? Array.prototype.push.apply(i.classes, o) : i.classes.push(o)), r.hooks.run("wrap", i);
                        var a = "";
                        for (var l in i.attributes) a += " " + l + '="' + (i.attributes[l] || "").replace(/"/g, "&quot;") + '"';
                        return "<" + i.tag + ' class="' + i.classes.join(" ") + '"' + a + ">" + i.content + "</" + i.tag + ">"
                    }, !e.document) return e.addEventListener ? (r.disableWorkerMessageHandler || e.addEventListener("message", function(t) {
                    var n = JSON.parse(t.data),
                        s = n.language,
                        i = n.immediateClose;
                    e.postMessage(r.highlight(n.code, r.languages[s], s)), i && e.close()
                }, !1), r) : r;
                var c = r.util.currentScript();

                function h() {
                    r.manual || r.highlightAll()
                }
                if (c && (r.filename = c.src, c.hasAttribute("data-manual") && (r.manual = !0)), !r.manual) {
                    var d = document.readyState;
                    "loading" === d || "interactive" === d && c && c.defer ? document.addEventListener("DOMContentLoaded", h) : window.requestAnimationFrame ? window.requestAnimationFrame(h) : window.setTimeout(h, 16)
                }
                return r
            }("undefined" != typeof window ? window : "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {});
            e.exports && (e.exports = r), "undefined" != typeof global && (global.Prism = r), r.languages.markup = {
                    comment: /<!--[\s\S]*?-->/,
                    prolog: /<\?[\s\S]+?\?>/,
                    doctype: {
                        pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
                        greedy: !0,
                        inside: {
                            "internal-subset": {
                                pattern: /(\[)[\s\S]+(?=\]>$)/,
                                lookbehind: !0,
                                greedy: !0,
                                inside: null
                            },
                            string: {
                                pattern: /"[^"]*"|'[^']*'/,
                                greedy: !0
                            },
                            punctuation: /^<!|>$|[[\]]/,
                            "doctype-tag": /^DOCTYPE/,
                            name: /[^\s<>'"]+/
                        }
                    },
                    cdata: /<!\[CDATA\[[\s\S]*?]]>/i,
                    tag: {
                        pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
                        greedy: !0,
                        inside: {
                            tag: {
                                pattern: /^<\/?[^\s>\/]+/,
                                inside: {
                                    punctuation: /^<\/?/,
                                    namespace: /^[^\s>\/:]+:/
                                }
                            },
                            "attr-value": {
                                pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
                                inside: {
                                    punctuation: [{
                                        pattern: /^=/,
                                        alias: "attr-equals"
                                    }, /"|'/]
                                }
                            },
                            punctuation: /\/?>/,
                            "attr-name": {
                                pattern: /[^\s>\/]+/,
                                inside: {
                                    namespace: /^[^\s>\/:]+:/
                                }
                            }
                        }
                    },
                    entity: [{
                        pattern: /&[\da-z]{1,8};/i,
                        alias: "named-entity"
                    }, /&#x?[\da-f]{1,8};/i]
                }, r.languages.markup.tag.inside["attr-value"].inside.entity = r.languages.markup.entity, r.languages.markup.doctype.inside["internal-subset"].inside = r.languages.markup, r.hooks.add("wrap", function(e) {
                    "entity" === e.type && (e.attributes.title = e.content.replace(/&amp;/, "&"))
                }), Object.defineProperty(r.languages.markup.tag, "addInlined", {
                    value: function(e, t) {
                        var n = {};
                        n["language-" + t] = {
                            pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
                            lookbehind: !0,
                            inside: r.languages[t]
                        }, n.cdata = /^<!\[CDATA\[|\]\]>$/i;
                        var s = {
                            "included-cdata": {
                                pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
                                inside: n
                            }
                        };
                        s["language-" + t] = {
                            pattern: /[\s\S]+/,
                            inside: r.languages[t]
                        };
                        var i = {};
                        i[e] = {
                            pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
                                return e
                            }), "i"),
                            lookbehind: !0,
                            greedy: !0,
                            inside: s
                        }, r.languages.insertBefore("markup", "cdata", i)
                    }
                }), r.languages.html = r.languages.markup, r.languages.mathml = r.languages.markup, r.languages.svg = r.languages.markup, r.languages.xml = r.languages.extend("markup", {}), r.languages.ssml = r.languages.xml, r.languages.atom = r.languages.xml, r.languages.rss = r.languages.xml,
                function(e) {
                    var t = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
                    e.languages.css = {
                        comment: /\/\*[\s\S]*?\*\//,
                        atrule: {
                            pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
                            inside: {
                                rule: /^@[\w-]+/,
                                "selector-function-argument": {
                                    pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
                                    lookbehind: !0,
                                    alias: "selector"
                                },
                                keyword: {
                                    pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
                                    lookbehind: !0
                                }
                            }
                        },
                        url: {
                            pattern: RegExp("\\burl\\((?:" + t.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
                            greedy: !0,
                            inside: {
                                function: /^url/i,
                                punctuation: /^\(|\)$/,
                                string: {
                                    pattern: RegExp("^" + t.source + "$"),
                                    alias: "url"
                                }
                            }
                        },
                        selector: RegExp("[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|" + t.source + ")*(?=\\s*\\{)"),
                        string: {
                            pattern: t,
                            greedy: !0
                        },
                        property: /(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
                        important: /!important\b/i,
                        function: /[-a-z0-9]+(?=\()/i,
                        punctuation: /[(){};:,]/
                    }, e.languages.css.atrule.inside.rest = e.languages.css;
                    var n = e.languages.markup;
                    n && (n.tag.addInlined("style", "css"), e.languages.insertBefore("inside", "attr-value", {
                        "style-attr": {
                            pattern: /(^|["'\s])style\s*=\s*(?:"[^"]*"|'[^']*')/i,
                            lookbehind: !0,
                            inside: {
                                "attr-value": {
                                    pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
                                    inside: {
                                        style: {
                                            pattern: /(["'])[\s\S]+(?=["']$)/,
                                            lookbehind: !0,
                                            alias: "language-css",
                                            inside: e.languages.css
                                        },
                                        punctuation: [{
                                            pattern: /^=/,
                                            alias: "attr-equals"
                                        }, /"|'/]
                                    }
                                },
                                "attr-name": /^style/i
                            }
                        }
                    }, n.tag))
                }(r), r.languages.clike = {
                    comment: [{
                        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                        lookbehind: !0,
                        greedy: !0
                    }, {
                        pattern: /(^|[^\\:])\/\/.*/,
                        lookbehind: !0,
                        greedy: !0
                    }],
                    string: {
                        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                        greedy: !0
                    },
                    "class-name": {
                        pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,
                        lookbehind: !0,
                        inside: {
                            punctuation: /[.\\]/
                        }
                    },
                    keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
                    boolean: /\b(?:true|false)\b/,
                    function: /\w+(?=\()/,
                    number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
                    operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
                    punctuation: /[{}[\];(),.:]/
                }, r.languages.javascript = r.languages.extend("clike", {
                    "class-name": [r.languages.clike["class-name"], {
                        pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:prototype|constructor))/,
                        lookbehind: !0
                    }],
                    keyword: [{
                        pattern: /((?:^|})\s*)(?:catch|finally)\b/,
                        lookbehind: !0
                    }, {
                        pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\s*[\[$\w\xA0-\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
                        lookbehind: !0
                    }],
                    function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
                    number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
                    operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
                }), r.languages.javascript["class-name"][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/, r.languages.insertBefore("javascript", "keyword", {
                    regex: {
                        pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: {
                            "regex-source": {
                                pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
                                lookbehind: !0,
                                alias: "language-regex",
                                inside: r.languages.regex
                            },
                            "regex-flags": /[a-z]+$/,
                            "regex-delimiter": /^\/|\/$/
                        }
                    },
                    "function-variable": {
                        pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
                        alias: "function"
                    },
                    parameter: [{
                        pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
                        lookbehind: !0,
                        inside: r.languages.javascript
                    }, {
                        pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
                        inside: r.languages.javascript
                    }, {
                        pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
                        lookbehind: !0,
                        inside: r.languages.javascript
                    }, {
                        pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
                        lookbehind: !0,
                        inside: r.languages.javascript
                    }],
                    constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
                }), r.languages.insertBefore("javascript", "string", {
                    "template-string": {
                        pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,
                        greedy: !0,
                        inside: {
                            "template-punctuation": {
                                pattern: /^`|`$/,
                                alias: "string"
                            },
                            interpolation: {
                                pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,
                                lookbehind: !0,
                                inside: {
                                    "interpolation-punctuation": {
                                        pattern: /^\${|}$/,
                                        alias: "punctuation"
                                    },
                                    rest: r.languages.javascript
                                }
                            },
                            string: /[\s\S]+/
                        }
                    }
                }), r.languages.markup && r.languages.markup.tag.addInlined("script", "javascript"), r.languages.js = r.languages.javascript,
                function() {
                    if ("undefined" != typeof self && self.Prism && self.document) {
                        Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector);
                        var e = window.Prism,
                            t = {
                                js: "javascript",
                                py: "python",
                                rb: "ruby",
                                ps1: "powershell",
                                psm1: "powershell",
                                sh: "bash",
                                bat: "batch",
                                h: "c",
                                tex: "latex"
                            },
                            n = "data-src-status",
                            r = 'pre[data-src]:not([data-src-status="loaded"]):not([data-src-status="loading"])',
                            s = /\blang(?:uage)?-([\w-]+)\b/i;
                        e.hooks.add("before-highlightall", function(e) {
                            e.selector += ", " + r
                        }), e.hooks.add("before-sanity-check", function(s) {
                            var i = s.element;
                            if (i.matches(r)) {
                                s.code = "", i.setAttribute(n, "loading");
                                var a = i.appendChild(document.createElement("CODE"));
                                a.textContent = "Loading\u2026";
                                var l = i.getAttribute("data-src"),
                                    u = s.language;
                                if ("none" === u) {
                                    var c = (/\.(\w+)$/.exec(l) || [, "none"])[1];
                                    u = t[c] || c
                                }
                                o(a, u), o(i, u);
                                var h = e.plugins.autoloader;
                                h && h.loadLanguages(u);
                                var d = new XMLHttpRequest;
                                d.open("GET", l, !0), d.onreadystatechange = function() {
                                    4 == d.readyState && (d.status < 400 && d.responseText ? (i.setAttribute(n, "loaded"), a.textContent = d.responseText, e.highlightElement(a)) : (i.setAttribute(n, "failed"), a.textContent = d.status >= 400 ? "\u2716 Error " + d.status + " while fetching file: " + d.statusText : "\u2716 Error: File does not exist or is empty"))
                                }, d.send(null)
                            }
                        }), e.plugins.fileHighlight = {
                            highlight: function(t) {
                                for (var n, s = (t || document).querySelectorAll(r), i = 0; n = s[i++];) e.highlightElement(n)
                            }
                        };
                        var i = !1;
                        e.fileHighlight = function() {
                            i || (console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."), i = !0), e.plugins.fileHighlight.highlight.apply(this, arguments)
                        }
                    }

                    function o(e, t) {
                        var n = e.className;
                        n = n.replace(s, " ") + " language-" + t, e.className = n.replace(/\s+/g, " ").trim()
                    }
                }()
        },
        zUnb: function(e, t, n) {
            "use strict";

            function r(e) {
                return "function" == typeof e
            }
            n.r(t);
            let s = !1;
            const i = {
                Promise: void 0,
                set useDeprecatedSynchronousErrorHandling(e) {
                    if (e) {
                        const e = new Error;
                        console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" + e.stack)
                    } else s && console.log("RxJS: Back to a better error behavior. Thank you. <3");
                    s = e
                },
                get useDeprecatedSynchronousErrorHandling() {
                    return s
                }
            };

            function o(e) {
                setTimeout(() => {
                    throw e
                }, 0)
            }
            const a = {
                    closed: !0,
                    next(e) {},
                    error(e) {
                        if (i.useDeprecatedSynchronousErrorHandling) throw e;
                        o(e)
                    },
                    complete() {}
                },
                l = (() => Array.isArray || (e => e && "number" == typeof e.length))();

            function u(e) {
                return null !== e && "object" == typeof e
            }
            const c = (() => {
                function e(e) {
                    return Error.call(this), this.message = e ? `${e.length} errors occurred during unsubscription:\n${e.map((e,t)=>`${t+1}) ${e.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = e, this
                }
                return e.prototype = Object.create(Error.prototype), e
            })();
            let h = (() => {
                class e {
                    constructor(e) {
                        this.closed = !1, this._parentOrParents = null, this._subscriptions = null, e && (this._ctorUnsubscribe = !0, this._unsubscribe = e)
                    }
                    unsubscribe() {
                        let t;
                        if (this.closed) return;
                        let {
                            _parentOrParents: n,
                            _ctorUnsubscribe: s,
                            _unsubscribe: i,
                            _subscriptions: o
                        } = this;
                        if (this.closed = !0, this._parentOrParents = null, this._subscriptions = null, n instanceof e) n.remove(this);
                        else if (null !== n)
                            for (let e = 0; e < n.length; ++e) n[e].remove(this);
                        if (r(i)) {
                            s && (this._unsubscribe = void 0);
                            try {
                                i.call(this)
                            } catch (a) {
                                t = a instanceof c ? d(a.errors) : [a]
                            }
                        }
                        if (l(o)) {
                            let e = -1,
                                n = o.length;
                            for (; ++e < n;) {
                                const n = o[e];
                                if (u(n)) try {
                                    n.unsubscribe()
                                } catch (a) {
                                    t = t || [], a instanceof c ? t = t.concat(d(a.errors)) : t.push(a)
                                }
                            }
                        }
                        if (t) throw new c(t)
                    }
                    add(t) {
                        let n = t;
                        if (!t) return e.EMPTY;
                        switch (typeof t) {
                            case "function":
                                n = new e(t);
                            case "object":
                                if (n === this || n.closed || "function" != typeof n.unsubscribe) return n;
                                if (this.closed) return n.unsubscribe(), n;
                                if (!(n instanceof e)) {
                                    const t = n;
                                    n = new e, n._subscriptions = [t]
                                }
                                break;
                            default:
                                throw new Error("unrecognized teardown " + t + " added to Subscription.")
                        }
                        let {
                            _parentOrParents: r
                        } = n;
                        if (null === r) n._parentOrParents = this;
                        else if (r instanceof e) {
                            if (r === this) return n;
                            n._parentOrParents = [r, this]
                        } else {
                            if (-1 !== r.indexOf(this)) return n;
                            r.push(this)
                        }
                        const s = this._subscriptions;
                        return null === s ? this._subscriptions = [n] : s.push(n), n
                    }
                    remove(e) {
                        const t = this._subscriptions;
                        if (t) {
                            const n = t.indexOf(e); - 1 !== n && t.splice(n, 1)
                        }
                    }
                }
                return e.EMPTY = function(e) {
                    return e.closed = !0, e
                }(new e), e
            })();

            function d(e) {
                return e.reduce((e, t) => e.concat(t instanceof c ? t.errors : t), [])
            }
            const p = (() => "function" == typeof Symbol ? Symbol("rxSubscriber") : "@@rxSubscriber_" + Math.random())();
            class f extends h {
                constructor(e, t, n) {
                    switch (super(), this.syncErrorValue = null, this.syncErrorThrown = !1, this.syncErrorThrowable = !1, this.isStopped = !1, arguments.length) {
                        case 0:
                            this.destination = a;
                            break;
                        case 1:
                            if (!e) {
                                this.destination = a;
                                break
                            }
                            if ("object" == typeof e) {
                                e instanceof f ? (this.syncErrorThrowable = e.syncErrorThrowable, this.destination = e, e.add(this)) : (this.syncErrorThrowable = !0, this.destination = new g(this, e));
                                break
                            }
                        default:
                            this.syncErrorThrowable = !0, this.destination = new g(this, e, t, n)
                    }
                } [p]() {
                    return this
                }
                static create(e, t, n) {
                    const r = new f(e, t, n);
                    return r.syncErrorThrowable = !1, r
                }
                next(e) {
                    this.isStopped || this._next(e)
                }
                error(e) {
                    this.isStopped || (this.isStopped = !0, this._error(e))
                }
                complete() {
                    this.isStopped || (this.isStopped = !0, this._complete())
                }
                unsubscribe() {
                    this.closed || (this.isStopped = !0, super.unsubscribe())
                }
                _next(e) {
                    this.destination.next(e)
                }
                _error(e) {
                    this.destination.error(e), this.unsubscribe()
                }
                _complete() {
                    this.destination.complete(), this.unsubscribe()
                }
                _unsubscribeAndRecycle() {
                    const {
                        _parentOrParents: e
                    } = this;
                    return this._parentOrParents = null, this.unsubscribe(), this.closed = !1, this.isStopped = !1, this._parentOrParents = e, this
                }
            }
            class g extends f {
                constructor(e, t, n, s) {
                    let i;
                    super(), this._parentSubscriber = e;
                    let o = this;
                    r(t) ? i = t : t && (i = t.next, n = t.error, s = t.complete, t !== a && (o = Object.create(t), r(o.unsubscribe) && this.add(o.unsubscribe.bind(o)), o.unsubscribe = this.unsubscribe.bind(this))), this._context = o, this._next = i, this._error = n, this._complete = s
                }
                next(e) {
                    if (!this.isStopped && this._next) {
                        const {
                            _parentSubscriber: t
                        } = this;
                        i.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable ? this.__tryOrSetError(t, this._next, e) && this.unsubscribe() : this.__tryOrUnsub(this._next, e)
                    }
                }
                error(e) {
                    if (!this.isStopped) {
                        const {
                            _parentSubscriber: t
                        } = this, {
                            useDeprecatedSynchronousErrorHandling: n
                        } = i;
                        if (this._error) n && t.syncErrorThrowable ? (this.__tryOrSetError(t, this._error, e), this.unsubscribe()) : (this.__tryOrUnsub(this._error, e), this.unsubscribe());
                        else if (t.syncErrorThrowable) n ? (t.syncErrorValue = e, t.syncErrorThrown = !0) : o(e), this.unsubscribe();
                        else {
                            if (this.unsubscribe(), n) throw e;
                            o(e)
                        }
                    }
                }
                complete() {
                    if (!this.isStopped) {
                        const {
                            _parentSubscriber: e
                        } = this;
                        if (this._complete) {
                            const t = () => this._complete.call(this._context);
                            i.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable ? (this.__tryOrSetError(e, t), this.unsubscribe()) : (this.__tryOrUnsub(t), this.unsubscribe())
                        } else this.unsubscribe()
                    }
                }
                __tryOrUnsub(e, t) {
                    try {
                        e.call(this._context, t)
                    } catch (n) {
                        if (this.unsubscribe(), i.useDeprecatedSynchronousErrorHandling) throw n;
                        o(n)
                    }
                }
                __tryOrSetError(e, t, n) {
                    if (!i.useDeprecatedSynchronousErrorHandling) throw new Error("bad call");
                    try {
                        t.call(this._context, n)
                    } catch (r) {
                        return i.useDeprecatedSynchronousErrorHandling ? (e.syncErrorValue = r, e.syncErrorThrown = !0, !0) : (o(r), !0)
                    }
                    return !1
                }
                _unsubscribe() {
                    const {
                        _parentSubscriber: e
                    } = this;
                    this._context = null, this._parentSubscriber = null, e.unsubscribe()
                }
            }
            const m = (() => "function" == typeof Symbol && Symbol.observable || "@@observable")();

            function y(e) {
                return e
            }
            let b = (() => {
                class e {
                    constructor(e) {
                        this._isScalar = !1, e && (this._subscribe = e)
                    }
                    lift(t) {
                        const n = new e;
                        return n.source = this, n.operator = t, n
                    }
                    subscribe(e, t, n) {
                        const {
                            operator: r
                        } = this, s = function(e, t, n) {
                            if (e) {
                                if (e instanceof f) return e;
                                if (e[p]) return e[p]()
                            }
                            return e || t || n ? new f(e, t, n) : new f(a)
                        }(e, t, n);
                        if (s.add(r ? r.call(s, this.source) : this.source || i.useDeprecatedSynchronousErrorHandling && !s.syncErrorThrowable ? this._subscribe(s) : this._trySubscribe(s)), i.useDeprecatedSynchronousErrorHandling && s.syncErrorThrowable && (s.syncErrorThrowable = !1, s.syncErrorThrown)) throw s.syncErrorValue;
                        return s
                    }
                    _trySubscribe(e) {
                        try {
                            return this._subscribe(e)
                        } catch (t) {
                            i.useDeprecatedSynchronousErrorHandling && (e.syncErrorThrown = !0, e.syncErrorValue = t),
                                function(e) {
                                    for (; e;) {
                                        const {
                                            closed: t,
                                            destination: n,
                                            isStopped: r
                                        } = e;
                                        if (t || r) return !1;
                                        e = n && n instanceof f ? n : null
                                    }
                                    return !0
                                }(e) ? e.error(t) : console.warn(t)
                        }
                    }
                    forEach(e, t) {
                        return new(t = v(t))((t, n) => {
                            let r;
                            r = this.subscribe(t => {
                                try {
                                    e(t)
                                } catch (s) {
                                    n(s), r && r.unsubscribe()
                                }
                            }, n, t)
                        })
                    }
                    _subscribe(e) {
                        const {
                            source: t
                        } = this;
                        return t && t.subscribe(e)
                    } [m]() {
                        return this
                    }
                    pipe(...e) {
                        return 0 === e.length ? this : (0 === (t = e).length ? y : 1 === t.length ? t[0] : function(e) {
                            return t.reduce((e, t) => t(e), e)
                        })(this);
                        var t
                    }
                    toPromise(e) {
                        return new(e = v(e))((e, t) => {
                            let n;
                            this.subscribe(e => n = e, e => t(e), () => e(n))
                        })
                    }
                }
                return e.create = t => new e(t), e
            })();

            function v(e) {
                if (e || (e = i.Promise || Promise), !e) throw new Error("no Promise impl found");
                return e
            }
            const _ = (() => {
                function e() {
                    return Error.call(this), this.message = "object unsubscribed", this.name = "ObjectUnsubscribedError", this
                }
                return e.prototype = Object.create(Error.prototype), e
            })();
            class w extends h {
                constructor(e, t) {
                    super(), this.subject = e, this.subscriber = t, this.closed = !1
                }
                unsubscribe() {
                    if (this.closed) return;
                    this.closed = !0;
                    const e = this.subject,
                        t = e.observers;
                    if (this.subject = null, !t || 0 === t.length || e.isStopped || e.closed) return;
                    const n = t.indexOf(this.subscriber); - 1 !== n && t.splice(n, 1)
                }
            }
            class C extends f {
                constructor(e) {
                    super(e), this.destination = e
                }
            }
            let S = (() => {
                class e extends b {
                    constructor() {
                        super(), this.observers = [], this.closed = !1, this.isStopped = !1, this.hasError = !1, this.thrownError = null
                    } [p]() {
                        return new C(this)
                    }
                    lift(e) {
                        const t = new x(this, this);
                        return t.operator = e, t
                    }
                    next(e) {
                        if (this.closed) throw new _;
                        if (!this.isStopped) {
                            const {
                                observers: t
                            } = this, n = t.length, r = t.slice();
                            for (let s = 0; s < n; s++) r[s].next(e)
                        }
                    }
                    error(e) {
                        if (this.closed) throw new _;
                        this.hasError = !0, this.thrownError = e, this.isStopped = !0;
                        const {
                            observers: t
                        } = this, n = t.length, r = t.slice();
                        for (let s = 0; s < n; s++) r[s].error(e);
                        this.observers.length = 0
                    }
                    complete() {
                        if (this.closed) throw new _;
                        this.isStopped = !0;
                        const {
                            observers: e
                        } = this, t = e.length, n = e.slice();
                        for (let r = 0; r < t; r++) n[r].complete();
                        this.observers.length = 0
                    }
                    unsubscribe() {
                        this.isStopped = !0, this.closed = !0, this.observers = null
                    }
                    _trySubscribe(e) {
                        if (this.closed) throw new _;
                        return super._trySubscribe(e)
                    }
                    _subscribe(e) {
                        if (this.closed) throw new _;
                        return this.hasError ? (e.error(this.thrownError), h.EMPTY) : this.isStopped ? (e.complete(), h.EMPTY) : (this.observers.push(e), new w(this, e))
                    }
                    asObservable() {
                        const e = new b;
                        return e.source = this, e
                    }
                }
                return e.create = (e, t) => new x(e, t), e
            })();
            class x extends S {
                constructor(e, t) {
                    super(), this.destination = e, this.source = t
                }
                next(e) {
                    const {
                        destination: t
                    } = this;
                    t && t.next && t.next(e)
                }
                error(e) {
                    const {
                        destination: t
                    } = this;
                    t && t.error && this.destination.error(e)
                }
                complete() {
                    const {
                        destination: e
                    } = this;
                    e && e.complete && this.destination.complete()
                }
                _subscribe(e) {
                    const {
                        source: t
                    } = this;
                    return t ? this.source.subscribe(e) : h.EMPTY
                }
            }

            function E(e) {
                return e && "function" == typeof e.schedule
            }

            function k(e, t) {
                return function(n) {
                    if ("function" != typeof e) throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");
                    return n.lift(new A(e, t))
                }
            }
            class A {
                constructor(e, t) {
                    this.project = e, this.thisArg = t
                }
                call(e, t) {
                    return t.subscribe(new D(e, this.project, this.thisArg))
                }
            }
            class D extends f {
                constructor(e, t, n) {
                    super(e), this.project = t, this.count = 0, this.thisArg = n || this
                }
                _next(e) {
                    let t;
                    try {
                        t = this.project.call(this.thisArg, e, this.count++)
                    } catch (n) {
                        return void this.destination.error(n)
                    }
                    this.destination.next(t)
                }
            }
            const T = e => t => {
                for (let n = 0, r = e.length; n < r && !t.closed; n++) t.next(e[n]);
                t.complete()
            };

            function O() {
                return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator"
            }
            const F = O(),
                P = e => e && "number" == typeof e.length && "function" != typeof e;

            function I(e) {
                return !!e && "function" != typeof e.subscribe && "function" == typeof e.then
            }
            const M = e => {
                if (e && "function" == typeof e[m]) return r = e, e => {
                    const t = r[m]();
                    if ("function" != typeof t.subscribe) throw new TypeError("Provided object does not correctly implement Symbol.observable");
                    return t.subscribe(e)
                };
                if (P(e)) return T(e);
                if (I(e)) return n = e, e => (n.then(t => {
                    e.closed || (e.next(t), e.complete())
                }, t => e.error(t)).then(null, o), e);
                if (e && "function" == typeof e[F]) return t = e, e => {
                    const n = t[F]();
                    for (;;) {
                        let t;
                        try {
                            t = n.next()
                        } catch (r) {
                            return e.error(r), e
                        }
                        if (t.done) {
                            e.complete();
                            break
                        }
                        if (e.next(t.value), e.closed) break
                    }
                    return "function" == typeof n.return && e.add(() => {
                        n.return && n.return()
                    }), e
                }; {
                    const t = u(e) ? "an invalid object" : `'${e}'`;
                    throw new TypeError(`You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)
                }
                var t, n, r
            };

            function R(e, t) {
                return new b(n => {
                    const r = new h;
                    let s = 0;
                    return r.add(t.schedule(function() {
                        s !== e.length ? (n.next(e[s++]), n.closed || r.add(this.schedule())) : n.complete()
                    })), r
                })
            }

            function N(e, t) {
                return t ? function(e, t) {
                    if (null != e) {
                        if (function(e) {
                                return e && "function" == typeof e[m]
                            }(e)) return function(e, t) {
                            return new b(n => {
                                const r = new h;
                                return r.add(t.schedule(() => {
                                    const s = e[m]();
                                    r.add(s.subscribe({
                                        next(e) {
                                            r.add(t.schedule(() => n.next(e)))
                                        },
                                        error(e) {
                                            r.add(t.schedule(() => n.error(e)))
                                        },
                                        complete() {
                                            r.add(t.schedule(() => n.complete()))
                                        }
                                    }))
                                })), r
                            })
                        }(e, t);
                        if (I(e)) return function(e, t) {
                            return new b(n => {
                                const r = new h;
                                return r.add(t.schedule(() => e.then(e => {
                                    r.add(t.schedule(() => {
                                        n.next(e), r.add(t.schedule(() => n.complete()))
                                    }))
                                }, e => {
                                    r.add(t.schedule(() => n.error(e)))
                                }))), r
                            })
                        }(e, t);
                        if (P(e)) return R(e, t);
                        if (function(e) {
                                return e && "function" == typeof e[F]
                            }(e) || "string" == typeof e) return function(e, t) {
                            if (!e) throw new Error("Iterable cannot be null");
                            return new b(n => {
                                const r = new h;
                                let s;
                                return r.add(() => {
                                    s && "function" == typeof s.return && s.return()
                                }), r.add(t.schedule(() => {
                                    s = e[F](), r.add(t.schedule(function() {
                                        if (n.closed) return;
                                        let e, t;
                                        try {
                                            const n = s.next();
                                            e = n.value, t = n.done
                                        } catch (r) {
                                            return void n.error(r)
                                        }
                                        t ? n.complete() : (n.next(e), this.schedule())
                                    }))
                                })), r
                            })
                        }(e, t)
                    }
                    throw new TypeError((null !== e && typeof e || e) + " is not observable")
                }(e, t) : e instanceof b ? e : new b(M(e))
            }
            class L extends f {
                constructor(e) {
                    super(), this.parent = e
                }
                _next(e) {
                    this.parent.notifyNext(e)
                }
                _error(e) {
                    this.parent.notifyError(e), this.unsubscribe()
                }
                _complete() {
                    this.parent.notifyComplete(), this.unsubscribe()
                }
            }
            class j extends f {
                notifyNext(e) {
                    this.destination.next(e)
                }
                notifyError(e) {
                    this.destination.error(e)
                }
                notifyComplete() {
                    this.destination.complete()
                }
            }

            function B(e, t) {
                if (t.closed) return;
                if (e instanceof b) return e.subscribe(t);
                let n;
                try {
                    n = M(e)(t)
                } catch (r) {
                    t.error(r)
                }
                return n
            }

            function V(e, t, n = Number.POSITIVE_INFINITY) {
                return "function" == typeof t ? r => r.pipe(V((n, r) => N(e(n, r)).pipe(k((e, s) => t(n, e, r, s))), n)) : ("number" == typeof t && (n = t), t => t.lift(new U(e, n)))
            }
            class U {
                constructor(e, t = Number.POSITIVE_INFINITY) {
                    this.project = e, this.concurrent = t
                }
                call(e, t) {
                    return t.subscribe(new H(e, this.project, this.concurrent))
                }
            }
            class H extends j {
                constructor(e, t, n = Number.POSITIVE_INFINITY) {
                    super(e), this.project = t, this.concurrent = n, this.hasCompleted = !1, this.buffer = [], this.active = 0, this.index = 0
                }
                _next(e) {
                    this.active < this.concurrent ? this._tryNext(e) : this.buffer.push(e)
                }
                _tryNext(e) {
                    let t;
                    const n = this.index++;
                    try {
                        t = this.project(e, n)
                    } catch (r) {
                        return void this.destination.error(r)
                    }
                    this.active++, this._innerSub(t)
                }
                _innerSub(e) {
                    const t = new L(this),
                        n = this.destination;
                    n.add(t);
                    const r = B(e, t);
                    r !== t && n.add(r)
                }
                _complete() {
                    this.hasCompleted = !0, 0 === this.active && 0 === this.buffer.length && this.destination.complete(), this.unsubscribe()
                }
                notifyNext(e) {
                    this.destination.next(e)
                }
                notifyComplete() {
                    const e = this.buffer;
                    this.active--, e.length > 0 ? this._next(e.shift()) : 0 === this.active && this.hasCompleted && this.destination.complete()
                }
            }

            function z(e = Number.POSITIVE_INFINITY) {
                return V(y, e)
            }

            function q(e, t) {
                return t ? R(e, t) : new b(T(e))
            }

            function G() {
                return function(e) {
                    return e.lift(new W(e))
                }
            }
            class W {
                constructor(e) {
                    this.connectable = e
                }
                call(e, t) {
                    const {
                        connectable: n
                    } = this;
                    n._refCount++;
                    const r = new K(e, n),
                        s = t.subscribe(r);
                    return r.closed || (r.connection = n.connect()), s
                }
            }
            class K extends f {
                constructor(e, t) {
                    super(e), this.connectable = t
                }
                _unsubscribe() {
                    const {
                        connectable: e
                    } = this;
                    if (!e) return void(this.connection = null);
                    this.connectable = null;
                    const t = e._refCount;
                    if (t <= 0) return void(this.connection = null);
                    if (e._refCount = t - 1, t > 1) return void(this.connection = null);
                    const {
                        connection: n
                    } = this, r = e._connection;
                    this.connection = null, !r || n && r !== n || r.unsubscribe()
                }
            }
            class Z extends b {
                constructor(e, t) {
                    super(), this.source = e, this.subjectFactory = t, this._refCount = 0, this._isComplete = !1
                }
                _subscribe(e) {
                    return this.getSubject().subscribe(e)
                }
                getSubject() {
                    const e = this._subject;
                    return e && !e.isStopped || (this._subject = this.subjectFactory()), this._subject
                }
                connect() {
                    let e = this._connection;
                    return e || (this._isComplete = !1, e = this._connection = new h, e.add(this.source.subscribe(new Y(this.getSubject(), this))), e.closed && (this._connection = null, e = h.EMPTY)), e
                }
                refCount() {
                    return G()(this)
                }
            }
            const Q = (() => {
                const e = Z.prototype;
                return {
                    operator: {
                        value: null
                    },
                    _refCount: {
                        value: 0,
                        writable: !0
                    },
                    _subject: {
                        value: null,
                        writable: !0
                    },
                    _connection: {
                        value: null,
                        writable: !0
                    },
                    _subscribe: {
                        value: e._subscribe
                    },
                    _isComplete: {
                        value: e._isComplete,
                        writable: !0
                    },
                    getSubject: {
                        value: e.getSubject
                    },
                    connect: {
                        value: e.connect
                    },
                    refCount: {
                        value: e.refCount
                    }
                }
            })();
            class Y extends C {
                constructor(e, t) {
                    super(e), this.connectable = t
                }
                _error(e) {
                    this._unsubscribe(), super._error(e)
                }
                _complete() {
                    this.connectable._isComplete = !0, this._unsubscribe(), super._complete()
                }
                _unsubscribe() {
                    const e = this.connectable;
                    if (e) {
                        this.connectable = null;
                        const t = e._connection;
                        e._refCount = 0, e._subject = null, e._connection = null, t && t.unsubscribe()
                    }
                }
            }

            function J() {
                return new S
            }

            function X(e) {
                for (let t in e)
                    if (e[t] === X) return t;
                throw Error("Could not find renamed property on target object.")
            }

            function ee(e, t) {
                for (const n in t) t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n])
            }

            function te(e) {
                if ("string" == typeof e) return e;
                if (Array.isArray(e)) return "[" + e.map(te).join(", ") + "]";
                if (null == e) return "" + e;
                if (e.overriddenName) return `${e.overriddenName}`;
                if (e.name) return `${e.name}`;
                const t = e.toString();
                if (null == t) return "" + t;
                const n = t.indexOf("\n");
                return -1 === n ? t : t.substring(0, n)
            }

            function ne(e, t) {
                return null == e || "" === e ? null === t ? "" : t : null == t || "" === t ? e : e + " " + t
            }
            const re = X({
                __forward_ref__: X
            });

            function se(e) {
                return e.__forward_ref__ = se, e.toString = function() {
                    return te(this())
                }, e
            }

            function ie(e) {
                return oe(e) ? e() : e
            }

            function oe(e) {
                return "function" == typeof e && e.hasOwnProperty(re) && e.__forward_ref__ === se
            }
            class ae extends Error {
                constructor(e, t) {
                    super(function(e, t) {
                        return `${e?`NG0${e}: `:""}${t}`
                    }(e, t)), this.code = e
                }
            }

            function le(e) {
                return "string" == typeof e ? e : null == e ? "" : String(e)
            }

            function ue(e) {
                return "function" == typeof e ? e.name || e.toString() : "object" == typeof e && null != e && "function" == typeof e.type ? e.type.name || e.type.toString() : le(e)
            }

            function ce(e, t) {
                const n = t ? ` in ${t}` : "";
                throw new ae("201", `No provider for ${ue(e)} found${n}`)
            }

            function he(e) {
                return {
                    token: e.token,
                    providedIn: e.providedIn || null,
                    factory: e.factory,
                    value: void 0
                }
            }

            function de(e) {
                return {
                    providers: e.providers || [],
                    imports: e.imports || []
                }
            }

            function pe(e) {
                return fe(e, me) || fe(e, be)
            }

            function fe(e, t) {
                return e.hasOwnProperty(t) ? e[t] : null
            }

            function ge(e) {
                return e && (e.hasOwnProperty(ye) || e.hasOwnProperty(ve)) ? e[ye] : null
            }
            const me = X({
                    "\u0275prov": X
                }),
                ye = X({
                    "\u0275inj": X
                }),
                be = X({
                    ngInjectableDef: X
                }),
                ve = X({
                    ngInjectorDef: X
                });
            var _e = function(e) {
                return e[e.Default = 0] = "Default", e[e.Host = 1] = "Host", e[e.Self = 2] = "Self", e[e.SkipSelf = 4] = "SkipSelf", e[e.Optional = 8] = "Optional", e
            }({});
            let we;

            function Ce(e) {
                const t = we;
                return we = e, t
            }

            function Se(e, t, n) {
                const r = pe(e);
                return r && "root" == r.providedIn ? void 0 === r.value ? r.value = r.factory() : r.value : n & _e.Optional ? null : void 0 !== t ? t : void ce(te(e), "Injector")
            }

            function xe(e) {
                return {
                    toString: e
                }.toString()
            }
            var Ee = function(e) {
                    return e[e.OnPush = 0] = "OnPush", e[e.Default = 1] = "Default", e
                }({}),
                ke = function(e) {
                    return e[e.Emulated = 0] = "Emulated", e[e.None = 2] = "None", e[e.ShadowDom = 3] = "ShadowDom", e
                }({});
            const Ae = "undefined" != typeof globalThis && globalThis,
                De = "undefined" != typeof window && window,
                Te = "undefined" != typeof self && "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && self,
                Oe = "undefined" != typeof global && global,
                Fe = Ae || Oe || De || Te,
                Pe = {},
                Ie = [],
                Me = [],
                Re = X({
                    "\u0275cmp": X
                }),
                Ne = X({
                    "\u0275dir": X
                }),
                Le = X({
                    "\u0275pipe": X
                }),
                je = X({
                    "\u0275mod": X
                }),
                Be = X({
                    "\u0275loc": X
                }),
                Ve = X({
                    "\u0275fac": X
                }),
                Ue = X({
                    __NG_ELEMENT_ID__: X
                });
            let $e = 0;

            function He(e) {
                return xe(() => {
                    const t = {},
                        n = {
                            type: e.type,
                            providersResolver: null,
                            decls: e.decls,
                            vars: e.vars,
                            factory: null,
                            template: e.template || null,
                            consts: e.consts || null,
                            ngContentSelectors: e.ngContentSelectors,
                            hostBindings: e.hostBindings || null,
                            hostVars: e.hostVars || 0,
                            hostAttrs: e.hostAttrs || null,
                            contentQueries: e.contentQueries || null,
                            declaredInputs: t,
                            inputs: null,
                            outputs: null,
                            exportAs: e.exportAs || null,
                            onPush: e.changeDetection === Ee.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            selectors: e.selectors || Me,
                            viewQuery: e.viewQuery || null,
                            features: e.features || null,
                            data: e.data || {},
                            encapsulation: e.encapsulation || ke.Emulated,
                            id: "c",
                            styles: e.styles || Me,
                            _: null,
                            setInput: null,
                            schemas: e.schemas || null,
                            tView: null
                        },
                        r = e.directives,
                        s = e.features,
                        i = e.pipes;
                    return n.id += $e++, n.inputs = Ke(e.inputs, t), n.outputs = Ke(e.outputs), s && s.forEach(e => e(n)), n.directiveDefs = r ? () => ("function" == typeof r ? r() : r).map(ze) : null, n.pipeDefs = i ? () => ("function" == typeof i ? i() : i).map(qe) : null, n
                })
            }

            function ze(e) {
                return Ye(e) || function(e) {
                    return e[Ne] || null
                }(e)
            }

            function qe(e) {
                return function(e) {
                    return e[Le] || null
                }(e)
            }
            const Ge = {};

            function We(e) {
                const t = {
                    type: e.type,
                    bootstrap: e.bootstrap || Me,
                    declarations: e.declarations || Me,
                    imports: e.imports || Me,
                    exports: e.exports || Me,
                    transitiveCompileScopes: null,
                    schemas: e.schemas || null,
                    id: e.id || null
                };
                return null != e.id && xe(() => {
                    Ge[e.id] = e.type
                }), t
            }

            function Ke(e, t) {
                if (null == e) return Pe;
                const n = {};
                for (const r in e)
                    if (e.hasOwnProperty(r)) {
                        let s = e[r],
                            i = s;
                        Array.isArray(s) && (i = s[1], s = s[0]), n[s] = r, t && (t[s] = i)
                    } return n
            }
            const Ze = He;

            function Qe(e) {
                return {
                    type: e.type,
                    name: e.name,
                    factory: null,
                    pure: !1 !== e.pure,
                    onDestroy: e.type.prototype.ngOnDestroy || null
                }
            }

            function Ye(e) {
                return e[Re] || null
            }

            function Je(e, t) {
                const n = e[je] || null;
                if (!n && !0 === t) throw new Error(`Type ${te(e)} does not have '\u0275mod' property.`);
                return n
            }
            const Xe = 20,
                et = 10;

            function tt(e) {
                return Array.isArray(e) && "object" == typeof e[1]
            }

            function nt(e) {
                return Array.isArray(e) && !0 === e[1]
            }

            function rt(e) {
                return 0 != (8 & e.flags)
            }

            function st(e) {
                return 2 == (2 & e.flags)
            }

            function it(e) {
                return 1 == (1 & e.flags)
            }

            function ot(e) {
                return null !== e.template
            }

            function at(e, t) {
                return e.hasOwnProperty(Ve) ? e[Ve] : null
            }
            class lt {
                constructor(e, t, n) {
                    this.previousValue = e, this.currentValue = t, this.firstChange = n
                }
                isFirstChange() {
                    return this.firstChange
                }
            }

            function ut() {
                return ct
            }

            function ct(e) {
                return e.type.prototype.ngOnChanges && (e.setInput = dt), ht
            }

            function ht() {
                const e = pt(this),
                    t = null == e ? void 0 : e.current;
                if (t) {
                    const n = e.previous;
                    if (n === Pe) e.previous = t;
                    else
                        for (let e in t) n[e] = t[e];
                    e.current = null, this.ngOnChanges(t)
                }
            }

            function dt(e, t, n, r) {
                const s = pt(e) || function(e, t) {
                        return e.__ngSimpleChanges__ = t
                    }(e, {
                        previous: Pe,
                        current: null
                    }),
                    i = s.current || (s.current = {}),
                    o = s.previous,
                    a = this.declaredInputs[n],
                    l = o[a];
                i[a] = new lt(l && l.currentValue, t, o === Pe), e[r] = t
            }

            function pt(e) {
                return e.__ngSimpleChanges__ || null
            }
            ut.ngInherit = !0;
            const ft = "http://www.w3.org/2000/svg";
            let gt;

            function mt() {
                return void 0 !== gt ? gt : "undefined" != typeof document ? document : void 0
            }

            function yt(e) {
                return !!e.listen
            }
            const bt = {
                createRenderer: (e, t) => mt()
            };

            function vt(e) {
                for (; Array.isArray(e);) e = e[0];
                return e
            }

            function _t(e, t) {
                return vt(t[e])
            }

            function wt(e, t) {
                return vt(t[e.index])
            }

            function Ct(e, t) {
                return e.data[t]
            }

            function St(e, t) {
                return e[t]
            }

            function xt(e, t) {
                const n = t[e];
                return tt(n) ? n : n[0]
            }

            function Et(e) {
                const t = function(e) {
                    return e.__ngContext__ || null
                }(e);
                return t ? Array.isArray(t) ? t : t.lView : null
            }

            function kt(e) {
                return 4 == (4 & e[2])
            }

            function At(e) {
                return 128 == (128 & e[2])
            }

            function Dt(e, t) {
                return null == t ? null : e[t]
            }

            function Tt(e) {
                e[18] = 0
            }

            function Ot(e, t) {
                e[5] += t;
                let n = e,
                    r = e[3];
                for (; null !== r && (1 === t && 1 === n[5] || -1 === t && 0 === n[5]);) r[5] += t, n = r, r = r[3]
            }
            const Ft = {
                lFrame: tn(null),
                bindingsEnabled: !0,
                isInCheckNoChangesMode: !1
            };

            function Pt() {
                return Ft.bindingsEnabled
            }

            function It() {
                return Ft.lFrame.lView
            }

            function Mt() {
                return Ft.lFrame.tView
            }

            function Rt(e) {
                Ft.lFrame.contextLView = e
            }

            function Nt() {
                let e = Lt();
                for (; null !== e && 64 === e.type;) e = e.parent;
                return e
            }

            function Lt() {
                return Ft.lFrame.currentTNode
            }

            function jt(e, t) {
                const n = Ft.lFrame;
                n.currentTNode = e, n.isParent = t
            }

            function Bt() {
                return Ft.lFrame.isParent
            }

            function Vt() {
                Ft.lFrame.isParent = !1
            }

            function Ut() {
                return Ft.isInCheckNoChangesMode
            }

            function $t(e) {
                Ft.isInCheckNoChangesMode = e
            }

            function Ht() {
                const e = Ft.lFrame;
                let t = e.bindingRootIndex;
                return -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
            }

            function zt() {
                return Ft.lFrame.bindingIndex
            }

            function qt() {
                return Ft.lFrame.bindingIndex++
            }

            function Gt(e) {
                const t = Ft.lFrame,
                    n = t.bindingIndex;
                return t.bindingIndex = t.bindingIndex + e, n
            }

            function Wt(e, t) {
                const n = Ft.lFrame;
                n.bindingIndex = n.bindingRootIndex = e, Kt(t)
            }

            function Kt(e) {
                Ft.lFrame.currentDirectiveIndex = e
            }

            function Zt() {
                return Ft.lFrame.currentQueryIndex
            }

            function Qt(e) {
                Ft.lFrame.currentQueryIndex = e
            }

            function Yt(e) {
                const t = e[1];
                return 2 === t.type ? t.declTNode : 1 === t.type ? e[6] : null
            }

            function Jt(e, t, n) {
                if (n & _e.SkipSelf) {
                    let r = t,
                        s = e;
                    for (; r = r.parent, !(null !== r || n & _e.Host || (r = Yt(s), null === r) || (s = s[15], 10 & r.type)););
                    if (null === r) return !1;
                    t = r, e = s
                }
                const r = Ft.lFrame = en();
                return r.currentTNode = t, r.lView = e, !0
            }

            function Xt(e) {
                const t = en(),
                    n = e[1];
                Ft.lFrame = t, t.currentTNode = n.firstChild, t.lView = e, t.tView = n, t.contextLView = e, t.bindingIndex = n.bindingStartIndex, t.inI18n = !1
            }

            function en() {
                const e = Ft.lFrame,
                    t = null === e ? null : e.child;
                return null === t ? tn(e) : t
            }

            function tn(e) {
                const t = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: e,
                    child: null,
                    inI18n: !1
                };
                return null !== e && (e.child = t), t
            }

            function nn() {
                const e = Ft.lFrame;
                return Ft.lFrame = e.parent, e.currentTNode = null, e.lView = null, e
            }
            const rn = nn;

            function sn() {
                const e = nn();
                e.isParent = !0, e.tView = null, e.selectedIndex = -1, e.contextLView = null, e.elementDepthCount = 0, e.currentDirectiveIndex = -1, e.currentNamespace = null, e.bindingRootIndex = -1, e.bindingIndex = -1, e.currentQueryIndex = 0
            }

            function on() {
                return Ft.lFrame.selectedIndex
            }

            function an(e) {
                Ft.lFrame.selectedIndex = e
            }

            function ln() {
                const e = Ft.lFrame;
                return Ct(e.tView, e.selectedIndex)
            }

            function un(e, t) {
                for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) {
                    const t = e.data[n].type.prototype,
                        {
                            ngAfterContentInit: r,
                            ngAfterContentChecked: s,
                            ngAfterViewInit: i,
                            ngAfterViewChecked: o,
                            ngOnDestroy: a
                        } = t;
                    r && (e.contentHooks || (e.contentHooks = [])).push(-n, r), s && ((e.contentHooks || (e.contentHooks = [])).push(n, s), (e.contentCheckHooks || (e.contentCheckHooks = [])).push(n, s)), i && (e.viewHooks || (e.viewHooks = [])).push(-n, i), o && ((e.viewHooks || (e.viewHooks = [])).push(n, o), (e.viewCheckHooks || (e.viewCheckHooks = [])).push(n, o)), null != a && (e.destroyHooks || (e.destroyHooks = [])).push(n, a)
                }
            }

            function cn(e, t, n) {
                pn(e, t, 3, n)
            }

            function hn(e, t, n, r) {
                (3 & e[2]) === n && pn(e, t, n, r)
            }

            function dn(e, t) {
                let n = e[2];
                (3 & n) === t && (n &= 2047, n += 1, e[2] = n)
            }

            function pn(e, t, n, r) {
                const s = null != r ? r : -1,
                    i = t.length - 1;
                let o = 0;
                for (let a = void 0 !== r ? 65535 & e[18] : 0; a < i; a++)
                    if ("number" == typeof t[a + 1]) {
                        if (o = t[a], null != r && o >= r) break
                    } else t[a] < 0 && (e[18] += 65536), (o < s || -1 == s) && (fn(e, n, t, a), e[18] = (4294901760 & e[18]) + a + 2), a++
            }

            function fn(e, t, n, r) {
                const s = n[r] < 0,
                    i = n[r + 1],
                    o = e[s ? -n[r] : n[r]];
                if (s) {
                    if (e[2] >> 11 < e[18] >> 16 && (3 & e[2]) === t) {
                        e[2] += 2048;
                        try {
                            i.call(o)
                        } finally {}
                    }
                } else try {
                    i.call(o)
                } finally {}
            }
            const gn = -1;
            class mn {
                constructor(e, t, n) {
                    this.factory = e, this.resolving = !1, this.canSeeViewProviders = t, this.injectImpl = n
                }
            }

            function yn(e, t, n) {
                const r = yt(e);
                let s = 0;
                for (; s < n.length;) {
                    const i = n[s];
                    if ("number" == typeof i) {
                        if (0 !== i) break;
                        s++;
                        const o = n[s++],
                            a = n[s++],
                            l = n[s++];
                        r ? e.setAttribute(t, a, l, o) : t.setAttributeNS(o, a, l)
                    } else {
                        const o = i,
                            a = n[++s];
                        vn(o) ? r && e.setProperty(t, o, a) : r ? e.setAttribute(t, o, a) : t.setAttribute(o, a), s++
                    }
                }
                return s
            }

            function bn(e) {
                return 3 === e || 4 === e || 6 === e
            }

            function vn(e) {
                return 64 === e.charCodeAt(0)
            }

            function _n(e, t) {
                if (null === t || 0 === t.length);
                else if (null === e || 0 === e.length) e = t.slice();
                else {
                    let n = -1;
                    for (let r = 0; r < t.length; r++) {
                        const s = t[r];
                        "number" == typeof s ? n = s : 0 === n || wn(e, n, s, null, -1 === n || 2 === n ? t[++r] : null)
                    }
                }
                return e
            }

            function wn(e, t, n, r, s) {
                let i = 0,
                    o = e.length;
                if (-1 === t) o = -1;
                else
                    for (; i < e.length;) {
                        const n = e[i++];
                        if ("number" == typeof n) {
                            if (n === t) {
                                o = -1;
                                break
                            }
                            if (n > t) {
                                o = i - 1;
                                break
                            }
                        }
                    }
                for (; i < e.length;) {
                    const t = e[i];
                    if ("number" == typeof t) break;
                    if (t === n) {
                        if (null === r) return void(null !== s && (e[i + 1] = s));
                        if (r === e[i + 1]) return void(e[i + 2] = s)
                    }
                    i++, null !== r && i++, null !== s && i++
                } - 1 !== o && (e.splice(o, 0, t), i = o + 1), e.splice(i++, 0, n), null !== r && e.splice(i++, 0, r), null !== s && e.splice(i++, 0, s)
            }

            function Cn(e) {
                return e !== gn
            }

            function Sn(e) {
                return 32767 & e
            }

            function xn(e, t) {
                let n = e >> 16,
                    r = t;
                for (; n > 0;) r = r[15], n--;
                return r
            }
            let En = !0;

            function kn(e) {
                const t = En;
                return En = e, t
            }
            let An = 0;

            function Dn(e, t) {
                const n = On(e, t);
                if (-1 !== n) return n;
                const r = t[1];
                r.firstCreatePass && (e.injectorIndex = t.length, Tn(r.data, e), Tn(t, null), Tn(r.blueprint, null));
                const s = Fn(e, t),
                    i = e.injectorIndex;
                if (Cn(s)) {
                    const e = Sn(s),
                        n = xn(s, t),
                        r = n[1].data;
                    for (let s = 0; s < 8; s++) t[i + s] = n[e + s] | r[e + s]
                }
                return t[i + 8] = s, i
            }

            function Tn(e, t) {
                e.push(0, 0, 0, 0, 0, 0, 0, 0, t)
            }

            function On(e, t) {
                return -1 === e.injectorIndex || e.parent && e.parent.injectorIndex === e.injectorIndex || null === t[e.injectorIndex + 8] ? -1 : e.injectorIndex
            }

            function Fn(e, t) {
                if (e.parent && -1 !== e.parent.injectorIndex) return e.parent.injectorIndex;
                let n = 0,
                    r = null,
                    s = t;
                for (; null !== s;) {
                    const e = s[1],
                        t = e.type;
                    if (r = 2 === t ? e.declTNode : 1 === t ? s[6] : null, null === r) return gn;
                    if (n++, s = s[15], -1 !== r.injectorIndex) return r.injectorIndex | n << 16
                }
                return gn
            }

            function Pn(e, t, n) {
                ! function(e, t, n) {
                    let r;
                    "string" == typeof n ? r = n.charCodeAt(0) || 0 : n.hasOwnProperty(Ue) && (r = n[Ue]), null == r && (r = n[Ue] = An++);
                    const s = 255 & r;
                    t.data[e + (s >> 5)] |= 1 << s
                }(e, t, n)
            }

            function In(e, t, n) {
                if (n & _e.Optional) return e;
                ce(t, "NodeInjector")
            }

            function Mn(e, t, n, r) {
                if (n & _e.Optional && void 0 === r && (r = null), 0 == (n & (_e.Self | _e.Host))) {
                    const s = e[9],
                        i = Ce(void 0);
                    try {
                        return s ? s.get(t, r, n & _e.Optional) : Se(t, r, n & _e.Optional)
                    } finally {
                        Ce(i)
                    }
                }
                return In(r, t, n)
            }

            function Rn(e, t, n, r = _e.Default, s) {
                if (null !== e) {
                    const i = function(e) {
                        if ("string" == typeof e) return e.charCodeAt(0) || 0;
                        const t = e.hasOwnProperty(Ue) ? e[Ue] : void 0;
                        return "number" == typeof t ? t >= 0 ? 255 & t : Ln : t
                    }(n);
                    if ("function" == typeof i) {
                        if (!Jt(t, e, r)) return r & _e.Host ? In(s, n, r) : Mn(t, n, r, s);
                        try {
                            const e = i();
                            if (null != e || r & _e.Optional) return e;
                            ce(n)
                        } finally {
                            rn()
                        }
                    } else if ("number" == typeof i) {
                        let s = null,
                            o = On(e, t),
                            a = gn,
                            l = r & _e.Host ? t[16][6] : null;
                        for ((-1 === o || r & _e.SkipSelf) && (a = -1 === o ? Fn(e, t) : t[o + 8], a !== gn && $n(r, !1) ? (s = t[1], o = Sn(a), t = xn(a, t)) : o = -1); - 1 !== o;) {
                            const e = t[1];
                            if (Un(i, o, e.data)) {
                                const e = jn(o, t, n, s, r, l);
                                if (e !== Nn) return e
                            }
                            a = t[o + 8], a !== gn && $n(r, t[1].data[o + 8] === l) && Un(i, o, t) ? (s = e, o = Sn(a), t = xn(a, t)) : o = -1
                        }
                    }
                }
                return Mn(t, n, r, s)
            }
            const Nn = {};

            function Ln() {
                return new Hn(Nt(), It())
            }

            function jn(e, t, n, r, s, i) {
                const o = t[1],
                    a = o.data[e + 8],
                    l = Bn(a, o, n, null == r ? st(a) && En : r != o && 0 != (3 & a.type), s & _e.Host && i === a);
                return null !== l ? Vn(t, o, l, a) : Nn
            }

            function Bn(e, t, n, r, s) {
                const i = e.providerIndexes,
                    o = t.data,
                    a = 1048575 & i,
                    l = e.directiveStart,
                    u = i >> 20,
                    c = s ? a + u : e.directiveEnd;
                for (let h = r ? a : a + u; h < c; h++) {
                    const e = o[h];
                    if (h < l && n === e || h >= l && e.type === n) return h
                }
                if (s) {
                    const e = o[l];
                    if (e && ot(e) && e.type === n) return l
                }
                return null
            }

            function Vn(e, t, n, r) {
                let s = e[n];
                const i = t.data;
                if (s instanceof mn) {
                    const o = s;
                    o.resolving && function(e, t) {
                        throw new ae("200", `Circular dependency in DI detected for ${e}`)
                    }(ue(i[n]));
                    const a = kn(o.canSeeViewProviders);
                    o.resolving = !0;
                    const l = o.injectImpl ? Ce(o.injectImpl) : null;
                    Jt(e, r, _e.Default);
                    try {
                        s = e[n] = o.factory(void 0, i, e, r), t.firstCreatePass && n >= r.directiveStart && function(e, t, n) {
                            const {
                                ngOnChanges: r,
                                ngOnInit: s,
                                ngDoCheck: i
                            } = t.type.prototype;
                            if (r) {
                                const r = ct(t);
                                (n.preOrderHooks || (n.preOrderHooks = [])).push(e, r), (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(e, r)
                            }
                            s && (n.preOrderHooks || (n.preOrderHooks = [])).push(0 - e, s), i && ((n.preOrderHooks || (n.preOrderHooks = [])).push(e, i), (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(e, i))
                        }(n, i[n], t)
                    } finally {
                        null !== l && Ce(l), kn(a), o.resolving = !1, rn()
                    }
                }
                return s
            }

            function Un(e, t, n) {
                return !!(n[t + (e >> 5)] & 1 << e)
            }

            function $n(e, t) {
                return !(e & _e.Self || e & _e.Host && t)
            }
            class Hn {
                constructor(e, t) {
                    this._tNode = e, this._lView = t
                }
                get(e, t) {
                    return Rn(this._tNode, this._lView, e, void 0, t)
                }
            }

            function zn(e) {
                return xe(() => {
                    const t = e.prototype.constructor,
                        n = t[Ve] || qn(t),
                        r = Object.prototype;
                    let s = Object.getPrototypeOf(e.prototype).constructor;
                    for (; s && s !== r;) {
                        const e = s[Ve] || qn(s);
                        if (e && e !== n) return e;
                        s = Object.getPrototypeOf(s)
                    }
                    return e => new e
                })
            }

            function qn(e) {
                return oe(e) ? () => {
                    const t = qn(ie(e));
                    return t && t()
                } : at(e)
            }
            const Gn = "__parameters__";

            function Wn(e, t, n) {
                return xe(() => {
                    const r = function(e) {
                        return function(...t) {
                            if (e) {
                                const n = e(...t);
                                for (const e in n) this[e] = n[e]
                            }
                        }
                    }(t);

                    function s(...e) {
                        if (this instanceof s) return r.apply(this, e), this;
                        const t = new s(...e);
                        return n.annotation = t, n;

                        function n(e, n, r) {
                            const s = e.hasOwnProperty(Gn) ? e[Gn] : Object.defineProperty(e, Gn, {
                                value: []
                            })[Gn];
                            for (; s.length <= r;) s.push(null);
                            return (s[r] = s[r] || []).push(t), e
                        }
                    }
                    return n && (s.prototype = Object.create(n.prototype)), s.prototype.ngMetadataName = e, s.annotationCls = s, s
                })
            }
            class Kn {
                constructor(e, t) {
                    this._desc = e, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof t ? this.__NG_ELEMENT_ID__ = t : void 0 !== t && (this.\u0275prov = he({
                        token: this,
                        providedIn: t.providedIn || "root",
                        factory: t.factory
                    }))
                }
                toString() {
                    return `InjectionToken ${this._desc}`
                }
            }
            const Zn = new Kn("AnalyzeForEntryComponents"),
                Qn = Function;

            function Yn(e, t) {
                void 0 === t && (t = e);
                for (let n = 0; n < e.length; n++) {
                    let r = e[n];
                    Array.isArray(r) ? (t === e && (t = e.slice(0, n)), Yn(r, t)) : t !== e && t.push(r)
                }
                return t
            }

            function Jn(e, t) {
                e.forEach(e => Array.isArray(e) ? Jn(e, t) : t(e))
            }

            function Xn(e, t, n) {
                t >= e.length ? e.push(n) : e.splice(t, 0, n)
            }

            function er(e, t) {
                return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0]
            }

            function tr(e, t) {
                const n = [];
                for (let r = 0; r < e; r++) n.push(t);
                return n
            }

            function nr(e, t, n) {
                let r = sr(e, t);
                return r >= 0 ? e[1 | r] = n : (r = ~r, function(e, t, n, r) {
                    let s = e.length;
                    if (s == t) e.push(n, r);
                    else if (1 === s) e.push(r, e[0]), e[0] = n;
                    else {
                        for (s--, e.push(e[s - 1], e[s]); s > t;) e[s] = e[s - 2], s--;
                        e[t] = n, e[t + 1] = r
                    }
                }(e, r, t, n)), r
            }

            function rr(e, t) {
                const n = sr(e, t);
                if (n >= 0) return e[1 | n]
            }

            function sr(e, t) {
                return function(e, t, n) {
                    let r = 0,
                        s = e.length >> 1;
                    for (; s !== r;) {
                        const n = r + (s - r >> 1),
                            i = e[n << 1];
                        if (t === i) return n << 1;
                        i > t ? s = n : r = n + 1
                    }
                    return ~(s << 1)
                }(e, t)
            }
            const ir = {},
                or = /\n/gm,
                ar = "__source",
                lr = X({
                    provide: String,
                    useValue: X
                });
            let ur;

            function cr(e) {
                const t = ur;
                return ur = e, t
            }

            function hr(e, t = _e.Default) {
                if (void 0 === ur) throw new Error("inject() must be called from an injection context");
                return null === ur ? Se(e, void 0, t) : ur.get(e, t & _e.Optional ? null : void 0, t)
            }

            function dr(e, t = _e.Default) {
                return (we || hr)(ie(e), t)
            }

            function pr(e) {
                const t = [];
                for (let n = 0; n < e.length; n++) {
                    const r = ie(e[n]);
                    if (Array.isArray(r)) {
                        if (0 === r.length) throw new Error("Arguments array must have arguments.");
                        let e, n = _e.Default;
                        for (let t = 0; t < r.length; t++) {
                            const s = r[t],
                                i = s.__NG_DI_FLAG__;
                            "number" == typeof i ? -1 === i ? e = s.token : n |= i : e = s
                        }
                        t.push(dr(e, n))
                    } else t.push(dr(r))
                }
                return t
            }

            function fr(e, t) {
                return e.__NG_DI_FLAG__ = t, e.prototype.__NG_DI_FLAG__ = t, e
            }
            const gr = fr(Wn("Inject", e => ({
                    token: e
                })), -1),
                mr = fr(Wn("Optional"), 8),
                yr = fr(Wn("SkipSelf"), 4);
            let br, vr;

            function _r(e) {
                var t;
                return (null === (t = function() {
                    if (void 0 === br && (br = null, Fe.trustedTypes)) try {
                        br = Fe.trustedTypes.createPolicy("angular", {
                            createHTML: e => e,
                            createScript: e => e,
                            createScriptURL: e => e
                        })
                    } catch (t) {}
                    return br
                }()) || void 0 === t ? void 0 : t.createHTML(e)) || e
            }

            function wr() {
                if (void 0 === vr && (vr = null, Fe.trustedTypes)) try {
                    vr = Fe.trustedTypes.createPolicy("angular#unsafe-bypass", {
                        createHTML: e => e,
                        createScript: e => e,
                        createScriptURL: e => e
                    })
                } catch (e) {}
                return vr
            }

            function Cr(e) {
                var t;
                return (null === (t = wr()) || void 0 === t ? void 0 : t.createHTML(e)) || e
            }

            function Sr(e) {
                var t;
                return (null === (t = wr()) || void 0 === t ? void 0 : t.createScriptURL(e)) || e
            }
            class xr {
                constructor(e) {
                    this.changingThisBreaksApplicationSecurity = e
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`
                }
            }
            class Er extends xr {
                getTypeName() {
                    return "HTML"
                }
            }
            class kr extends xr {
                getTypeName() {
                    return "Style"
                }
            }
            class Ar extends xr {
                getTypeName() {
                    return "Script"
                }
            }
            class Dr extends xr {
                getTypeName() {
                    return "URL"
                }
            }
            class Tr extends xr {
                getTypeName() {
                    return "ResourceURL"
                }
            }

            function Or(e) {
                return e instanceof xr ? e.changingThisBreaksApplicationSecurity : e
            }

            function Fr(e, t) {
                const n = Pr(e);
                if (null != n && n !== t) {
                    if ("ResourceURL" === n && "URL" === t) return !0;
                    throw new Error(`Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`)
                }
                return n === t
            }

            function Pr(e) {
                return e instanceof xr && e.getTypeName() || null
            }
            class Ir {
                constructor(e) {
                    this.inertDocumentHelper = e
                }
                getInertBodyElement(e) {
                    e = "<body><remove></remove>" + e;
                    try {
                        const t = (new window.DOMParser).parseFromString(_r(e), "text/html").body;
                        return null === t ? this.inertDocumentHelper.getInertBodyElement(e) : (t.removeChild(t.firstChild), t)
                    } catch (t) {
                        return null
                    }
                }
            }
            class Mr {
                constructor(e) {
                    if (this.defaultDoc = e, this.inertDocument = this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"), null == this.inertDocument.body) {
                        const e = this.inertDocument.createElement("html");
                        this.inertDocument.appendChild(e);
                        const t = this.inertDocument.createElement("body");
                        e.appendChild(t)
                    }
                }
                getInertBodyElement(e) {
                    const t = this.inertDocument.createElement("template");
                    if ("content" in t) return t.innerHTML = _r(e), t;
                    const n = this.inertDocument.createElement("body");
                    return n.innerHTML = _r(e), this.defaultDoc.documentMode && this.stripCustomNsAttrs(n), n
                }
                stripCustomNsAttrs(e) {
                    const t = e.attributes;
                    for (let r = t.length - 1; 0 < r; r--) {
                        const n = t.item(r).name;
                        "xmlns:ns1" !== n && 0 !== n.indexOf("ns1:") || e.removeAttribute(n)
                    }
                    let n = e.firstChild;
                    for (; n;) n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n), n = n.nextSibling
                }
            }
            const Rr = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
                Nr = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;

            function Lr(e) {
                return (e = String(e)).match(Rr) || e.match(Nr) ? e : "unsafe:" + e
            }

            function jr(e) {
                const t = {};
                for (const n of e.split(",")) t[n] = !0;
                return t
            }

            function Br(...e) {
                const t = {};
                for (const n of e)
                    for (const e in n) n.hasOwnProperty(e) && (t[e] = !0);
                return t
            }
            const Vr = jr("area,br,col,hr,img,wbr"),
                Ur = jr("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
                $r = jr("rp,rt"),
                Hr = Br($r, Ur),
                zr = Br(Vr, Br(Ur, jr("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")), Br($r, jr("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")), Hr),
                qr = jr("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
                Gr = jr("srcset"),
                Wr = Br(qr, Gr, jr("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"), jr("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),
                Kr = jr("script,style,template");
            class Zr {
                constructor() {
                    this.sanitizedSomething = !1, this.buf = []
                }
                sanitizeChildren(e) {
                    let t = e.firstChild,
                        n = !0;
                    for (; t;)
                        if (t.nodeType === Node.ELEMENT_NODE ? n = this.startElement(t) : t.nodeType === Node.TEXT_NODE ? this.chars(t.nodeValue) : this.sanitizedSomething = !0, n && t.firstChild) t = t.firstChild;
                        else
                            for (; t;) {
                                t.nodeType === Node.ELEMENT_NODE && this.endElement(t);
                                let e = this.checkClobberedElement(t, t.nextSibling);
                                if (e) {
                                    t = e;
                                    break
                                }
                                t = this.checkClobberedElement(t, t.parentNode)
                            }
                    return this.buf.join("")
                }
                startElement(e) {
                    const t = e.nodeName.toLowerCase();
                    if (!zr.hasOwnProperty(t)) return this.sanitizedSomething = !0, !Kr.hasOwnProperty(t);
                    this.buf.push("<"), this.buf.push(t);
                    const n = e.attributes;
                    for (let s = 0; s < n.length; s++) {
                        const e = n.item(s),
                            t = e.name,
                            i = t.toLowerCase();
                        if (!Wr.hasOwnProperty(i)) {
                            this.sanitizedSomething = !0;
                            continue
                        }
                        let o = e.value;
                        qr[i] && (o = Lr(o)), Gr[i] && (r = o, o = (r = String(r)).split(",").map(e => Lr(e.trim())).join(", ")), this.buf.push(" ", t, '="', Jr(o), '"')
                    }
                    var r;
                    return this.buf.push(">"), !0
                }
                endElement(e) {
                    const t = e.nodeName.toLowerCase();
                    zr.hasOwnProperty(t) && !Vr.hasOwnProperty(t) && (this.buf.push("</"), this.buf.push(t), this.buf.push(">"))
                }
                chars(e) {
                    this.buf.push(Jr(e))
                }
                checkClobberedElement(e, t) {
                    if (t && (e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) throw new Error(`Failed to sanitize html because the element is clobbered: ${e.outerHTML}`);
                    return t
                }
            }
            const Qr = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                Yr = /([^\#-~ |!])/g;

            function Jr(e) {
                return e.replace(/&/g, "&amp;").replace(Qr, function(e) {
                    return "&#" + (1024 * (e.charCodeAt(0) - 55296) + (e.charCodeAt(1) - 56320) + 65536) + ";"
                }).replace(Yr, function(e) {
                    return "&#" + e.charCodeAt(0) + ";"
                }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }
            let Xr;

            function es(e, t) {
                let n = null;
                try {
                    Xr = Xr || function(e) {
                        const t = new Mr(e);
                        return function() {
                            try {
                                return !!(new window.DOMParser).parseFromString(_r(""), "text/html")
                            } catch (e) {
                                return !1
                            }
                        }() ? new Ir(t) : t
                    }(e);
                    let r = t ? String(t) : "";
                    n = Xr.getInertBodyElement(r);
                    let s = 5,
                        i = r;
                    do {
                        if (0 === s) throw new Error("Failed to sanitize html because the input is unstable");
                        s--, r = i, i = n.innerHTML, n = Xr.getInertBodyElement(r)
                    } while (r !== i);
                    return _r((new Zr).sanitizeChildren(ts(n) || n))
                } finally {
                    if (n) {
                        const e = ts(n) || n;
                        for (; e.firstChild;) e.removeChild(e.firstChild)
                    }
                }
            }

            function ts(e) {
                return "content" in e && function(e) {
                    return e.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === e.nodeName
                }(e) ? e.content : null
            }
            var ns = function(e) {
                return e[e.NONE = 0] = "NONE", e[e.HTML = 1] = "HTML", e[e.STYLE = 2] = "STYLE", e[e.SCRIPT = 3] = "SCRIPT", e[e.URL = 4] = "URL", e[e.RESOURCE_URL = 5] = "RESOURCE_URL", e
            }({});

            function rs(e) {
                const t = os();
                return t ? Cr(t.sanitize(ns.HTML, e) || "") : Fr(e, "HTML") ? Cr(Or(e)) : es(mt(), le(e))
            }

            function ss(e) {
                const t = os();
                return t ? t.sanitize(ns.URL, e) || "" : Fr(e, "URL") ? Or(e) : Lr(le(e))
            }

            function is(e) {
                const t = os();
                if (t) return Sr(t.sanitize(ns.RESOURCE_URL, e) || "");
                if (Fr(e, "ResourceURL")) return Sr(Or(e));
                throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)")
            }

            function os() {
                const e = It();
                return e && e[12]
            }

            function as(e) {
                return e.ngDebugContext
            }

            function ls(e) {
                return e.ngOriginalError
            }

            function us(e, ...t) {
                e.error(...t)
            }
            class cs {
                constructor() {
                    this._console = console
                }
                handleError(e) {
                    const t = this._findOriginalError(e),
                        n = this._findContext(e),
                        r = function(e) {
                            return e.ngErrorLogger || us
                        }(e);
                    r(this._console, "ERROR", e), t && r(this._console, "ORIGINAL ERROR", t), n && r(this._console, "ERROR CONTEXT", n)
                }
                _findContext(e) {
                    return e ? as(e) ? as(e) : this._findContext(ls(e)) : null
                }
                _findOriginalError(e) {
                    let t = ls(e);
                    for (; t && ls(t);) t = ls(t);
                    return t
                }
            }

            function hs(e, t) {
                e.__ngContext__ = t
            }
            const ds = (() => ("undefined" != typeof requestAnimationFrame && requestAnimationFrame || setTimeout).bind(Fe))();

            function ps(e) {
                return {
                    name: "window",
                    target: e.ownerDocument.defaultView
                }
            }

            function fs(e) {
                return e instanceof Function ? e() : e
            }
            var gs = function(e) {
                return e[e.Important = 1] = "Important", e[e.DashCase = 2] = "DashCase", e
            }({});

            function ms(e, t) {
                return (void 0)(e, t)
            }

            function ys(e) {
                const t = e[3];
                return nt(t) ? t[3] : t
            }

            function bs(e) {
                return _s(e[13])
            }

            function vs(e) {
                return _s(e[4])
            }

            function _s(e) {
                for (; null !== e && !nt(e);) e = e[4];
                return e
            }

            function ws(e, t, n, r, s) {
                if (null != r) {
                    let i, o = !1;
                    nt(r) ? i = r : tt(r) && (o = !0, r = r[0]);
                    const a = vt(r);
                    0 === e && null !== n ? null == s ? Ts(t, n, a) : Ds(t, n, a, s || null, !0) : 1 === e && null !== n ? Ds(t, n, a, s || null, !0) : 2 === e ? function(e, t, n) {
                        const r = Fs(e, t);
                        r && function(e, t, n, r) {
                            yt(e) ? e.removeChild(t, n, r) : t.removeChild(n)
                        }(e, r, t, n)
                    }(t, a, o) : 3 === e && t.destroyNode(a), null != i && function(e, t, n, r, s) {
                        const i = n[7];
                        i !== vt(n) && ws(t, e, r, i, s);
                        for (let o = et; o < n.length; o++) {
                            const s = n[o];
                            Bs(s[1], s, e, t, r, i)
                        }
                    }(t, e, i, n, s)
                }
            }

            function Cs(e, t, n) {
                return yt(e) ? e.createElement(t, n) : null === n ? e.createElement(t) : e.createElementNS(n, t)
            }

            function Ss(e, t) {
                const n = e[9],
                    r = n.indexOf(t),
                    s = t[3];
                1024 & t[2] && (t[2] &= -1025, Ot(s, -1)), n.splice(r, 1)
            }

            function xs(e, t) {
                if (e.length <= et) return;
                const n = et + t,
                    r = e[n];
                if (r) {
                    const i = r[17];
                    null !== i && i !== e && Ss(i, r), t > 0 && (e[n - 1][4] = r[4]);
                    const o = er(e, et + t);
                    Bs(r[1], s = r, s[11], 2, null, null), s[0] = null, s[6] = null;
                    const a = o[19];
                    null !== a && a.detachView(o[1]), r[3] = null, r[4] = null, r[2] &= -129
                }
                var s;
                return r
            }

            function Es(e, t) {
                if (!(256 & t[2])) {
                    const n = t[11];
                    yt(n) && n.destroyNode && Bs(e, t, n, 3, null, null),
                        function(e) {
                            let t = e[13];
                            if (!t) return ks(e[1], e);
                            for (; t;) {
                                let n = null;
                                if (tt(t)) n = t[13];
                                else {
                                    const e = t[10];
                                    e && (n = e)
                                }
                                if (!n) {
                                    for (; t && !t[4] && t !== e;) tt(t) && ks(t[1], t), t = t[3];
                                    null === t && (t = e), tt(t) && ks(t[1], t), n = t && t[4]
                                }
                                t = n
                            }
                        }(t)
                }
            }

            function ks(e, t) {
                if (!(256 & t[2])) {
                    t[2] &= -129, t[2] |= 256,
                        function(e, t) {
                            let n;
                            if (null != e && null != (n = e.destroyHooks))
                                for (let r = 0; r < n.length; r += 2) {
                                    const e = t[n[r]];
                                    if (!(e instanceof mn)) {
                                        const t = n[r + 1];
                                        if (Array.isArray(t))
                                            for (let n = 0; n < t.length; n += 2) t[n + 1].call(e[t[n]]);
                                        else t.call(e)
                                    }
                                }
                        }(e, t),
                        function(e, t) {
                            const n = e.cleanup,
                                r = t[7];
                            let s = -1;
                            if (null !== n)
                                for (let i = 0; i < n.length - 1; i += 2)
                                    if ("string" == typeof n[i]) {
                                        const e = n[i + 1],
                                            o = "function" == typeof e ? e(t) : vt(t[e]),
                                            a = r[s = n[i + 2]],
                                            l = n[i + 3];
                                        "boolean" == typeof l ? o.removeEventListener(n[i], a, l) : l >= 0 ? r[s = l]() : r[s = -l].unsubscribe(), i += 2
                                    } else {
                                        const e = r[s = n[i + 1]];
                                        n[i].call(e)
                                    } if (null !== r) {
                                for (let e = s + 1; e < r.length; e++)(0, r[e])();
                                t[7] = null
                            }
                        }(e, t), 1 === t[1].type && yt(t[11]) && t[11].destroy();
                    const n = t[17];
                    if (null !== n && nt(t[3])) {
                        n !== t[3] && Ss(n, t);
                        const r = t[19];
                        null !== r && r.detachView(e)
                    }
                }
            }

            function As(e, t, n) {
                return function(e, t, n) {
                    let r = t;
                    for (; null !== r && 40 & r.type;) r = (t = r).parent;
                    if (null === r) return n[0];
                    if (2 & r.flags) {
                        const t = e.data[r.directiveStart].encapsulation;
                        if (t === ke.None || t === ke.Emulated) return null
                    }
                    return wt(r, n)
                }(e, t.parent, n)
            }

            function Ds(e, t, n, r, s) {
                yt(e) ? e.insertBefore(t, n, r, s) : t.insertBefore(n, r, s)
            }

            function Ts(e, t, n) {
                yt(e) ? e.appendChild(t, n) : t.appendChild(n)
            }

            function Os(e, t, n, r, s) {
                null !== r ? Ds(e, t, n, r, s) : Ts(e, t, n)
            }

            function Fs(e, t) {
                return yt(e) ? e.parentNode(t) : t.parentNode
            }

            function Ps(e, t, n) {
                return Is(e, t, n)
            }
            let Is = function(e, t, n) {
                return 40 & e.type ? wt(e, n) : null
            };

            function Ms(e, t, n, r) {
                const s = As(e, r, t),
                    i = t[11],
                    o = Ps(r.parent || t[6], r, t);
                if (null != s)
                    if (Array.isArray(n))
                        for (let a = 0; a < n.length; a++) Os(i, s, n[a], o, !1);
                    else Os(i, s, n, o, !1)
            }

            function Rs(e, t) {
                if (null !== t) {
                    const n = t.type;
                    if (3 & n) return wt(t, e);
                    if (4 & n) return Ls(-1, e[t.index]);
                    if (8 & n) {
                        const n = t.child;
                        if (null !== n) return Rs(e, n); {
                            const n = e[t.index];
                            return nt(n) ? Ls(-1, n) : vt(n)
                        }
                    }
                    if (32 & n) return ms(t, e)() || vt(e[t.index]); {
                        const n = Ns(e, t);
                        return null !== n ? Array.isArray(n) ? n[0] : Rs(ys(e[16]), n) : Rs(e, t.next)
                    }
                }
                return null
            }

            function Ns(e, t) {
                return null !== t ? e[16][6].projection[t.projection] : null
            }

            function Ls(e, t) {
                const n = et + e + 1;
                if (n < t.length) {
                    const e = t[n],
                        r = e[1].firstChild;
                    if (null !== r) return Rs(e, r)
                }
                return t[7]
            }

            function js(e, t, n, r, s, i, o) {
                for (; null != n;) {
                    const a = r[n.index],
                        l = n.type;
                    if (o && 0 === t && (a && hs(vt(a), r), n.flags |= 4), 64 != (64 & n.flags))
                        if (8 & l) js(e, t, n.child, r, s, i, !1), ws(t, e, s, a, i);
                        else if (32 & l) {
                        const o = ms(n, r);
                        let l;
                        for (; l = o();) ws(t, e, s, l, i);
                        ws(t, e, s, a, i)
                    } else 16 & l ? Vs(e, t, r, n, s, i) : ws(t, e, s, a, i);
                    n = o ? n.projectionNext : n.next
                }
            }

            function Bs(e, t, n, r, s, i) {
                js(n, r, e.firstChild, t, s, i, !1)
            }

            function Vs(e, t, n, r, s, i) {
                const o = n[16],
                    a = o[6].projection[r.projection];
                if (Array.isArray(a))
                    for (let l = 0; l < a.length; l++) ws(t, e, s, a[l], i);
                else js(e, t, a, o[3], s, i, !0)
            }

            function Us(e, t, n) {
                yt(e) ? e.setAttribute(t, "style", n) : t.style.cssText = n
            }

            function $s(e, t, n) {
                yt(e) ? "" === n ? e.removeAttribute(t, "class") : e.setAttribute(t, "class", n) : t.className = n
            }

            function Hs(e, t, n) {
                let r = e.length;
                for (;;) {
                    const s = e.indexOf(t, n);
                    if (-1 === s) return s;
                    if (0 === s || e.charCodeAt(s - 1) <= 32) {
                        const n = t.length;
                        if (s + n === r || e.charCodeAt(s + n) <= 32) return s
                    }
                    n = s + 1
                }
            }
            const zs = "ng-template";

            function qs(e, t, n) {
                let r = 0;
                for (; r < e.length;) {
                    let s = e[r++];
                    if (n && "class" === s) {
                        if (s = e[r], -1 !== Hs(s.toLowerCase(), t, 0)) return !0
                    } else if (1 === s) {
                        for (; r < e.length && "string" == typeof(s = e[r++]);)
                            if (s.toLowerCase() === t) return !0;
                        return !1
                    }
                }
                return !1
            }

            function Gs(e) {
                return 4 === e.type && e.value !== zs
            }

            function Ws(e, t, n) {
                return t === (4 !== e.type || n ? e.value : zs)
            }

            function Ks(e, t, n) {
                let r = 4;
                const s = e.attrs || [],
                    i = function(e) {
                        for (let t = 0; t < e.length; t++)
                            if (bn(e[t])) return t;
                        return e.length
                    }(s);
                let o = !1;
                for (let a = 0; a < t.length; a++) {
                    const l = t[a];
                    if ("number" != typeof l) {
                        if (!o)
                            if (4 & r) {
                                if (r = 2 | 1 & r, "" !== l && !Ws(e, l, n) || "" === l && 1 === t.length) {
                                    if (Zs(r)) return !1;
                                    o = !0
                                }
                            } else {
                                const u = 8 & r ? l : t[++a];
                                if (8 & r && null !== e.attrs) {
                                    if (!qs(e.attrs, u, n)) {
                                        if (Zs(r)) return !1;
                                        o = !0
                                    }
                                    continue
                                }
                                const c = Qs(8 & r ? "class" : l, s, Gs(e), n);
                                if (-1 === c) {
                                    if (Zs(r)) return !1;
                                    o = !0;
                                    continue
                                }
                                if ("" !== u) {
                                    let e;
                                    e = c > i ? "" : s[c + 1].toLowerCase();
                                    const t = 8 & r ? e : null;
                                    if (t && -1 !== Hs(t, u, 0) || 2 & r && u !== e) {
                                        if (Zs(r)) return !1;
                                        o = !0
                                    }
                                }
                            }
                    } else {
                        if (!o && !Zs(r) && !Zs(l)) return !1;
                        if (o && Zs(l)) continue;
                        o = !1, r = l | 1 & r
                    }
                }
                return Zs(r) || o
            }

            function Zs(e) {
                return 0 == (1 & e)
            }

            function Qs(e, t, n, r) {
                if (null === t) return -1;
                let s = 0;
                if (r || !n) {
                    let n = !1;
                    for (; s < t.length;) {
                        const r = t[s];
                        if (r === e) return s;
                        if (3 === r || 6 === r) n = !0;
                        else {
                            if (1 === r || 2 === r) {
                                let e = t[++s];
                                for (;
                                    "string" == typeof e;) e = t[++s];
                                continue
                            }
                            if (4 === r) break;
                            if (0 === r) {
                                s += 4;
                                continue
                            }
                        }
                        s += n ? 1 : 2
                    }
                    return -1
                }
                return function(e, t) {
                    let n = e.indexOf(4);
                    if (n > -1)
                        for (n++; n < e.length;) {
                            const r = e[n];
                            if ("number" == typeof r) return -1;
                            if (r === t) return n;
                            n++
                        }
                    return -1
                }(t, e)
            }

            function Ys(e, t, n = !1) {
                for (let r = 0; r < t.length; r++)
                    if (Ks(e, t[r], n)) return !0;
                return !1
            }

            function Js(e, t) {
                e: for (let n = 0; n < t.length; n++) {
                    const r = t[n];
                    if (e.length === r.length) {
                        for (let t = 0; t < e.length; t++)
                            if (e[t] !== r[t]) continue e;
                        return !0
                    }
                }
                return !1
            }

            function Xs(e, t) {
                return e ? ":not(" + t.trim() + ")" : t
            }

            function ei(e) {
                let t = e[0],
                    n = 1,
                    r = 2,
                    s = "",
                    i = !1;
                for (; n < e.length;) {
                    let o = e[n];
                    if ("string" == typeof o)
                        if (2 & r) {
                            const t = e[++n];
                            s += "[" + o + (t.length > 0 ? '="' + t + '"' : "") + "]"
                        } else 8 & r ? s += "." + o : 4 & r && (s += " " + o);
                    else "" === s || Zs(o) || (t += Xs(i, s), s = ""), r = o, i = i || !Zs(r);
                    n++
                }
                return "" !== s && (t += Xs(i, s)), t
            }
            const ti = {};

            function ni(e) {
                ri(Mt(), It(), on() + e, Ut())
            }

            function ri(e, t, n, r) {
                if (!r)
                    if (3 == (3 & t[2])) {
                        const r = e.preOrderCheckHooks;
                        null !== r && cn(t, r, n)
                    } else {
                        const r = e.preOrderHooks;
                        null !== r && hn(t, r, 0, n)
                    } an(n)
            }

            function si(e, t) {
                return e << 17 | t << 2
            }

            function ii(e) {
                return e >> 17 & 32767
            }

            function oi(e) {
                return 2 | e
            }

            function ai(e) {
                return (131068 & e) >> 2
            }

            function li(e, t) {
                return -131069 & e | t << 2
            }

            function ui(e) {
                return 1 | e
            }

            function ci(e, t) {
                const n = e.contentQueries;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2) {
                        const s = n[r],
                            i = n[r + 1];
                        if (-1 !== i) {
                            const n = e.data[i];
                            Qt(s), n.contentQueries(2, t[i], i)
                        }
                    }
            }

            function hi(e, t, n, r, s, i, o, a, l, u) {
                const c = t.blueprint.slice();
                return c[0] = s, c[2] = 140 | r, Tt(c), c[3] = c[15] = e, c[8] = n, c[10] = o || e && e[10], c[11] = a || e && e[11], c[12] = l || e && e[12] || null, c[9] = u || e && e[9] || null, c[6] = i, c[16] = 2 == t.type ? e[16] : c, c
            }

            function di(e, t, n, r, s) {
                let i = e.data[t];
                if (null === i) i = function(e, t, n, r, s) {
                    const i = Lt(),
                        o = Bt(),
                        a = e.data[t] = function(e, t, n, r, s, i) {
                            return {
                                type: n,
                                index: r,
                                insertBeforeIndex: null,
                                injectorIndex: t ? t.injectorIndex : -1,
                                directiveStart: -1,
                                directiveEnd: -1,
                                directiveStylingLast: -1,
                                propertyBindings: null,
                                flags: 0,
                                providerIndexes: 0,
                                value: s,
                                attrs: i,
                                mergedAttrs: null,
                                localNames: null,
                                initialInputs: void 0,
                                inputs: null,
                                outputs: null,
                                tViews: null,
                                next: null,
                                projectionNext: null,
                                child: null,
                                parent: t,
                                projection: null,
                                styles: null,
                                stylesWithoutHost: null,
                                residualStyles: void 0,
                                classes: null,
                                classesWithoutHost: null,
                                residualClasses: void 0,
                                classBindings: 0,
                                styleBindings: 0
                            }
                        }(0, o ? i : i && i.parent, n, t, r, s);
                    return null === e.firstChild && (e.firstChild = a), null !== i && (o ? null == i.child && null !== a.parent && (i.child = a) : null === i.next && (i.next = a)), a
                }(e, t, n, r, s), Ft.lFrame.inI18n && (i.flags |= 64);
                else if (64 & i.type) {
                    i.type = n, i.value = r, i.attrs = s;
                    const e = function() {
                        const e = Ft.lFrame,
                            t = e.currentTNode;
                        return e.isParent ? t : t.parent
                    }();
                    i.injectorIndex = null === e ? -1 : e.injectorIndex
                }
                return jt(i, !0), i
            }

            function pi(e, t, n, r) {
                if (0 === n) return -1;
                const s = t.length;
                for (let i = 0; i < n; i++) t.push(r), e.blueprint.push(r), e.data.push(null);
                return s
            }

            function fi(e, t, n) {
                Xt(t);
                try {
                    const r = e.viewQuery;
                    null !== r && zi(1, r, n);
                    const s = e.template;
                    null !== s && yi(e, t, s, 1, n), e.firstCreatePass && (e.firstCreatePass = !1), e.staticContentQueries && ci(e, t), e.staticViewQueries && zi(2, e.viewQuery, n);
                    const i = e.components;
                    null !== i && function(e, t) {
                        for (let n = 0; n < t.length; n++) Bi(e, t[n])
                    }(t, i)
                } catch (r) {
                    throw e.firstCreatePass && (e.incompleteFirstPass = !0), r
                } finally {
                    t[2] &= -5, sn()
                }
            }

            function gi(e, t, n, r) {
                const s = t[2];
                if (256 == (256 & s)) return;
                Xt(t);
                const i = Ut();
                try {
                    Tt(t), Ft.lFrame.bindingIndex = e.bindingStartIndex, null !== n && yi(e, t, n, 2, r);
                    const o = 3 == (3 & s);
                    if (!i)
                        if (o) {
                            const n = e.preOrderCheckHooks;
                            null !== n && cn(t, n, null)
                        } else {
                            const n = e.preOrderHooks;
                            null !== n && hn(t, n, 0, null), dn(t, 0)
                        } if (function(e) {
                            for (let t = bs(e); null !== t; t = vs(t)) {
                                if (!t[2]) continue;
                                const e = t[9];
                                for (let t = 0; t < e.length; t++) {
                                    const n = e[t],
                                        r = n[3];
                                    0 == (1024 & n[2]) && Ot(r, 1), n[2] |= 1024
                                }
                            }
                        }(t), function(e) {
                            for (let t = bs(e); null !== t; t = vs(t))
                                for (let e = et; e < t.length; e++) {
                                    const n = t[e],
                                        r = n[1];
                                    At(n) && gi(r, n, r.template, n[8])
                                }
                        }(t), null !== e.contentQueries && ci(e, t), !i)
                        if (o) {
                            const n = e.contentCheckHooks;
                            null !== n && cn(t, n)
                        } else {
                            const n = e.contentHooks;
                            null !== n && hn(t, n, 1), dn(t, 1)
                        }!
                    function(e, t) {
                        const n = e.hostBindingOpCodes;
                        if (null !== n) try {
                            for (let e = 0; e < n.length; e++) {
                                const r = n[e];
                                if (r < 0) an(~r);
                                else {
                                    const s = r,
                                        i = n[++e],
                                        o = n[++e];
                                    Wt(i, s), o(2, t[s])
                                }
                            }
                        } finally {
                            an(-1)
                        }
                    }(e, t);
                    const a = e.components;
                    null !== a && function(e, t) {
                        for (let n = 0; n < t.length; n++) Li(e, t[n])
                    }(t, a);
                    const l = e.viewQuery;
                    if (null !== l && zi(2, l, r), !i)
                        if (o) {
                            const n = e.viewCheckHooks;
                            null !== n && cn(t, n)
                        } else {
                            const n = e.viewHooks;
                            null !== n && hn(t, n, 2), dn(t, 2)
                        }! 0 === e.firstUpdatePass && (e.firstUpdatePass = !1), i || (t[2] &= -73), 1024 & t[2] && (t[2] &= -1025, Ot(t[3], -1))
                } finally {
                    sn()
                }
            }

            function mi(e, t, n, r) {
                const s = t[10],
                    i = !Ut(),
                    o = kt(t);
                try {
                    i && !o && s.begin && s.begin(), o && fi(e, t, r), gi(e, t, n, r)
                } finally {
                    i && !o && s.end && s.end()
                }
            }

            function yi(e, t, n, r, s) {
                const i = on(),
                    o = 2 & r;
                try {
                    an(-1), o && t.length > Xe && ri(e, t, Xe, Ut()), n(r, s)
                } finally {
                    an(i)
                }
            }

            function bi(e, t, n) {
                if (rt(t)) {
                    const r = t.directiveEnd;
                    for (let s = t.directiveStart; s < r; s++) {
                        const t = e.data[s];
                        t.contentQueries && t.contentQueries(1, n[s], s)
                    }
                }
            }

            function vi(e, t, n) {
                Pt() && (function(e, t, n, r) {
                    const s = n.directiveStart,
                        i = n.directiveEnd;
                    e.firstCreatePass || Dn(n, t), hs(r, t);
                    const o = n.initialInputs;
                    for (let a = s; a < i; a++) {
                        const r = e.data[a],
                            i = ot(r);
                        i && Ii(t, n, r);
                        const l = Vn(t, e, a, n);
                        hs(l, t), null !== o && Mi(0, a - s, l, r, 0, o), i && (xt(n.index, t)[8] = l)
                    }
                }(e, t, n, wt(n, t)), 128 == (128 & n.flags) && function(e, t, n) {
                    const r = n.directiveStart,
                        s = n.directiveEnd,
                        i = n.index,
                        o = Ft.lFrame.currentDirectiveIndex;
                    try {
                        an(i);
                        for (let n = r; n < s; n++) {
                            const r = e.data[n],
                                s = t[n];
                            Kt(n), null === r.hostBindings && 0 === r.hostVars && null === r.hostAttrs || Di(r, s)
                        }
                    } finally {
                        an(-1), Kt(o)
                    }
                }(e, t, n))
            }

            function _i(e, t, n = wt) {
                const r = t.localNames;
                if (null !== r) {
                    let s = t.index + 1;
                    for (let i = 0; i < r.length; i += 2) {
                        const o = r[i + 1],
                            a = -1 === o ? n(t, e) : e[o];
                        e[s++] = a
                    }
                }
            }

            function wi(e) {
                const t = e.tView;
                return null === t || t.incompleteFirstPass ? e.tView = Ci(1, null, e.template, e.decls, e.vars, e.directiveDefs, e.pipeDefs, e.viewQuery, e.schemas, e.consts) : t
            }

            function Ci(e, t, n, r, s, i, o, a, l, u) {
                const c = Xe + r,
                    h = c + s,
                    d = function(e, t) {
                        const n = [];
                        for (let r = 0; r < t; r++) n.push(r < e ? null : ti);
                        return n
                    }(c, h),
                    p = "function" == typeof u ? u() : u;
                return d[1] = {
                    type: e,
                    blueprint: d,
                    template: n,
                    queries: null,
                    viewQuery: a,
                    declTNode: t,
                    data: d.slice().fill(null, c),
                    bindingStartIndex: c,
                    expandoStartIndex: h,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: "function" == typeof i ? i() : i,
                    pipeRegistry: "function" == typeof o ? o() : o,
                    firstChild: null,
                    schemas: l,
                    consts: p,
                    incompleteFirstPass: !1
                }
            }

            function Si(e, t, n, r) {
                const s = Gi(t);
                null === n ? s.push(r) : (s.push(n), e.firstCreatePass && Wi(e).push(r, s.length - 1))
            }

            function xi(e, t, n) {
                for (let r in e)
                    if (e.hasOwnProperty(r)) {
                        const s = e[r];
                        (n = null === n ? {} : n).hasOwnProperty(r) ? n[r].push(t, s) : n[r] = [t, s]
                    } return n
            }

            function Ei(e, t, n, r, s, i, o, a) {
                const l = wt(t, n);
                let u, c = t.inputs;
                var h;
                !a && null != c && (u = c[r]) ? (Zi(e, n, u, r, s), st(t) && function(e, t) {
                    const n = xt(t, e);
                    16 & n[2] || (n[2] |= 64)
                }(n, t.index)) : 3 & t.type && (r = "class" === (h = r) ? "className" : "for" === h ? "htmlFor" : "formaction" === h ? "formAction" : "innerHtml" === h ? "innerHTML" : "readonly" === h ? "readOnly" : "tabindex" === h ? "tabIndex" : h, s = null != o ? o(s, t.value || "", r) : s, yt(i) ? i.setProperty(l, r, s) : vn(r) || (l.setProperty ? l.setProperty(r, s) : l[r] = s))
            }

            function ki(e, t, n, r) {
                let s = !1;
                if (Pt()) {
                    const i = function(e, t, n) {
                            const r = e.directiveRegistry;
                            let s = null;
                            if (r)
                                for (let i = 0; i < r.length; i++) {
                                    const o = r[i];
                                    Ys(n, o.selectors, !1) && (s || (s = []), Pn(Dn(n, t), e, o.type), ot(o) ? (Ti(e, n), s.unshift(o)) : s.push(o))
                                }
                            return s
                        }(e, t, n),
                        o = null === r ? null : {
                            "": -1
                        };
                    if (null !== i) {
                        s = !0, Fi(n, e.data.length, i.length);
                        for (let e = 0; e < i.length; e++) {
                            const t = i[e];
                            t.providersResolver && t.providersResolver(t)
                        }
                        let r = !1,
                            a = !1,
                            l = pi(e, t, i.length, null);
                        for (let s = 0; s < i.length; s++) {
                            const u = i[s];
                            n.mergedAttrs = _n(n.mergedAttrs, u.hostAttrs), Pi(e, n, t, l, u), Oi(l, u, o), null !== u.contentQueries && (n.flags |= 8), null === u.hostBindings && null === u.hostAttrs && 0 === u.hostVars || (n.flags |= 128);
                            const c = u.type.prototype;
                            !r && (c.ngOnChanges || c.ngOnInit || c.ngDoCheck) && ((e.preOrderHooks || (e.preOrderHooks = [])).push(n.index), r = !0), a || !c.ngOnChanges && !c.ngDoCheck || ((e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(n.index), a = !0), l++
                        }! function(e, t) {
                            const n = t.directiveEnd,
                                r = e.data,
                                s = t.attrs,
                                i = [];
                            let o = null,
                                a = null;
                            for (let l = t.directiveStart; l < n; l++) {
                                const e = r[l],
                                    n = e.inputs,
                                    u = null === s || Gs(t) ? null : Ri(n, s);
                                i.push(u), o = xi(n, l, o), a = xi(e.outputs, l, a)
                            }
                            null !== o && (o.hasOwnProperty("class") && (t.flags |= 16), o.hasOwnProperty("style") && (t.flags |= 32)), t.initialInputs = i, t.inputs = o, t.outputs = a
                        }(e, n)
                    }
                    o && function(e, t, n) {
                        if (t) {
                            const r = e.localNames = [];
                            for (let e = 0; e < t.length; e += 2) {
                                const s = n[t[e + 1]];
                                if (null == s) throw new ae("301", `Export of name '${t[e+1]}' not found!`);
                                r.push(t[e], s)
                            }
                        }
                    }(n, r, o)
                }
                return n.mergedAttrs = _n(n.mergedAttrs, n.attrs), s
            }

            function Ai(e, t, n, r, s, i) {
                const o = i.hostBindings;
                if (o) {
                    let n = e.hostBindingOpCodes;
                    null === n && (n = e.hostBindingOpCodes = []);
                    const i = ~t.index;
                    (function(e) {
                        let t = e.length;
                        for (; t > 0;) {
                            const n = e[--t];
                            if ("number" == typeof n && n < 0) return n
                        }
                        return 0
                    })(n) != i && n.push(i), n.push(r, s, o)
                }
            }

            function Di(e, t) {
                null !== e.hostBindings && e.hostBindings(1, t)
            }

            function Ti(e, t) {
                t.flags |= 2, (e.components || (e.components = [])).push(t.index)
            }

            function Oi(e, t, n) {
                if (n) {
                    if (t.exportAs)
                        for (let r = 0; r < t.exportAs.length; r++) n[t.exportAs[r]] = e;
                    ot(t) && (n[""] = e)
                }
            }

            function Fi(e, t, n) {
                e.flags |= 1, e.directiveStart = t, e.directiveEnd = t + n, e.providerIndexes = t
            }

            function Pi(e, t, n, r, s) {
                e.data[r] = s;
                const i = s.factory || (s.factory = at(s.type)),
                    o = new mn(i, ot(s), null);
                e.blueprint[r] = o, n[r] = o, Ai(e, t, 0, r, pi(e, n, s.hostVars, ti), s)
            }

            function Ii(e, t, n) {
                const r = wt(t, e),
                    s = wi(n),
                    i = e[10],
                    o = Vi(e, hi(e, s, null, n.onPush ? 64 : 16, r, t, i, i.createRenderer(r, n), null, null));
                e[t.index] = o
            }

            function Mi(e, t, n, r, s, i) {
                const o = i[t];
                if (null !== o) {
                    const e = r.setInput;
                    for (let t = 0; t < o.length;) {
                        const s = o[t++],
                            i = o[t++],
                            a = o[t++];
                        null !== e ? r.setInput(n, a, s, i) : n[i] = a
                    }
                }
            }

            function Ri(e, t) {
                let n = null,
                    r = 0;
                for (; r < t.length;) {
                    const s = t[r];
                    if (0 !== s)
                        if (5 !== s) {
                            if ("number" == typeof s) break;
                            e.hasOwnProperty(s) && (null === n && (n = []), n.push(s, e[s], t[r + 1])), r += 2
                        } else r += 2;
                    else r += 4
                }
                return n
            }

            function Ni(e, t, n, r) {
                return new Array(e, !0, !1, t, null, 0, r, n, null, null)
            }

            function Li(e, t) {
                const n = xt(t, e);
                if (At(n)) {
                    const e = n[1];
                    80 & n[2] ? gi(e, n, e.template, n[8]) : n[5] > 0 && ji(n)
                }
            }

            function ji(e) {
                for (let n = bs(e); null !== n; n = vs(n))
                    for (let e = et; e < n.length; e++) {
                        const t = n[e];
                        if (1024 & t[2]) {
                            const e = t[1];
                            gi(e, t, e.template, t[8])
                        } else t[5] > 0 && ji(t)
                    }
                const t = e[1].components;
                if (null !== t)
                    for (let n = 0; n < t.length; n++) {
                        const r = xt(t[n], e);
                        At(r) && r[5] > 0 && ji(r)
                    }
            }

            function Bi(e, t) {
                const n = xt(t, e),
                    r = n[1];
                ! function(e, t) {
                    for (let n = t.length; n < e.blueprint.length; n++) t.push(e.blueprint[n])
                }(r, n), fi(r, n, n[8])
            }

            function Vi(e, t) {
                return e[13] ? e[14][4] = t : e[13] = t, e[14] = t, t
            }

            function Ui(e) {
                for (; e;) {
                    e[2] |= 64;
                    const t = ys(e);
                    if (0 != (512 & e[2]) && !t) return e;
                    e = t
                }
                return null
            }

            function $i(e, t, n) {
                const r = t[10];
                r.begin && r.begin();
                try {
                    gi(e, t, e.template, n)
                } catch (s) {
                    throw Ki(t, s), s
                } finally {
                    r.end && r.end()
                }
            }

            function Hi(e) {
                ! function(e) {
                    for (let t = 0; t < e.components.length; t++) {
                        const n = e.components[t],
                            r = Et(n),
                            s = r[1];
                        mi(s, r, s.template, n)
                    }
                }(e[8])
            }

            function zi(e, t, n) {
                Qt(0), t(e, n)
            }
            const qi = (() => Promise.resolve(null))();

            function Gi(e) {
                return e[7] || (e[7] = [])
            }

            function Wi(e) {
                return e.cleanup || (e.cleanup = [])
            }

            function Ki(e, t) {
                const n = e[9],
                    r = n ? n.get(cs, null) : null;
                r && r.handleError(t)
            }

            function Zi(e, t, n, r, s) {
                for (let i = 0; i < n.length;) {
                    const o = n[i++],
                        a = n[i++],
                        l = t[o],
                        u = e.data[o];
                    null !== u.setInput ? u.setInput(l, s, r, a) : l[a] = s
                }
            }

            function Qi(e, t, n) {
                const r = _t(t, e);
                ! function(e, t, n) {
                    yt(e) ? e.setValue(t, n) : t.textContent = n
                }(e[11], r, n)
            }

            function Yi(e, t, n) {
                let r = n ? e.styles : null,
                    s = n ? e.classes : null,
                    i = 0;
                if (null !== t)
                    for (let o = 0; o < t.length; o++) {
                        const e = t[o];
                        "number" == typeof e ? i = e : 1 == i ? s = ne(s, e) : 2 == i && (r = ne(r, e + ": " + t[++o] + ";"))
                    }
                n ? e.styles = r : e.stylesWithoutHost = r, n ? e.classes = s : e.classesWithoutHost = s
            }
            const Ji = new Kn("INJECTOR", -1);
            class Xi {
                get(e, t = ir) {
                    if (t === ir) {
                        const t = new Error(`NullInjectorError: No provider for ${te(e)}!`);
                        throw t.name = "NullInjectorError", t
                    }
                    return t
                }
            }
            const eo = new Kn("Set Injector scope."),
                to = {},
                no = {},
                ro = [];
            let so;

            function io() {
                return void 0 === so && (so = new Xi), so
            }

            function oo(e, t = null, n = null, r) {
                return new ao(e, n, t || io(), r)
            }
            class ao {
                constructor(e, t, n, r = null) {
                    this.parent = n, this.records = new Map, this.injectorDefTypes = new Set, this.onDestroy = new Set, this._destroyed = !1;
                    const s = [];
                    t && Jn(t, n => this.processProvider(n, e, t)), Jn([e], e => this.processInjectorType(e, [], s)), this.records.set(Ji, co(void 0, this));
                    const i = this.records.get(eo);
                    this.scope = null != i ? i.value : null, this.source = r || ("object" == typeof e ? null : te(e))
                }
                get destroyed() {
                    return this._destroyed
                }
                destroy() {
                    this.assertNotDestroyed(), this._destroyed = !0;
                    try {
                        this.onDestroy.forEach(e => e.ngOnDestroy())
                    } finally {
                        this.records.clear(), this.onDestroy.clear(), this.injectorDefTypes.clear()
                    }
                }
                get(e, t = ir, n = _e.Default) {
                    this.assertNotDestroyed();
                    const r = cr(this);
                    try {
                        if (!(n & _e.SkipSelf)) {
                            let t = this.records.get(e);
                            if (void 0 === t) {
                                const n = ("function" == typeof(s = e) || "object" == typeof s && s instanceof Kn) && pe(e);
                                t = n && this.injectableDefInScope(n) ? co(lo(e), to) : null, this.records.set(e, t)
                            }
                            if (null != t) return this.hydrate(e, t)
                        }
                        return (n & _e.Self ? io() : this.parent).get(e, t = n & _e.Optional && t === ir ? null : t)
                    } catch (i) {
                        if ("NullInjectorError" === i.name) {
                            if ((i.ngTempTokenPath = i.ngTempTokenPath || []).unshift(te(e)), r) throw i;
                            return function(e, t, n, r) {
                                const s = e.ngTempTokenPath;
                                throw t[ar] && s.unshift(t[ar]), e.message = function(e, t, n, r = null) {
                                    e = e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1) ? e.substr(2) : e;
                                    let s = te(t);
                                    if (Array.isArray(t)) s = t.map(te).join(" -> ");
                                    else if ("object" == typeof t) {
                                        let e = [];
                                        for (let n in t)
                                            if (t.hasOwnProperty(n)) {
                                                let r = t[n];
                                                e.push(n + ":" + ("string" == typeof r ? JSON.stringify(r) : te(r)))
                                            } s = `{${e.join(", ")}}`
                                    }
                                    return `${n}${r?"("+r+")":""}[${s}]: ${e.replace(or,"\n  ")}`
                                }("\n" + e.message, s, n, r), e.ngTokenPath = s, e.ngTempTokenPath = null, e
                            }(i, e, "R3InjectorError", this.source)
                        }
                        throw i
                    } finally {
                        cr(r)
                    }
                    var s
                }
                _resolveInjectorDefTypes() {
                    this.injectorDefTypes.forEach(e => this.get(e))
                }
                toString() {
                    const e = [];
                    return this.records.forEach((t, n) => e.push(te(n))), `R3Injector[${e.join(", ")}]`
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new Error("Injector has already been destroyed.")
                }
                processInjectorType(e, t, n) {
                    if (!(e = ie(e))) return !1;
                    let r = ge(e);
                    const s = null == r && e.ngModule || void 0,
                        i = void 0 === s ? e : s,
                        o = -1 !== n.indexOf(i);
                    if (void 0 !== s && (r = ge(s)), null == r) return !1;
                    if (null != r.imports && !o) {
                        let e;
                        n.push(i);
                        try {
                            Jn(r.imports, r => {
                                this.processInjectorType(r, t, n) && (void 0 === e && (e = []), e.push(r))
                            })
                        } finally {}
                        if (void 0 !== e)
                            for (let t = 0; t < e.length; t++) {
                                const {
                                    ngModule: n,
                                    providers: r
                                } = e[t];
                                Jn(r, e => this.processProvider(e, n, r || ro))
                            }
                    }
                    this.injectorDefTypes.add(i);
                    const a = at(i) || (() => new i);
                    this.records.set(i, co(a, to));
                    const l = r.providers;
                    if (null != l && !o) {
                        const t = e;
                        Jn(l, e => this.processProvider(e, t, l))
                    }
                    return void 0 !== s && void 0 !== e.providers
                }
                processProvider(e, t, n) {
                    let r = po(e = ie(e)) ? e : ie(e && e.provide);
                    const s = function(e, t, n) {
                        return ho(e) ? co(void 0, e.useValue) : co(uo(e), to)
                    }(e);
                    if (po(e) || !0 !== e.multi) this.records.get(r);
                    else {
                        let t = this.records.get(r);
                        t || (t = co(void 0, to, !0), t.factory = () => pr(t.multi), this.records.set(r, t)), r = e, t.multi.push(e)
                    }
                    this.records.set(r, s)
                }
                hydrate(e, t) {
                    var n;
                    return t.value === to && (t.value = no, t.value = t.factory()), "object" == typeof t.value && t.value && null !== (n = t.value) && "object" == typeof n && "function" == typeof n.ngOnDestroy && this.onDestroy.add(t.value), t.value
                }
                injectableDefInScope(e) {
                    return !!e.providedIn && ("string" == typeof e.providedIn ? "any" === e.providedIn || e.providedIn === this.scope : this.injectorDefTypes.has(e.providedIn))
                }
            }

            function lo(e) {
                const t = pe(e),
                    n = null !== t ? t.factory : at(e);
                if (null !== n) return n;
                if (e instanceof Kn) throw new Error(`Token ${te(e)} is missing a \u0275prov definition.`);
                if (e instanceof Function) return function(e) {
                    const t = e.length;
                    if (t > 0) {
                        const n = tr(t, "?");
                        throw new Error(`Can't resolve all parameters for ${te(e)}: (${n.join(", ")}).`)
                    }
                    const n = function(e) {
                        const t = e && (e[me] || e[be]);
                        if (t) {
                            const n = function(e) {
                                if (e.hasOwnProperty("name")) return e.name;
                                const t = ("" + e).match(/^function\s*([^\s(]+)/);
                                return null === t ? "" : t[1]
                            }(e);
                            return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`), t
                        }
                        return null
                    }(e);
                    return null !== n ? () => n.factory(e) : () => new e
                }(e);
                throw new Error("unreachable")
            }

            function uo(e, t, n) {
                let r;
                if (po(e)) {
                    const t = ie(e);
                    return at(t) || lo(t)
                }
                if (ho(e)) r = () => ie(e.useValue);
                else if ((s = e) && s.useFactory) r = () => e.useFactory(...pr(e.deps || []));
                else if (function(e) {
                        return !(!e || !e.useExisting)
                    }(e)) r = () => dr(ie(e.useExisting));
                else {
                    const t = ie(e && (e.useClass || e.provide));
                    if (! function(e) {
                            return !!e.deps
                        }(e)) return at(t) || lo(t);
                    r = () => new t(...pr(e.deps))
                }
                var s;
                return r
            }

            function co(e, t, n = !1) {
                return {
                    factory: e,
                    value: t,
                    multi: n ? [] : void 0
                }
            }

            function ho(e) {
                return null !== e && "object" == typeof e && lr in e
            }

            function po(e) {
                return "function" == typeof e
            }
            const fo = function(e, t, n) {
                return function(e, t = null, n = null, r) {
                    const s = oo(e, t, n, r);
                    return s._resolveInjectorDefTypes(), s
                }({
                    name: n
                }, t, e, n)
            };
            let go = (() => {
                class e {
                    static create(e, t) {
                        return Array.isArray(e) ? fo(e, t, "") : fo(e.providers, e.parent, e.name || "")
                    }
                }
                return e.THROW_IF_NOT_FOUND = ir, e.NULL = new Xi, e.\u0275prov = he({
                    token: e,
                    providedIn: "any",
                    factory: () => dr(Ji)
                }), e.__NG_ELEMENT_ID__ = -1, e
            })();

            function mo(e, t) {
                un(Et(e)[1], Nt())
            }

            function yo(e) {
                let t = Object.getPrototypeOf(e.type.prototype).constructor,
                    n = !0;
                const r = [e];
                for (; t;) {
                    let s;
                    if (ot(e)) s = t.\u0275cmp || t.\u0275dir;
                    else {
                        if (t.\u0275cmp) throw new Error("Directives cannot inherit Components");
                        s = t.\u0275dir
                    }
                    if (s) {
                        if (n) {
                            r.push(s);
                            const t = e;
                            t.inputs = bo(e.inputs), t.declaredInputs = bo(e.declaredInputs), t.outputs = bo(e.outputs);
                            const n = s.hostBindings;
                            n && wo(e, n);
                            const i = s.viewQuery,
                                o = s.contentQueries;
                            if (i && vo(e, i), o && _o(e, o), ee(e.inputs, s.inputs), ee(e.declaredInputs, s.declaredInputs), ee(e.outputs, s.outputs), ot(s) && s.data.animation) {
                                const t = e.data;
                                t.animation = (t.animation || []).concat(s.data.animation)
                            }
                        }
                        const t = s.features;
                        if (t)
                            for (let r = 0; r < t.length; r++) {
                                const s = t[r];
                                s && s.ngInherit && s(e), s === yo && (n = !1)
                            }
                    }
                    t = Object.getPrototypeOf(t)
                }! function(e) {
                    let t = 0,
                        n = null;
                    for (let r = e.length - 1; r >= 0; r--) {
                        const s = e[r];
                        s.hostVars = t += s.hostVars, s.hostAttrs = _n(s.hostAttrs, n = _n(n, s.hostAttrs))
                    }
                }(r)
            }

            function bo(e) {
                return e === Pe ? {} : e === Me ? [] : e
            }

            function vo(e, t) {
                const n = e.viewQuery;
                e.viewQuery = n ? (e, r) => {
                    t(e, r), n(e, r)
                } : t
            }

            function _o(e, t) {
                const n = e.contentQueries;
                e.contentQueries = n ? (e, r, s) => {
                    t(e, r, s), n(e, r, s)
                } : t
            }

            function wo(e, t) {
                const n = e.hostBindings;
                e.hostBindings = n ? (e, r) => {
                    t(e, r), n(e, r)
                } : t
            }
            let Co = null;

            function So() {
                if (!Co) {
                    const e = Fe.Symbol;
                    if (e && e.iterator) Co = e.iterator;
                    else {
                        const e = Object.getOwnPropertyNames(Map.prototype);
                        for (let t = 0; t < e.length; ++t) {
                            const n = e[t];
                            "entries" !== n && "size" !== n && Map.prototype[n] === Map.prototype.entries && (Co = n)
                        }
                    }
                }
                return Co
            }
            class xo {
                constructor(e) {
                    this.wrapped = e
                }
                static wrap(e) {
                    return new xo(e)
                }
                static unwrap(e) {
                    return xo.isWrapped(e) ? e.wrapped : e
                }
                static isWrapped(e) {
                    return e instanceof xo
                }
            }

            function Eo(e) {
                return !!ko(e) && (Array.isArray(e) || !(e instanceof Map) && So() in e)
            }

            function ko(e) {
                return null !== e && ("function" == typeof e || "object" == typeof e)
            }

            function Ao(e, t, n) {
                return e[t] = n
            }

            function Do(e, t, n) {
                return !Object.is(e[t], n) && (e[t] = n, !0)
            }

            function To(e, t, n, r) {
                const s = Do(e, t, n);
                return Do(e, t + 1, r) || s
            }

            function Oo(e, t, n, r) {
                const s = It();
                return Do(s, qt(), t) && (Mt(), function(e, t, n, r, s, i) {
                    const o = wt(e, t);
                    ! function(e, t, n, r, s, i, o) {
                        if (null == i) yt(e) ? e.removeAttribute(t, s, n) : t.removeAttribute(s);
                        else {
                            const a = null == o ? le(i) : o(i, r || "", s);
                            yt(e) ? e.setAttribute(t, s, a, n) : n ? t.setAttributeNS(n, s, a) : t.setAttribute(s, a)
                        }
                    }(t[11], o, i, e.value, n, r, s)
                }(ln(), s, e, t, n, r)), Oo
            }

            function Fo(e, t, n, r) {
                return Do(e, qt(), n) ? t + le(n) + r : ti
            }

            function Po(e, t, n, r, s, i) {
                const o = To(e, zt(), n, s);
                return Gt(2), o ? t + le(n) + r + le(s) + i : ti
            }

            function Io(e, t, n, r, s, i, o, a) {
                const l = It(),
                    u = Mt(),
                    c = e + Xe,
                    h = u.firstCreatePass ? function(e, t, n, r, s, i, o, a, l) {
                        const u = t.consts,
                            c = di(t, e, 4, o || null, Dt(u, a));
                        ki(t, n, c, Dt(u, l)), un(t, c);
                        const h = c.tViews = Ci(2, c, r, s, i, t.directiveRegistry, t.pipeRegistry, null, t.schemas, u);
                        return null !== t.queries && (t.queries.template(t, c), h.queries = t.queries.embeddedTView(c)), c
                    }(c, u, l, t, n, r, s, i, o) : u.data[c];
                jt(h, !1);
                const d = l[11].createComment("");
                Ms(u, l, d, h), hs(d, l), Vi(l, l[c] = Ni(d, l, d, h)), it(h) && vi(u, l, h), null != o && _i(l, h, a)
            }

            function Mo(e) {
                return St(Ft.lFrame.contextLView, Xe + e)
            }

            function Ro(e, t = _e.Default) {
                const n = It();
                return null === n ? dr(e, t) : Rn(Nt(), n, ie(e), t)
            }

            function No(e, t, n) {
                const r = It();
                return Do(r, qt(), t) && Ei(Mt(), ln(), r, e, t, r[11], n, !1), No
            }

            function Lo(e, t, n, r, s) {
                const i = s ? "class" : "style";
                Zi(e, n, t.inputs[i], i, r)
            }

            function jo(e, t, n, r) {
                const s = It(),
                    i = Mt(),
                    o = Xe + e,
                    a = s[11],
                    l = s[o] = Cs(a, t, Ft.lFrame.currentNamespace),
                    u = i.firstCreatePass ? function(e, t, n, r, s, i, o) {
                        const a = t.consts,
                            l = di(t, e, 2, s, Dt(a, i));
                        return ki(t, n, l, Dt(a, o)), null !== l.attrs && Yi(l, l.attrs, !1), null !== l.mergedAttrs && Yi(l, l.mergedAttrs, !0), null !== t.queries && t.queries.elementStart(t, l), l
                    }(o, i, s, 0, t, n, r) : i.data[o];
                jt(u, !0);
                const c = u.mergedAttrs;
                null !== c && yn(a, l, c);
                const h = u.classes;
                null !== h && $s(a, l, h);
                const d = u.styles;
                null !== d && Us(a, l, d), 64 != (64 & u.flags) && Ms(i, s, l, u), 0 === Ft.lFrame.elementDepthCount && hs(l, s), Ft.lFrame.elementDepthCount++, it(u) && (vi(i, s, u), bi(i, u, s)), null !== r && _i(s, u)
            }

            function Bo() {
                let e = Nt();
                Bt() ? Vt() : (e = e.parent, jt(e, !1));
                const t = e;
                Ft.lFrame.elementDepthCount--;
                const n = Mt();
                n.firstCreatePass && (un(n, e), rt(e) && n.queries.elementEnd(e)), null != t.classesWithoutHost && function(e) {
                    return 0 != (16 & e.flags)
                }(t) && Lo(n, t, It(), t.classesWithoutHost, !0), null != t.stylesWithoutHost && function(e) {
                    return 0 != (32 & e.flags)
                }(t) && Lo(n, t, It(), t.stylesWithoutHost, !1)
            }

            function Vo(e, t, n, r) {
                jo(e, t, n, r), Bo()
            }

            function Uo() {
                return It()
            }

            function $o(e) {
                return !!e && "function" == typeof e.then
            }

            function Ho(e) {
                return !!e && "function" == typeof e.subscribe
            }
            const zo = Ho;

            function qo(e, t, n = !1, r) {
                const s = It(),
                    i = Mt(),
                    o = Nt();
                return function(e, t, n, r, s, i, o = !1, a) {
                    const l = it(r),
                        u = e.firstCreatePass && Wi(e),
                        c = Gi(t);
                    let h = !0;
                    if (3 & r.type) {
                        const d = wt(r, t),
                            p = a ? a(d) : Pe,
                            f = p.target || d,
                            g = c.length,
                            m = a ? e => a(vt(e[r.index])).target : r.index;
                        if (yt(n)) {
                            let o = null;
                            if (!a && l && (o = function(e, t, n, r) {
                                    const s = e.cleanup;
                                    if (null != s)
                                        for (let i = 0; i < s.length - 1; i += 2) {
                                            const e = s[i];
                                            if (e === n && s[i + 1] === r) {
                                                const e = t[7],
                                                    n = s[i + 2];
                                                return e.length > n ? e[n] : null
                                            }
                                            "string" == typeof e && (i += 2)
                                        }
                                    return null
                                }(e, t, s, r.index)), null !== o)(o.__ngLastListenerFn__ || o).__ngNextListenerFn__ = i, o.__ngLastListenerFn__ = i, h = !1;
                            else {
                                i = Wo(r, t, 0, i, !1);
                                const e = n.listen(p.name || f, s, i);
                                c.push(i, e), u && u.push(s, m, g, g + 1)
                            }
                        } else i = Wo(r, t, 0, i, !0), f.addEventListener(s, i, o), c.push(i), u && u.push(s, m, g, o)
                    } else i = Wo(r, t, 0, i, !1);
                    const d = r.outputs;
                    let p;
                    if (h && null !== d && (p = d[s])) {
                        const e = p.length;
                        if (e)
                            for (let n = 0; n < e; n += 2) {
                                const e = t[p[n]][p[n + 1]].subscribe(i),
                                    o = c.length;
                                c.push(i, e), u && u.push(s, r.index, o, -(o + 1))
                            }
                    }
                }(i, s, s[11], o, e, t, n, r), qo
            }

            function Go(e, t, n, r) {
                try {
                    return !1 !== n(r)
                } catch (s) {
                    return Ki(e, s), !1
                }
            }

            function Wo(e, t, n, r, s) {
                return function n(i) {
                    if (i === Function) return r;
                    const o = 2 & e.flags ? xt(e.index, t) : t;
                    0 == (32 & t[2]) && Ui(o);
                    let a = Go(t, 0, r, i),
                        l = n.__ngNextListenerFn__;
                    for (; l;) a = Go(t, 0, l, i) && a, l = l.__ngNextListenerFn__;
                    return s && !1 === a && (i.preventDefault(), i.returnValue = !1), a
                }
            }

            function Ko(e = 1) {
                return function(e) {
                    return (Ft.lFrame.contextLView = function(e, t) {
                        for (; e > 0;) t = t[15], e--;
                        return t
                    }(e, Ft.lFrame.contextLView))[8]
                }(e)
            }

            function Zo(e, t) {
                let n = null;
                const r = function(e) {
                    const t = e.attrs;
                    if (null != t) {
                        const e = t.indexOf(5);
                        if (0 == (1 & e)) return t[e + 1]
                    }
                    return null
                }(e);
                for (let s = 0; s < t.length; s++) {
                    const i = t[s];
                    if ("*" !== i) {
                        if (null === r ? Ys(e, i, !0) : Js(r, i)) return s
                    } else n = s
                }
                return n
            }

            function Qo(e) {
                const t = It()[16][6];
                if (!t.projection) {
                    const n = t.projection = tr(e ? e.length : 1, null),
                        r = n.slice();
                    let s = t.child;
                    for (; null !== s;) {
                        const t = e ? Zo(s, e) : 0;
                        null !== t && (r[t] ? r[t].projectionNext = s : n[t] = s, r[t] = s), s = s.next
                    }
                }
            }

            function Yo(e, t = 0, n) {
                const r = It(),
                    s = Mt(),
                    i = di(s, Xe + e, 16, null, n || null);
                null === i.projection && (i.projection = t), Vt(), 64 != (64 & i.flags) && function(e, t, n) {
                    Vs(t[11], 0, t, n, As(e, n, t), Ps(n.parent || t[6], n, t))
                }(s, r, i)
            }

            function Jo(e, t, n) {
                return Xo(e, "", t, "", n), Jo
            }

            function Xo(e, t, n, r, s) {
                const i = It(),
                    o = Fo(i, t, n, r);
                return o !== ti && Ei(Mt(), ln(), i, e, o, i[11], s, !1), Xo
            }

            function ea(e, t, n, r, s, i, o) {
                const a = It(),
                    l = Po(a, t, n, r, s, i);
                return l !== ti && Ei(Mt(), ln(), a, e, l, a[11], o, !1), ea
            }

            function ta(e, t, n, r, s) {
                const i = e[n + 1],
                    o = null === t;
                let a = r ? ii(i) : ai(i),
                    l = !1;
                for (; 0 !== a && (!1 === l || o);) {
                    const n = e[a + 1];
                    na(e[a], t) && (l = !0, e[a + 1] = r ? ui(n) : oi(n)), a = r ? ii(n) : ai(n)
                }
                l && (e[n + 1] = r ? oi(i) : ui(i))
            }

            function na(e, t) {
                return null === e || null == t || (Array.isArray(e) ? e[1] : e) === t || !(!Array.isArray(e) || "string" != typeof t) && sr(e, t) >= 0
            }
            const ra = {
                textEnd: 0,
                key: 0,
                keyEnd: 0,
                value: 0,
                valueEnd: 0
            };

            function sa(e) {
                return e.substring(ra.key, ra.keyEnd)
            }

            function ia(e) {
                return e.substring(ra.value, ra.valueEnd)
            }

            function oa(e, t) {
                const n = ra.textEnd;
                return n === t ? -1 : (t = ra.keyEnd = function(e, t, n) {
                    for (; t < n && e.charCodeAt(t) > 32;) t++;
                    return t
                }(e, ra.key = t, n), ua(e, t, n))
            }

            function aa(e, t) {
                const n = ra.textEnd;
                let r = ra.key = ua(e, t, n);
                return n === r ? -1 : (r = ra.keyEnd = function(e, t, n) {
                    let r;
                    for (; t < n && (45 === (r = e.charCodeAt(t)) || 95 === r || (-33 & r) >= 65 && (-33 & r) <= 90 || r >= 48 && r <= 57);) t++;
                    return t
                }(e, r, n), r = ca(e, r, n), r = ra.value = ua(e, r, n), r = ra.valueEnd = function(e, t, n) {
                    let r = -1,
                        s = -1,
                        i = -1,
                        o = t,
                        a = o;
                    for (; o < n;) {
                        const l = e.charCodeAt(o++);
                        if (59 === l) return a;
                        34 === l || 39 === l ? a = o = ha(e, l, o, n) : t === o - 4 && 85 === i && 82 === s && 76 === r && 40 === l ? a = o = ha(e, 41, o, n) : l > 32 && (a = o), i = s, s = r, r = -33 & l
                    }
                    return a
                }(e, r, n), ca(e, r, n))
            }

            function la(e) {
                ra.key = 0, ra.keyEnd = 0, ra.value = 0, ra.valueEnd = 0, ra.textEnd = e.length
            }

            function ua(e, t, n) {
                for (; t < n && e.charCodeAt(t) <= 32;) t++;
                return t
            }

            function ca(e, t, n, r) {
                return (t = ua(e, t, n)) < n && t++, t
            }

            function ha(e, t, n, r) {
                let s = -1,
                    i = n;
                for (; i < r;) {
                    const n = e.charCodeAt(i++);
                    if (n == t && 92 !== s) return i;
                    s = 92 == n && 92 === s ? 0 : n
                }
                throw new Error
            }

            function da(e, t, n) {
                return ma(e, t, n, !1), da
            }

            function pa(e, t) {
                return ma(e, t, null, !0), pa
            }

            function fa(e, t) {
                for (let n = function(e) {
                        return la(e), aa(e, ua(e, 0, ra.textEnd))
                    }(t); n >= 0; n = aa(t, n)) Ca(e, sa(t), ia(t))
            }

            function ga(e, t) {
                for (let n = function(e) {
                        return la(e), oa(e, ua(e, 0, ra.textEnd))
                    }(t); n >= 0; n = oa(t, n)) nr(e, sa(t), !0)
            }

            function ma(e, t, n, r) {
                const s = It(),
                    i = Mt(),
                    o = Gt(2);
                i.firstUpdatePass && va(i, e, o, r), t !== ti && Do(s, o, t) && Sa(i, i.data[on()], s, s[11], e, s[o + 1] = function(e, t) {
                    return null == e || ("string" == typeof t ? e += t : "object" == typeof e && (e = te(Or(e)))), e
                }(t, n), r, o)
            }

            function ya(e, t, n, r) {
                const s = Mt(),
                    i = Gt(2);
                s.firstUpdatePass && va(s, null, i, r);
                const o = It();
                if (n !== ti && Do(o, i, n)) {
                    const a = s.data[on()];
                    if (ka(a, r) && !ba(s, i)) {
                        let e = r ? a.classesWithoutHost : a.stylesWithoutHost;
                        null !== e && (n = ne(e, n || "")), Lo(s, a, o, n, r)
                    } else ! function(e, t, n, r, s, i, o, a) {
                        s === ti && (s = Ie);
                        let l = 0,
                            u = 0,
                            c = 0 < s.length ? s[0] : null,
                            h = 0 < i.length ? i[0] : null;
                        for (; null !== c || null !== h;) {
                            const d = l < s.length ? s[l + 1] : void 0,
                                p = u < i.length ? i[u + 1] : void 0;
                            let f, g = null;
                            c === h ? (l += 2, u += 2, d !== p && (g = h, f = p)) : null === h || null !== c && c < h ? (l += 2, g = c) : (u += 2, g = h, f = p), null !== g && Sa(e, t, n, r, g, f, o, a), c = l < s.length ? s[l] : null, h = u < i.length ? i[u] : null
                        }
                    }(s, a, o, o[11], o[i + 1], o[i + 1] = function(e, t, n) {
                        if (null == n || "" === n) return Ie;
                        const r = [],
                            s = Or(n);
                        if (Array.isArray(s))
                            for (let i = 0; i < s.length; i++) e(r, s[i], !0);
                        else if ("object" == typeof s)
                            for (const i in s) s.hasOwnProperty(i) && e(r, i, s[i]);
                        else "string" == typeof s && t(r, s);
                        return r
                    }(e, t, n), r, i)
                }
            }

            function ba(e, t) {
                return t >= e.expandoStartIndex
            }

            function va(e, t, n, r) {
                const s = e.data;
                if (null === s[n + 1]) {
                    const i = s[on()],
                        o = ba(e, n);
                    ka(i, r) && null === t && !o && (t = !1), t = function(e, t, n, r) {
                            const s = function(e) {
                                const t = Ft.lFrame.currentDirectiveIndex;
                                return -1 === t ? null : e[t]
                            }(e);
                            let i = r ? t.residualClasses : t.residualStyles;
                            if (null === s) 0 === (r ? t.classBindings : t.styleBindings) && (n = wa(n = _a(null, e, t, n, r), t.attrs, r), i = null);
                            else {
                                const o = t.directiveStylingLast;
                                if (-1 === o || e[o] !== s)
                                    if (n = _a(s, e, t, n, r), null === i) {
                                        let n = function(e, t, n) {
                                            const r = n ? t.classBindings : t.styleBindings;
                                            if (0 !== ai(r)) return e[ii(r)]
                                        }(e, t, r);
                                        void 0 !== n && Array.isArray(n) && (n = _a(null, e, t, n[1], r), n = wa(n, t.attrs, r), function(e, t, n, r) {
                                            e[ii(n ? t.classBindings : t.styleBindings)] = r
                                        }(e, t, r, n))
                                    } else i = function(e, t, n) {
                                        let r;
                                        const s = t.directiveEnd;
                                        for (let i = 1 + t.directiveStylingLast; i < s; i++) r = wa(r, e[i].hostAttrs, n);
                                        return wa(r, t.attrs, n)
                                    }(e, t, r)
                            }
                            return void 0 !== i && (r ? t.residualClasses = i : t.residualStyles = i), n
                        }(s, i, t, r),
                        function(e, t, n, r, s, i) {
                            let o = i ? t.classBindings : t.styleBindings,
                                a = ii(o),
                                l = ai(o);
                            e[r] = n;
                            let u, c = !1;
                            if (Array.isArray(n)) {
                                const e = n;
                                u = e[1], (null === u || sr(e, u) > 0) && (c = !0)
                            } else u = n;
                            if (s)
                                if (0 !== l) {
                                    const t = ii(e[a + 1]);
                                    e[r + 1] = si(t, a), 0 !== t && (e[t + 1] = li(e[t + 1], r)), e[a + 1] = 131071 & e[a + 1] | r << 17
                                } else e[r + 1] = si(a, 0), 0 !== a && (e[a + 1] = li(e[a + 1], r)), a = r;
                            else e[r + 1] = si(l, 0), 0 === a ? a = r : e[l + 1] = li(e[l + 1], r), l = r;
                            c && (e[r + 1] = oi(e[r + 1])), ta(e, u, r, !0), ta(e, u, r, !1),
                                function(e, t, n, r, s) {
                                    const i = s ? e.residualClasses : e.residualStyles;
                                    null != i && "string" == typeof t && sr(i, t) >= 0 && (n[r + 1] = ui(n[r + 1]))
                                }(t, u, e, r, i), o = si(a, l), i ? t.classBindings = o : t.styleBindings = o
                        }(s, i, t, n, o, r)
                }
            }

            function _a(e, t, n, r, s) {
                let i = null;
                const o = n.directiveEnd;
                let a = n.directiveStylingLast;
                for (-1 === a ? a = n.directiveStart : a++; a < o && (i = t[a], r = wa(r, i.hostAttrs, s), i !== e);) a++;
                return null !== e && (n.directiveStylingLast = a), r
            }

            function wa(e, t, n) {
                const r = n ? 1 : 2;
                let s = -1;
                if (null !== t)
                    for (let i = 0; i < t.length; i++) {
                        const o = t[i];
                        "number" == typeof o ? s = o : s === r && (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]), nr(e, o, !!n || t[++i]))
                    }
                return void 0 === e ? null : e
            }

            function Ca(e, t, n) {
                nr(e, t, Or(n))
            }

            function Sa(e, t, n, r, s, i, o, a) {
                if (!(3 & t.type)) return;
                const l = e.data,
                    u = l[a + 1];
                Ea(1 == (1 & u) ? xa(l, t, n, s, ai(u), o) : void 0) || (Ea(i) || 2 == (2 & u) && (i = xa(l, null, n, s, a, o)), function(e, t, n, r, s) {
                    const i = yt(e);
                    if (t) s ? i ? e.addClass(n, r) : n.classList.add(r) : i ? e.removeClass(n, r) : n.classList.remove(r);
                    else {
                        let t = -1 === r.indexOf("-") ? void 0 : gs.DashCase;
                        if (null == s) i ? e.removeStyle(n, r, t) : n.style.removeProperty(r);
                        else {
                            const o = "string" == typeof s && s.endsWith("!important");
                            o && (s = s.slice(0, -10), t |= gs.Important), i ? e.setStyle(n, r, s, t) : n.style.setProperty(r, s, o ? "important" : "")
                        }
                    }
                }(r, o, _t(on(), n), s, i))
            }

            function xa(e, t, n, r, s, i) {
                const o = null === t;
                let a;
                for (; s > 0;) {
                    const t = e[s],
                        i = Array.isArray(t),
                        l = i ? t[1] : t,
                        u = null === l;
                    let c = n[s + 1];
                    c === ti && (c = u ? Ie : void 0);
                    let h = u ? rr(c, r) : l === r ? c : void 0;
                    if (i && !Ea(h) && (h = rr(t, r)), Ea(h) && (a = h, o)) return a;
                    const d = e[s + 1];
                    s = o ? ii(d) : ai(d)
                }
                if (null !== t) {
                    let e = i ? t.residualClasses : t.residualStyles;
                    null != e && (a = rr(e, r))
                }
                return a
            }

            function Ea(e) {
                return void 0 !== e
            }

            function ka(e, t) {
                return 0 != (e.flags & (t ? 16 : 32))
            }

            function Aa(e, t = "") {
                const n = It(),
                    r = Mt(),
                    s = e + Xe,
                    i = r.firstCreatePass ? di(r, s, 1, t, null) : r.data[s],
                    o = n[s] = function(e, t) {
                        return yt(e) ? e.createText(t) : e.createTextNode(t)
                    }(n[11], t);
                Ms(r, n, o, i), jt(i, !1)
            }

            function Da(e) {
                return Ta("", e, ""), Da
            }

            function Ta(e, t, n) {
                const r = It(),
                    s = Fo(r, e, t, n);
                return s !== ti && Qi(r, on(), s), Ta
            }

            function Oa(e, t, n, r, s) {
                const i = It(),
                    o = Po(i, e, t, n, r, s);
                return o !== ti && Qi(i, on(), o), Oa
            }

            function Fa(e, t, n) {
                ya(nr, ga, Fo(It(), e, t, n), !0)
            }

            function Pa(e, t, n) {
                const r = It();
                return Do(r, qt(), t) && Ei(Mt(), ln(), r, e, t, r[11], n, !0), Pa
            }
            const Ia = void 0;
            var Ma = ["en", [
                    ["a", "p"],
                    ["AM", "PM"], Ia
                ],
                [
                    ["AM", "PM"], Ia, Ia
                ],
                [
                    ["S", "M", "T", "W", "T", "F", "S"],
                    ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                ], Ia, [
                    ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                    ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                ], Ia, [
                    ["B", "A"],
                    ["BC", "AD"],
                    ["Before Christ", "Anno Domini"]
                ], 0, [6, 0],
                ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
                ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
                ["{1}, {0}", Ia, "{1} 'at' {0}", Ia],
                [".", ",", ";", "%", "+", "-", "E", "\xd7", "\u2030", "\u221e", "NaN", ":"],
                ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"], "USD", "$", "US Dollar", {}, "ltr",
                function(e) {
                    let t = Math.floor(Math.abs(e)),
                        n = e.toString().replace(/^[^.]*\.?/, "").length;
                    return 1 === t && 0 === n ? 1 : 5
                }
            ];
            let Ra = {};

            function Na(e) {
                const t = function(e) {
                    return e.toLowerCase().replace(/_/g, "-")
                }(e);
                let n = La(t);
                if (n) return n;
                const r = t.split("-")[0];
                if (n = La(r), n) return n;
                if ("en" === r) return Ma;
                throw new Error(`Missing locale data for the locale "${e}".`)
            }

            function La(e) {
                return e in Ra || (Ra[e] = Fe.ng && Fe.ng.common && Fe.ng.common.locales && Fe.ng.common.locales[e]), Ra[e]
            }
            var ja = function(e) {
                return e[e.LocaleId = 0] = "LocaleId", e[e.DayPeriodsFormat = 1] = "DayPeriodsFormat", e[e.DayPeriodsStandalone = 2] = "DayPeriodsStandalone", e[e.DaysFormat = 3] = "DaysFormat", e[e.DaysStandalone = 4] = "DaysStandalone", e[e.MonthsFormat = 5] = "MonthsFormat", e[e.MonthsStandalone = 6] = "MonthsStandalone", e[e.Eras = 7] = "Eras", e[e.FirstDayOfWeek = 8] = "FirstDayOfWeek", e[e.WeekendRange = 9] = "WeekendRange", e[e.DateFormat = 10] = "DateFormat", e[e.TimeFormat = 11] = "TimeFormat", e[e.DateTimeFormat = 12] = "DateTimeFormat", e[e.NumberSymbols = 13] = "NumberSymbols", e[e.NumberFormats = 14] = "NumberFormats", e[e.CurrencyCode = 15] = "CurrencyCode", e[e.CurrencySymbol = 16] = "CurrencySymbol", e[e.CurrencyName = 17] = "CurrencyName", e[e.Currencies = 18] = "Currencies", e[e.Directionality = 19] = "Directionality", e[e.PluralCase = 20] = "PluralCase", e[e.ExtraData = 21] = "ExtraData", e
            }({});
            const Ba = "en-US";
            let Va = Ba;

            function Ua(e) {
                var t, n;
                n = "Expected localeId to be defined", null == (t = e) && function(e, t, n, r) {
                    throw new Error(`ASSERTION ERROR: ${e} [Expected=> null != ${t} <=Actual]`)
                }(n, t), "string" == typeof e && (Va = e.toLowerCase().replace(/_/g, "-"))
            }

            function $a(e, t, n, r, s) {
                if (e = ie(e), Array.isArray(e))
                    for (let i = 0; i < e.length; i++) $a(e[i], t, n, r, s);
                else {
                    const i = Mt(),
                        o = It();
                    let a = po(e) ? e : ie(e.provide),
                        l = uo(e);
                    const u = Nt(),
                        c = 1048575 & u.providerIndexes,
                        h = u.directiveStart,
                        d = u.providerIndexes >> 20;
                    if (po(e) || !e.multi) {
                        const r = new mn(l, s, Ro),
                            p = qa(a, t, s ? c : c + d, h); - 1 === p ? (Pn(Dn(u, o), i, a), Ha(i, e, t.length), t.push(a), u.directiveStart++, u.directiveEnd++, s && (u.providerIndexes += 1048576), n.push(r), o.push(r)) : (n[p] = r, o[p] = r)
                    } else {
                        const p = qa(a, t, c + d, h),
                            f = qa(a, t, c, c + d),
                            g = p >= 0 && n[p],
                            m = f >= 0 && n[f];
                        if (s && !m || !s && !g) {
                            Pn(Dn(u, o), i, a);
                            const c = function(e, t, n, r, s) {
                                const i = new mn(e, n, Ro);
                                return i.multi = [], i.index = t, i.componentProviders = 0, za(i, s, r && !n), i
                            }(s ? Wa : Ga, n.length, s, r, l);
                            !s && m && (n[f].providerFactory = c), Ha(i, e, t.length, 0), t.push(a), u.directiveStart++, u.directiveEnd++, s && (u.providerIndexes += 1048576), n.push(c), o.push(c)
                        } else Ha(i, e, p > -1 ? p : f, za(n[s ? f : p], l, !s && r));
                        !s && r && m && n[f].componentProviders++
                    }
                }
            }

            function Ha(e, t, n, r) {
                const s = po(t);
                if (s || t.useClass) {
                    const i = (t.useClass || t).prototype.ngOnDestroy;
                    if (i) {
                        const o = e.destroyHooks || (e.destroyHooks = []);
                        if (!s && t.multi) {
                            const e = o.indexOf(n); - 1 === e ? o.push(n, [r, i]) : o[e + 1].push(r, i)
                        } else o.push(n, i)
                    }
                }
            }

            function za(e, t, n) {
                return n && e.componentProviders++, e.multi.push(t) - 1
            }

            function qa(e, t, n, r) {
                for (let s = n; s < r; s++)
                    if (t[s] === e) return s;
                return -1
            }

            function Ga(e, t, n, r) {
                return Ka(this.multi, [])
            }

            function Wa(e, t, n, r) {
                const s = this.multi;
                let i;
                if (this.providerFactory) {
                    const e = this.providerFactory.componentProviders,
                        t = Vn(n, n[1], this.providerFactory.index, r);
                    i = t.slice(0, e), Ka(s, i);
                    for (let n = e; n < t.length; n++) i.push(t[n])
                } else i = [], Ka(s, i);
                return i
            }

            function Ka(e, t) {
                for (let n = 0; n < e.length; n++) t.push((0, e[n])());
                return t
            }

            function Za(e, t = []) {
                return n => {
                    n.providersResolver = (n, r) => function(e, t, n) {
                        const r = Mt();
                        if (r.firstCreatePass) {
                            const s = ot(e);
                            $a(n, r.data, r.blueprint, s, !0), $a(t, r.data, r.blueprint, s, !1)
                        }
                    }(n, r ? r(e) : e, t)
                }
            }
            class Qa {}
            class Ya {
                resolveComponentFactory(e) {
                    throw function(e) {
                        const t = Error(`No component factory found for ${te(e)}. Did you add it to @NgModule.entryComponents?`);
                        return t.ngComponent = e, t
                    }(e)
                }
            }
            let Ja = (() => {
                class e {}
                return e.NULL = new Ya, e
            })();

            function Xa(...e) {}

            function el(e, t) {
                return new nl(wt(e, t))
            }
            const tl = function() {
                return el(Nt(), It())
            };
            let nl = (() => {
                class e {
                    constructor(e) {
                        this.nativeElement = e
                    }
                }
                return e.__NG_ELEMENT_ID__ = tl, e
            })();

            function rl(e) {
                return e instanceof nl ? e.nativeElement : e
            }
            class sl {}
            let il = (() => {
                class e {}
                return e.__NG_ELEMENT_ID__ = () => ol(), e
            })();
            const ol = function() {
                const e = It(),
                    t = xt(Nt().index, e);
                return function(e) {
                    return e[11]
                }(tt(t) ? t : e)
            };
            let al = (() => {
                class e {}
                return e.\u0275prov = he({
                    token: e,
                    providedIn: "root",
                    factory: () => null
                }), e
            })();
            class ll {
                constructor(e) {
                    this.full = e, this.major = e.split(".")[0], this.minor = e.split(".")[1], this.patch = e.split(".").slice(2).join(".")
                }
            }
            const ul = new ll("11.2.11");
            class cl {
                constructor() {}
                supports(e) {
                    return Eo(e)
                }
                create(e) {
                    return new dl(e)
                }
            }
            const hl = (e, t) => t;
            class dl {
                constructor(e) {
                    this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = e || hl
                }
                forEachItem(e) {
                    let t;
                    for (t = this._itHead; null !== t; t = t._next) e(t)
                }
                forEachOperation(e) {
                    let t = this._itHead,
                        n = this._removalsHead,
                        r = 0,
                        s = null;
                    for (; t || n;) {
                        const i = !n || t && t.currentIndex < ml(n, r, s) ? t : n,
                            o = ml(i, r, s),
                            a = i.currentIndex;
                        if (i === n) r--, n = n._nextRemoved;
                        else if (t = t._next, null == i.previousIndex) r++;
                        else {
                            s || (s = []);
                            const e = o - r,
                                t = a - r;
                            if (e != t) {
                                for (let n = 0; n < e; n++) {
                                    const r = n < s.length ? s[n] : s[n] = 0,
                                        i = r + n;
                                    t <= i && i < e && (s[n] = r + 1)
                                }
                                s[i.previousIndex] = t - e
                            }
                        }
                        o !== a && e(i, o, a)
                    }
                }
                forEachPreviousItem(e) {
                    let t;
                    for (t = this._previousItHead; null !== t; t = t._nextPrevious) e(t)
                }
                forEachAddedItem(e) {
                    let t;
                    for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t)
                }
                forEachMovedItem(e) {
                    let t;
                    for (t = this._movesHead; null !== t; t = t._nextMoved) e(t)
                }
                forEachRemovedItem(e) {
                    let t;
                    for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t)
                }
                forEachIdentityChange(e) {
                    let t;
                    for (t = this._identityChangesHead; null !== t; t = t._nextIdentityChange) e(t)
                }
                diff(e) {
                    if (null == e && (e = []), !Eo(e)) throw new Error(`Error trying to diff '${te(e)}'. Only arrays and iterables are allowed`);
                    return this.check(e) ? this : null
                }
                onDestroy() {}
                check(e) {
                    this._reset();
                    let t, n, r, s = this._itHead,
                        i = !1;
                    if (Array.isArray(e)) {
                        this.length = e.length;
                        for (let t = 0; t < this.length; t++) n = e[t], r = this._trackByFn(t, n), null !== s && Object.is(s.trackById, r) ? (i && (s = this._verifyReinsertion(s, n, r, t)), Object.is(s.item, n) || this._addIdentityChange(s, n)) : (s = this._mismatch(s, n, r, t), i = !0), s = s._next
                    } else t = 0,
                        function(e, t) {
                            if (Array.isArray(e))
                                for (let n = 0; n < e.length; n++) t(e[n]);
                            else {
                                const n = e[So()]();
                                let r;
                                for (; !(r = n.next()).done;) t(r.value)
                            }
                        }(e, e => {
                            r = this._trackByFn(t, e), null !== s && Object.is(s.trackById, r) ? (i && (s = this._verifyReinsertion(s, e, r, t)), Object.is(s.item, e) || this._addIdentityChange(s, e)) : (s = this._mismatch(s, e, r, t), i = !0), s = s._next, t++
                        }), this.length = t;
                    return this._truncate(s), this.collection = e, this.isDirty
                }
                get isDirty() {
                    return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead
                }
                _reset() {
                    if (this.isDirty) {
                        let e;
                        for (e = this._previousItHead = this._itHead; null !== e; e = e._next) e._nextPrevious = e._next;
                        for (e = this._additionsHead; null !== e; e = e._nextAdded) e.previousIndex = e.currentIndex;
                        for (this._additionsHead = this._additionsTail = null, e = this._movesHead; null !== e; e = e._nextMoved) e.previousIndex = e.currentIndex;
                        this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null
                    }
                }
                _mismatch(e, t, n, r) {
                    let s;
                    return null === e ? s = this._itTail : (s = e._prev, this._remove(e)), null !== (e = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null)) ? (Object.is(e.item, t) || this._addIdentityChange(e, t), this._reinsertAfter(e, s, r)) : null !== (e = null === this._linkedRecords ? null : this._linkedRecords.get(n, r)) ? (Object.is(e.item, t) || this._addIdentityChange(e, t), this._moveAfter(e, s, r)) : e = this._addAfter(new pl(t, n), s, r), e
                }
                _verifyReinsertion(e, t, n, r) {
                    let s = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null);
                    return null !== s ? e = this._reinsertAfter(s, e._prev, r) : e.currentIndex != r && (e.currentIndex = r, this._addToMoves(e, r)), e
                }
                _truncate(e) {
                    for (; null !== e;) {
                        const t = e._next;
                        this._addToRemovals(this._unlink(e)), e = t
                    }
                    null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null)
                }
                _reinsertAfter(e, t, n) {
                    null !== this._unlinkedRecords && this._unlinkedRecords.remove(e);
                    const r = e._prevRemoved,
                        s = e._nextRemoved;
                    return null === r ? this._removalsHead = s : r._nextRemoved = s, null === s ? this._removalsTail = r : s._prevRemoved = r, this._insertAfter(e, t, n), this._addToMoves(e, n), e
                }
                _moveAfter(e, t, n) {
                    return this._unlink(e), this._insertAfter(e, t, n), this._addToMoves(e, n), e
                }
                _addAfter(e, t, n) {
                    return this._insertAfter(e, t, n), this._additionsTail = null === this._additionsTail ? this._additionsHead = e : this._additionsTail._nextAdded = e, e
                }
                _insertAfter(e, t, n) {
                    const r = null === t ? this._itHead : t._next;
                    return e._next = r, e._prev = t, null === r ? this._itTail = e : r._prev = e, null === t ? this._itHead = e : t._next = e, null === this._linkedRecords && (this._linkedRecords = new gl), this._linkedRecords.put(e), e.currentIndex = n, e
                }
                _remove(e) {
                    return this._addToRemovals(this._unlink(e))
                }
                _unlink(e) {
                    null !== this._linkedRecords && this._linkedRecords.remove(e);
                    const t = e._prev,
                        n = e._next;
                    return null === t ? this._itHead = n : t._next = n, null === n ? this._itTail = t : n._prev = t, e
                }
                _addToMoves(e, t) {
                    return e.previousIndex === t || (this._movesTail = null === this._movesTail ? this._movesHead = e : this._movesTail._nextMoved = e), e
                }
                _addToRemovals(e) {
                    return null === this._unlinkedRecords && (this._unlinkedRecords = new gl), this._unlinkedRecords.put(e), e.currentIndex = null, e._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = e, e._prevRemoved = null) : (e._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = e), e
                }
                _addIdentityChange(e, t) {
                    return e.item = t, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = e : this._identityChangesTail._nextIdentityChange = e, e
                }
            }
            class pl {
                constructor(e, t) {
                    this.item = e, this.trackById = t, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null
                }
            }
            class fl {
                constructor() {
                    this._head = null, this._tail = null
                }
                add(e) {
                    null === this._head ? (this._head = this._tail = e, e._nextDup = null, e._prevDup = null) : (this._tail._nextDup = e, e._prevDup = this._tail, e._nextDup = null, this._tail = e)
                }
                get(e, t) {
                    let n;
                    for (n = this._head; null !== n; n = n._nextDup)
                        if ((null === t || t <= n.currentIndex) && Object.is(n.trackById, e)) return n;
                    return null
                }
                remove(e) {
                    const t = e._prevDup,
                        n = e._nextDup;
                    return null === t ? this._head = n : t._nextDup = n, null === n ? this._tail = t : n._prevDup = t, null === this._head
                }
            }
            class gl {
                constructor() {
                    this.map = new Map
                }
                put(e) {
                    const t = e.trackById;
                    let n = this.map.get(t);
                    n || (n = new fl, this.map.set(t, n)), n.add(e)
                }
                get(e, t) {
                    const n = this.map.get(e);
                    return n ? n.get(e, t) : null
                }
                remove(e) {
                    const t = e.trackById;
                    return this.map.get(t).remove(e) && this.map.delete(t), e
                }
                get isEmpty() {
                    return 0 === this.map.size
                }
                clear() {
                    this.map.clear()
                }
            }

            function ml(e, t, n) {
                const r = e.previousIndex;
                if (null === r) return r;
                let s = 0;
                return n && r < n.length && (s = n[r]), r + t + s
            }
            class yl {
                constructor() {}
                supports(e) {
                    return e instanceof Map || ko(e)
                }
                create() {
                    return new bl
                }
            }
            class bl {
                constructor() {
                    this._records = new Map, this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null
                }
                get isDirty() {
                    return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead
                }
                forEachItem(e) {
                    let t;
                    for (t = this._mapHead; null !== t; t = t._next) e(t)
                }
                forEachPreviousItem(e) {
                    let t;
                    for (t = this._previousMapHead; null !== t; t = t._nextPrevious) e(t)
                }
                forEachChangedItem(e) {
                    let t;
                    for (t = this._changesHead; null !== t; t = t._nextChanged) e(t)
                }
                forEachAddedItem(e) {
                    let t;
                    for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t)
                }
                forEachRemovedItem(e) {
                    let t;
                    for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t)
                }
                diff(e) {
                    if (e) {
                        if (!(e instanceof Map || ko(e))) throw new Error(`Error trying to diff '${te(e)}'. Only maps and objects are allowed`)
                    } else e = new Map;
                    return this.check(e) ? this : null
                }
                onDestroy() {}
                check(e) {
                    this._reset();
                    let t = this._mapHead;
                    if (this._appendAfter = null, this._forEach(e, (e, n) => {
                            if (t && t.key === n) this._maybeAddToChanges(t, e), this._appendAfter = t, t = t._next;
                            else {
                                const r = this._getOrCreateRecordForKey(n, e);
                                t = this._insertBeforeOrAppend(t, r)
                            }
                        }), t) {
                        t._prev && (t._prev._next = null), this._removalsHead = t;
                        for (let e = t; null !== e; e = e._nextRemoved) e === this._mapHead && (this._mapHead = null), this._records.delete(e.key), e._nextRemoved = e._next, e.previousValue = e.currentValue, e.currentValue = null, e._prev = null, e._next = null
                    }
                    return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty
                }
                _insertBeforeOrAppend(e, t) {
                    if (e) {
                        const n = e._prev;
                        return t._next = e, t._prev = n, e._prev = t, n && (n._next = t), e === this._mapHead && (this._mapHead = t), this._appendAfter = e, e
                    }
                    return this._appendAfter ? (this._appendAfter._next = t, t._prev = this._appendAfter) : this._mapHead = t, this._appendAfter = t, null
                }
                _getOrCreateRecordForKey(e, t) {
                    if (this._records.has(e)) {
                        const n = this._records.get(e);
                        this._maybeAddToChanges(n, t);
                        const r = n._prev,
                            s = n._next;
                        return r && (r._next = s), s && (s._prev = r), n._next = null, n._prev = null, n
                    }
                    const n = new vl(e);
                    return this._records.set(e, n), n.currentValue = t, this._addToAdditions(n), n
                }
                _reset() {
                    if (this.isDirty) {
                        let e;
                        for (this._previousMapHead = this._mapHead, e = this._previousMapHead; null !== e; e = e._next) e._nextPrevious = e._next;
                        for (e = this._changesHead; null !== e; e = e._nextChanged) e.previousValue = e.currentValue;
                        for (e = this._additionsHead; null != e; e = e._nextAdded) e.previousValue = e.currentValue;
                        this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null
                    }
                }
                _maybeAddToChanges(e, t) {
                    Object.is(t, e.currentValue) || (e.previousValue = e.currentValue, e.currentValue = t, this._addToChanges(e))
                }
                _addToAdditions(e) {
                    null === this._additionsHead ? this._additionsHead = this._additionsTail = e : (this._additionsTail._nextAdded = e, this._additionsTail = e)
                }
                _addToChanges(e) {
                    null === this._changesHead ? this._changesHead = this._changesTail = e : (this._changesTail._nextChanged = e, this._changesTail = e)
                }
                _forEach(e, t) {
                    e instanceof Map ? e.forEach(t) : Object.keys(e).forEach(n => t(e[n], n))
                }
            }
            class vl {
                constructor(e) {
                    this.key = e, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null
                }
            }

            function _l() {
                return new wl([new cl])
            }
            let wl = (() => {
                class e {
                    constructor(e) {
                        this.factories = e
                    }
                    static create(t, n) {
                        if (null != n) {
                            const e = n.factories.slice();
                            t = t.concat(e)
                        }
                        return new e(t)
                    }
                    static extend(t) {
                        return {
                            provide: e,
                            useFactory: n => e.create(t, n || _l()),
                            deps: [
                                [e, new yr, new mr]
                            ]
                        }
                    }
                    find(e) {
                        const t = this.factories.find(t => t.supports(e));
                        if (null != t) return t;
                        throw new Error(`Cannot find a differ supporting object '${e}' of type '${n=e,n.name||typeof n}'`);
                        var n
                    }
                }
                return e.\u0275prov = he({
                    token: e,
                    providedIn: "root",
                    factory: _l
                }), e
            })();

            function Cl() {
                return new Sl([new yl])
            }
            let Sl = (() => {
                class e {
                    constructor(e) {
                        this.factories = e
                    }
                    static create(t, n) {
                        if (n) {
                            const e = n.factories.slice();
                            t = t.concat(e)
                        }
                        return new e(t)
                    }
                    static extend(t) {
                        return {
                            provide: e,
                            useFactory: n => e.create(t, n || Cl()),
                            deps: [
                                [e, new yr, new mr]
                            ]
                        }
                    }
                    find(e) {
                        const t = this.factories.find(t => t.supports(e));
                        if (t) return t;
                        throw new Error(`Cannot find a differ supporting object '${e}'`)
                    }
                }
                return e.\u0275prov = he({
                    token: e,
                    providedIn: "root",
                    factory: Cl
                }), e
            })();

            function xl(e, t, n, r, s = !1) {
                for (; null !== n;) {
                    const i = t[n.index];
                    if (null !== i && r.push(vt(i)), nt(i))
                        for (let e = et; e < i.length; e++) {
                            const t = i[e],
                                n = t[1].firstChild;
                            null !== n && xl(t[1], t, n, r)
                        }
                    const o = n.type;
                    if (8 & o) xl(e, t, n.child, r);
                    else if (32 & o) {
                        const e = ms(n, t);
                        let s;
                        for (; s = e();) r.push(s)
                    } else if (16 & o) {
                        const e = Ns(t, n);
                        if (Array.isArray(e)) r.push(...e);
                        else {
                            const n = ys(t[16]);
                            xl(n[1], n, e, r, !0)
                        }
                    }
                    n = s ? n.projectionNext : n.next
                }
                return r
            }
            class El {
                constructor(e, t) {
                    this._lView = e, this._cdRefInjectingView = t, this._appRef = null, this._attachedToViewContainer = !1
                }
                get rootNodes() {
                    const e = this._lView,
                        t = e[1];
                    return xl(t, e, t.firstChild, [])
                }
                get context() {
                    return this._lView[8]
                }
                get destroyed() {
                    return 256 == (256 & this._lView[2])
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const e = this._lView[3];
                        if (nt(e)) {
                            const t = e[8],
                                n = t ? t.indexOf(this) : -1;
                            n > -1 && (xs(e, n), er(t, n))
                        }
                        this._attachedToViewContainer = !1
                    }
                    Es(this._lView[1], this._lView)
                }
                onDestroy(e) {
                    Si(this._lView[1], this._lView, null, e)
                }
                markForCheck() {
                    Ui(this._cdRefInjectingView || this._lView)
                }
                detach() {
                    this._lView[2] &= -129
                }
                reattach() {
                    this._lView[2] |= 128
                }
                detectChanges() {
                    $i(this._lView[1], this._lView, this.context)
                }
                checkNoChanges() {
                    ! function(e, t, n) {
                        $t(!0);
                        try {
                            $i(e, t, n)
                        } finally {
                            $t(!1)
                        }
                    }(this._lView[1], this._lView, this.context)
                }
                attachToViewContainerRef() {
                    if (this._appRef) throw new Error("This view is already attached directly to the ApplicationRef!");
                    this._attachedToViewContainer = !0
                }
                detachFromAppRef() {
                    var e;
                    this._appRef = null, Bs(this._lView[1], e = this._lView, e[11], 2, null, null)
                }
                attachToAppRef(e) {
                    if (this._attachedToViewContainer) throw new Error("This view is already attached to a ViewContainer!");
                    this._appRef = e
                }
            }
            class kl extends El {
                constructor(e) {
                    super(e), this._view = e
                }
                detectChanges() {
                    Hi(this._view)
                }
                checkNoChanges() {
                    ! function(e) {
                        $t(!0);
                        try {
                            Hi(e)
                        } finally {
                            $t(!1)
                        }
                    }(this._view)
                }
                get context() {
                    return null
                }
            }
            const Al = Tl;
            let Dl = (() => {
                class e {}
                return e.__NG_ELEMENT_ID__ = Al, e.__ChangeDetectorRef__ = !0, e
            })();

            function Tl(e = !1) {
                return function(e, t, n) {
                    if (!n && st(e)) {
                        const n = xt(e.index, t);
                        return new El(n, n)
                    }
                    return 47 & e.type ? new El(t[16], t) : null
                }(Nt(), It(), e)
            }
            const Ol = [new yl],
                Fl = new wl([new cl]),
                Pl = new Sl(Ol),
                Il = function() {
                    return Ll(Nt(), It())
                };
            let Ml = (() => {
                class e {}
                return e.__NG_ELEMENT_ID__ = Il, e
            })();
            const Rl = Ml,
                Nl = class extends Rl {
                    constructor(e, t, n) {
                        super(), this._declarationLView = e, this._declarationTContainer = t, this.elementRef = n
                    }
                    createEmbeddedView(e) {
                        const t = this._declarationTContainer.tViews,
                            n = hi(this._declarationLView, t, e, 16, null, t.declTNode, null, null, null, null);
                        n[17] = this._declarationLView[this._declarationTContainer.index];
                        const r = this._declarationLView[19];
                        return null !== r && (n[19] = r.createEmbeddedView(t)), fi(t, n, e), new El(n)
                    }
                };

            function Ll(e, t) {
                return 4 & e.type ? new Nl(t, e, el(e, t)) : null
            }
            class jl {}
            class Bl {}
            const Vl = function() {
                return Gl(Nt(), It())
            };
            let Ul = (() => {
                class e {}
                return e.__NG_ELEMENT_ID__ = Vl, e
            })();
            const $l = Ul,
                Hl = class extends $l {
                    constructor(e, t, n) {
                        super(), this._lContainer = e, this._hostTNode = t, this._hostLView = n
                    }
                    get element() {
                        return el(this._hostTNode, this._hostLView)
                    }
                    get injector() {
                        return new Hn(this._hostTNode, this._hostLView)
                    }
                    get parentInjector() {
                        const e = Fn(this._hostTNode, this._hostLView);
                        if (Cn(e)) {
                            const t = xn(e, this._hostLView),
                                n = Sn(e);
                            return new Hn(t[1].data[n + 8], t)
                        }
                        return new Hn(null, this._hostLView)
                    }
                    clear() {
                        for (; this.length > 0;) this.remove(this.length - 1)
                    }
                    get(e) {
                        const t = zl(this._lContainer);
                        return null !== t && t[e] || null
                    }
                    get length() {
                        return this._lContainer.length - et
                    }
                    createEmbeddedView(e, t, n) {
                        const r = e.createEmbeddedView(t || {});
                        return this.insert(r, n), r
                    }
                    createComponent(e, t, n, r, s) {
                        const i = n || this.parentInjector;
                        if (!s && null == e.ngModule && i) {
                            const e = i.get(jl, null);
                            e && (s = e)
                        }
                        const o = e.create(i, r, void 0, s);
                        return this.insert(o.hostView, t), o
                    }
                    insert(e, t) {
                        const n = e._lView,
                            r = n[1];
                        if (nt(n[3])) {
                            const t = this.indexOf(e);
                            if (-1 !== t) this.detach(t);
                            else {
                                const t = n[3],
                                    r = new Hl(t, t[6], t[3]);
                                r.detach(r.indexOf(e))
                            }
                        }
                        const s = this._adjustIndex(t),
                            i = this._lContainer;
                        ! function(e, t, n, r) {
                            const s = et + r,
                                i = n.length;
                            r > 0 && (n[s - 1][4] = t), r < i - et ? (t[4] = n[s], Xn(n, et + r, t)) : (n.push(t), t[4] = null), t[3] = n;
                            const o = t[17];
                            null !== o && n !== o && function(e, t) {
                                const n = e[9];
                                t[16] !== t[3][3][16] && (e[2] = !0), null === n ? e[9] = [t] : n.push(t)
                            }(o, t);
                            const a = t[19];
                            null !== a && a.insertView(e), t[2] |= 128
                        }(r, n, i, s);
                        const o = Ls(s, i),
                            a = n[11],
                            l = Fs(a, i[7]);
                        return null !== l && function(e, t, n, r, s, i) {
                            r[0] = s, r[6] = t, Bs(e, r, n, 1, s, i)
                        }(r, i[6], a, n, l, o), e.attachToViewContainerRef(), Xn(ql(i), s, e), e
                    }
                    move(e, t) {
                        return this.insert(e, t)
                    }
                    indexOf(e) {
                        const t = zl(this._lContainer);
                        return null !== t ? t.indexOf(e) : -1
                    }
                    remove(e) {
                        const t = this._adjustIndex(e, -1),
                            n = xs(this._lContainer, t);
                        n && (er(ql(this._lContainer), t), Es(n[1], n))
                    }
                    detach(e) {
                        const t = this._adjustIndex(e, -1),
                            n = xs(this._lContainer, t);
                        return n && null != er(ql(this._lContainer), t) ? new El(n) : null
                    }
                    _adjustIndex(e, t = 0) {
                        return null == e ? this.length + t : e
                    }
                };

            function zl(e) {
                return e[8]
            }

            function ql(e) {
                return e[8] || (e[8] = [])
            }

            function Gl(e, t) {
                let n;
                const r = t[e.index];
                if (nt(r)) n = r;
                else {
                    let s;
                    if (8 & e.type) s = vt(r);
                    else {
                        const n = t[11];
                        s = n.createComment("");
                        const r = wt(e, t);
                        Ds(n, Fs(n, r), s, function(e, t) {
                            return yt(e) ? e.nextSibling(t) : t.nextSibling
                        }(n, r), !1)
                    }
                    t[e.index] = n = Ni(r, t, s, e), Vi(t, n)
                }
                return new Hl(n, e, t)
            }
            const Wl = {};
            class Kl extends Ja {
                constructor(e) {
                    super(), this.ngModule = e
                }
                resolveComponentFactory(e) {
                    const t = Ye(e);
                    return new Yl(t, this.ngModule)
                }
            }

            function Zl(e) {
                const t = [];
                for (let n in e) e.hasOwnProperty(n) && t.push({
                    propName: e[n],
                    templateName: n
                });
                return t
            }
            const Ql = new Kn("SCHEDULER_TOKEN", {
                providedIn: "root",
                factory: () => ds
            });
            class Yl extends Qa {
                constructor(e, t) {
                    super(), this.componentDef = e, this.ngModule = t, this.componentType = e.type, this.selector = e.selectors.map(ei).join(","), this.ngContentSelectors = e.ngContentSelectors ? e.ngContentSelectors : [], this.isBoundToModule = !!t
                }
                get inputs() {
                    return Zl(this.componentDef.inputs)
                }
                get outputs() {
                    return Zl(this.componentDef.outputs)
                }
                create(e, t, n, r) {
                    const s = (r = r || this.ngModule) ? function(e, t) {
                            return {
                                get: (n, r, s) => {
                                    const i = e.get(n, Wl, s);
                                    return i !== Wl || r === Wl ? i : t.get(n, r, s)
                                }
                            }
                        }(e, r.injector) : e,
                        i = s.get(sl, bt),
                        o = s.get(al, null),
                        a = i.createRenderer(null, this.componentDef),
                        l = this.componentDef.selectors[0][0] || "div",
                        u = n ? function(e, t, n) {
                            if (yt(e)) return e.selectRootElement(t, n === ke.ShadowDom);
                            let r = "string" == typeof t ? e.querySelector(t) : t;
                            return r.textContent = "", r
                        }(a, n, this.componentDef.encapsulation) : Cs(i.createRenderer(null, this.componentDef), l, function(e) {
                            const t = e.toLowerCase();
                            return "svg" === t ? ft : "math" === t ? "http://www.w3.org/1998/MathML/" : null
                        }(l)),
                        c = this.componentDef.onPush ? 576 : 528,
                        h = {
                            components: [],
                            scheduler: ds,
                            clean: qi,
                            playerHandler: null,
                            flags: 0
                        },
                        d = Ci(0, null, null, 1, 0, null, null, null, null, null),
                        p = hi(null, d, h, c, null, null, i, a, o, s);
                    let f, g;
                    Xt(p);
                    try {
                        const e = function(e, t, n, r, s, i) {
                            const o = n[1];
                            n[20] = e;
                            const a = di(o, 20, 2, "#host", null),
                                l = a.mergedAttrs = t.hostAttrs;
                            null !== l && (Yi(a, l, !0), null !== e && (yn(s, e, l), null !== a.classes && $s(s, e, a.classes), null !== a.styles && Us(s, e, a.styles)));
                            const u = r.createRenderer(e, t),
                                c = hi(n, wi(t), null, t.onPush ? 64 : 16, n[20], a, r, u, null, null);
                            return o.firstCreatePass && (Pn(Dn(a, n), o, t.type), Ti(o, a), Fi(a, n.length, 1)), Vi(n, c), n[20] = c
                        }(u, this.componentDef, p, i, a);
                        if (u)
                            if (n) yn(a, u, ["ng-version", ul.full]);
                            else {
                                const {
                                    attrs: e,
                                    classes: t
                                } = function(e) {
                                    const t = [],
                                        n = [];
                                    let r = 1,
                                        s = 2;
                                    for (; r < e.length;) {
                                        let i = e[r];
                                        if ("string" == typeof i) 2 === s ? "" !== i && t.push(i, e[++r]) : 8 === s && n.push(i);
                                        else {
                                            if (!Zs(s)) break;
                                            s = i
                                        }
                                        r++
                                    }
                                    return {
                                        attrs: t,
                                        classes: n
                                    }
                                }(this.componentDef.selectors[0]);
                                e && yn(a, u, e), t && t.length > 0 && $s(a, u, t.join(" "))
                            } if (g = Ct(d, Xe), void 0 !== t) {
                            const e = g.projection = [];
                            for (let n = 0; n < this.ngContentSelectors.length; n++) {
                                const r = t[n];
                                e.push(null != r ? Array.from(r) : null)
                            }
                        }
                        f = function(e, t, n, r, s) {
                            const i = n[1],
                                o = function(e, t, n) {
                                    const r = Nt();
                                    e.firstCreatePass && (n.providersResolver && n.providersResolver(n), Pi(e, r, t, pi(e, t, 1, null), n));
                                    const s = Vn(t, e, r.directiveStart, r);
                                    hs(s, t);
                                    const i = wt(r, t);
                                    return i && hs(i, t), s
                                }(i, n, t);
                            if (r.components.push(o), e[8] = o, s && s.forEach(e => e(o, t)), t.contentQueries) {
                                const e = Nt();
                                t.contentQueries(1, o, e.directiveStart)
                            }
                            const a = Nt();
                            return !i.firstCreatePass || null === t.hostBindings && null === t.hostAttrs || (an(a.index), Ai(n[1], a, 0, a.directiveStart, a.directiveEnd, t), Di(t, o)), o
                        }(e, this.componentDef, p, h, [mo]), fi(d, p, null)
                    } finally {
                        sn()
                    }
                    return new Jl(this.componentType, f, el(g, p), p, g)
                }
            }
            class Jl extends class {} {
                constructor(e, t, n, r, s) {
                    super(), this.location = n, this._rootLView = r, this._tNode = s, this.instance = t, this.hostView = this.changeDetectorRef = new kl(r), this.componentType = e
                }
                get injector() {
                    return new Hn(this._tNode, this._rootLView)
                }
                destroy() {
                    this.hostView.destroy()
                }
                onDestroy(e) {
                    this.hostView.onDestroy(e)
                }
            }
            const Xl = new Map;
            class eu extends jl {
                constructor(e, t) {
                    super(), this._parent = t, this._bootstrapComponents = [], this.injector = this, this.destroyCbs = [], this.componentFactoryResolver = new Kl(this);
                    const n = Je(e),
                        r = e[Be] || null;
                    r && Ua(r), this._bootstrapComponents = fs(n.bootstrap), this._r3Injector = oo(e, t, [{
                        provide: jl,
                        useValue: this
                    }, {
                        provide: Ja,
                        useValue: this.componentFactoryResolver
                    }], te(e)), this._r3Injector._resolveInjectorDefTypes(), this.instance = this.get(e)
                }
                get(e, t = go.THROW_IF_NOT_FOUND, n = _e.Default) {
                    return e === go || e === jl || e === Ji ? this : this._r3Injector.get(e, t, n)
                }
                destroy() {
                    const e = this._r3Injector;
                    !e.destroyed && e.destroy(), this.destroyCbs.forEach(e => e()), this.destroyCbs = null
                }
                onDestroy(e) {
                    this.destroyCbs.push(e)
                }
            }
            class tu extends Bl {
                constructor(e) {
                    super(), this.moduleType = e, null !== Je(e) && function(e) {
                        const t = new Set;
                        ! function e(n) {
                            const r = Je(n, !0),
                                s = r.id;
                            null !== s && (function(e, t, n) {
                                if (t && t !== n) throw new Error(`Duplicate module registered for ${e} - ${te(t)} vs ${te(t.name)}`)
                            }(s, Xl.get(s), n), Xl.set(s, n));
                            const i = fs(r.imports);
                            for (const o of i) t.has(o) || (t.add(o), e(o))
                        }(e)
                    }(e)
                }
                create(e) {
                    return new eu(this.moduleType, e)
                }
            }

            function nu(e, t, n) {
                const r = Ht() + e,
                    s = It();
                return s[r] === ti ? Ao(s, r, n ? t.call(n) : t()) : function(e, t) {
                    return e[t]
                }(s, r)
            }

            function ru(e, t, n, r) {
                return au(It(), Ht(), e, t, n, r)
            }

            function su(e, t, n, r, s) {
                return lu(It(), Ht(), e, t, n, r, s)
            }

            function iu(e, t, n, r) {
                return function(e, t, n, r, s, i) {
                    let o = t + n,
                        a = !1;
                    for (let l = 0; l < s.length; l++) Do(e, o++, s[l]) && (a = !0);
                    return a ? Ao(e, o, r.apply(i, s)) : ou(e, o)
                }(It(), Ht(), e, t, n, r)
            }

            function ou(e, t) {
                const n = e[t];
                return n === ti ? void 0 : n
            }

            function au(e, t, n, r, s, i) {
                const o = t + n;
                return Do(e, o, s) ? Ao(e, o + 1, i ? r.call(i, s) : r(s)) : ou(e, o + 1)
            }

            function lu(e, t, n, r, s, i, o) {
                const a = t + n;
                return To(e, a, s, i) ? Ao(e, a + 2, o ? r.call(o, s, i) : r(s, i)) : ou(e, a + 2)
            }

            function uu(e, t) {
                const n = Mt();
                let r;
                const s = e + Xe;
                n.firstCreatePass ? (r = function(e, t) {
                    if (t)
                        for (let n = t.length - 1; n >= 0; n--) {
                            const r = t[n];
                            if (e === r.name) return r
                        }
                    throw new ae("302", `The pipe '${e}' could not be found!`)
                }(t, n.pipeRegistry), n.data[s] = r, r.onDestroy && (n.destroyHooks || (n.destroyHooks = [])).push(s, r.onDestroy)) : r = n.data[s];
                const i = r.factory || (r.factory = at(r.type)),
                    o = Ce(Ro);
                try {
                    const e = kn(!1),
                        t = i();
                    return kn(e),
                        function(e, t, n, r) {
                            n >= e.data.length && (e.data[n] = null, e.blueprint[n] = null), t[n] = r
                        }(n, It(), s, t), t
                } finally {
                    Ce(o)
                }
            }

            function cu(e, t, n) {
                const r = e + Xe,
                    s = It(),
                    i = St(s, r);
                return pu(s, du(s, r) ? au(s, Ht(), t, i.transform, n, i) : i.transform(n))
            }

            function hu(e, t, n, r) {
                const s = e + Xe,
                    i = It(),
                    o = St(i, s);
                return pu(i, du(i, s) ? lu(i, Ht(), t, o.transform, n, r, o) : o.transform(n, r))
            }

            function du(e, t) {
                return e[1].data[t].pure
            }

            function pu(e, t) {
                return xo.isWrapped(t) && (t = xo.unwrap(t), e[zt()] = ti), t
            }

            function fu(e) {
                return t => {
                    setTimeout(e, void 0, t)
                }
            }
            const gu = class extends S {
                constructor(e = !1) {
                    super(), this.__isAsync = e
                }
                emit(e) {
                    super.next(e)
                }
                subscribe(e, t, n) {
                    var r, s, i;
                    let o = e,
                        a = t || (() => null),
                        l = n;
                    if (e && "object" == typeof e) {
                        const t = e;
                        o = null === (r = t.next) || void 0 === r ? void 0 : r.bind(t), a = null === (s = t.error) || void 0 === s ? void 0 : s.bind(t), l = null === (i = t.complete) || void 0 === i ? void 0 : i.bind(t)
                    }
                    this.__isAsync && (a = fu(a), o && (o = fu(o)), l && (l = fu(l)));
                    const u = super.subscribe({
                        next: o,
                        error: a,
                        complete: l
                    });
                    return e instanceof h && e.add(u), u
                }
            };

            function mu() {
                return this._results[So()]()
            }
            class yu {
                constructor(e = !1) {
                    this._emitDistinctChangesOnly = e, this.dirty = !0, this._results = [], this._changesDetected = !1, this._changes = null, this.length = 0, this.first = void 0, this.last = void 0;
                    const t = So(),
                        n = yu.prototype;
                    n[t] || (n[t] = mu)
                }
                get changes() {
                    return this._changes || (this._changes = new gu)
                }
                get(e) {
                    return this._results[e]
                }
                map(e) {
                    return this._results.map(e)
                }
                filter(e) {
                    return this._results.filter(e)
                }
                find(e) {
                    return this._results.find(e)
                }
                reduce(e, t) {
                    return this._results.reduce(e, t)
                }
                forEach(e) {
                    this._results.forEach(e)
                }
                some(e) {
                    return this._results.some(e)
                }
                toArray() {
                    return this._results.slice()
                }
                toString() {
                    return this._results.toString()
                }
                reset(e, t) {
                    const n = this;
                    n.dirty = !1;
                    const r = Yn(e);
                    (this._changesDetected = ! function(e, t, n) {
                        if (e.length !== t.length) return !1;
                        for (let r = 0; r < e.length; r++) {
                            let s = e[r],
                                i = t[r];
                            if (n && (s = n(s), i = n(i)), i !== s) return !1
                        }
                        return !0
                    }(n._results, r, t)) && (n._results = r, n.length = r.length, n.last = r[this.length - 1], n.first = r[0])
                }
                notifyOnChanges() {
                    !this._changes || !this._changesDetected && this._emitDistinctChangesOnly || this._changes.emit(this)
                }
                setDirty() {
                    this.dirty = !0
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe()
                }
            }
            class bu {
                constructor(e) {
                    this.queryList = e, this.matches = null
                }
                clone() {
                    return new bu(this.queryList)
                }
                setDirty() {
                    this.queryList.setDirty()
                }
            }
            class vu {
                constructor(e = []) {
                    this.queries = e
                }
                createEmbeddedView(e) {
                    const t = e.queries;
                    if (null !== t) {
                        const n = null !== e.contentQueries ? e.contentQueries[0] : t.length,
                            r = [];
                        for (let e = 0; e < n; e++) {
                            const n = t.getByIndex(e);
                            r.push(this.queries[n.indexInDeclarationView].clone())
                        }
                        return new vu(r)
                    }
                    return null
                }
                insertView(e) {
                    this.dirtyQueriesWithMatches(e)
                }
                detachView(e) {
                    this.dirtyQueriesWithMatches(e)
                }
                dirtyQueriesWithMatches(e) {
                    for (let t = 0; t < this.queries.length; t++) null !== Pu(e, t).matches && this.queries[t].setDirty()
                }
            }
            class _u {
                constructor(e, t, n = null) {
                    this.predicate = e, this.flags = t, this.read = n
                }
            }
            class wu {
                constructor(e = []) {
                    this.queries = e
                }
                elementStart(e, t) {
                    for (let n = 0; n < this.queries.length; n++) this.queries[n].elementStart(e, t)
                }
                elementEnd(e) {
                    for (let t = 0; t < this.queries.length; t++) this.queries[t].elementEnd(e)
                }
                embeddedTView(e) {
                    let t = null;
                    for (let n = 0; n < this.length; n++) {
                        const r = null !== t ? t.length : 0,
                            s = this.getByIndex(n).embeddedTView(e, r);
                        s && (s.indexInDeclarationView = n, null !== t ? t.push(s) : t = [s])
                    }
                    return null !== t ? new wu(t) : null
                }
                template(e, t) {
                    for (let n = 0; n < this.queries.length; n++) this.queries[n].template(e, t)
                }
                getByIndex(e) {
                    return this.queries[e]
                }
                get length() {
                    return this.queries.length
                }
                track(e) {
                    this.queries.push(e)
                }
            }
            class Cu {
                constructor(e, t = -1) {
                    this.metadata = e, this.matches = null, this.indexInDeclarationView = -1, this.crossesNgTemplate = !1, this._appliesToNextNode = !0, this._declarationNodeIndex = t
                }
                elementStart(e, t) {
                    this.isApplyingToNode(t) && this.matchTNode(e, t)
                }
                elementEnd(e) {
                    this._declarationNodeIndex === e.index && (this._appliesToNextNode = !1)
                }
                template(e, t) {
                    this.elementStart(e, t)
                }
                embeddedTView(e, t) {
                    return this.isApplyingToNode(e) ? (this.crossesNgTemplate = !0, this.addMatch(-e.index, t), new Cu(this.metadata)) : null
                }
                isApplyingToNode(e) {
                    if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
                        const t = this._declarationNodeIndex;
                        let n = e.parent;
                        for (; null !== n && 8 & n.type && n.index !== t;) n = n.parent;
                        return t === (null !== n ? n.index : -1)
                    }
                    return this._appliesToNextNode
                }
                matchTNode(e, t) {
                    const n = this.metadata.predicate;
                    if (Array.isArray(n))
                        for (let r = 0; r < n.length; r++) {
                            const s = n[r];
                            this.matchTNodeWithReadOption(e, t, Su(t, s)), this.matchTNodeWithReadOption(e, t, Bn(t, e, s, !1, !1))
                        } else n === Ml ? 4 & t.type && this.matchTNodeWithReadOption(e, t, -1) : this.matchTNodeWithReadOption(e, t, Bn(t, e, n, !1, !1))
                }
                matchTNodeWithReadOption(e, t, n) {
                    if (null !== n) {
                        const r = this.metadata.read;
                        if (null !== r)
                            if (r === nl || r === Ul || r === Ml && 4 & t.type) this.addMatch(t.index, -2);
                            else {
                                const n = Bn(t, e, r, !1, !1);
                                null !== n && this.addMatch(t.index, n)
                            }
                        else this.addMatch(t.index, n)
                    }
                }
                addMatch(e, t) {
                    null === this.matches ? this.matches = [e, t] : this.matches.push(e, t)
                }
            }

            function Su(e, t) {
                const n = e.localNames;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2)
                        if (n[r] === t) return n[r + 1];
                return null
            }

            function xu(e, t, n, r) {
                return -1 === n ? function(e, t) {
                    return 11 & e.type ? el(e, t) : 4 & e.type ? Ll(e, t) : null
                }(t, e) : -2 === n ? function(e, t, n) {
                    return n === nl ? el(t, e) : n === Ml ? Ll(t, e) : n === Ul ? Gl(t, e) : void 0
                }(e, t, r) : Vn(e, e[1], n, t)
            }

            function Eu(e, t, n, r) {
                const s = t[19].queries[r];
                if (null === s.matches) {
                    const r = e.data,
                        i = n.matches,
                        o = [];
                    for (let e = 0; e < i.length; e += 2) {
                        const s = i[e];
                        o.push(s < 0 ? null : xu(t, r[s], i[e + 1], n.metadata.read))
                    }
                    s.matches = o
                }
                return s.matches
            }

            function ku(e, t, n, r) {
                const s = e.queries.getByIndex(n),
                    i = s.matches;
                if (null !== i) {
                    const o = Eu(e, t, s, n);
                    for (let e = 0; e < i.length; e += 2) {
                        const n = i[e];
                        if (n > 0) r.push(o[e / 2]);
                        else {
                            const s = i[e + 1],
                                o = t[-n];
                            for (let e = et; e < o.length; e++) {
                                const t = o[e];
                                t[17] === t[3] && ku(t[1], t, s, r)
                            }
                            if (null !== o[9]) {
                                const e = o[9];
                                for (let t = 0; t < e.length; t++) {
                                    const n = e[t];
                                    ku(n[1], n, s, r)
                                }
                            }
                        }
                    }
                }
                return r
            }

            function Au(e) {
                const t = It(),
                    n = Mt(),
                    r = Zt();
                Qt(r + 1);
                const s = Pu(n, r);
                if (e.dirty && kt(t) === (2 == (2 & s.metadata.flags))) {
                    if (null === s.matches) e.reset([]);
                    else {
                        const i = s.crossesNgTemplate ? ku(n, t, r, []) : Eu(n, t, s, r);
                        e.reset(i, rl), e.notifyOnChanges()
                    }
                    return !0
                }
                return !1
            }

            function Du(e, t, n) {
                const r = Mt();
                r.firstCreatePass && (Fu(r, new _u(e, t, n), -1), 2 == (2 & t) && (r.staticViewQueries = !0)), Ou(r, It(), t)
            }

            function Tu() {
                return e = It(), t = Zt(), e[19].queries[t].queryList;
                var e, t
            }

            function Ou(e, t, n) {
                const r = new yu(4 == (4 & n));
                Si(e, t, r, r.destroy), null === t[19] && (t[19] = new vu), t[19].queries.push(new bu(r))
            }

            function Fu(e, t, n) {
                null === e.queries && (e.queries = new wu), e.queries.track(new Cu(t, n))
            }

            function Pu(e, t) {
                return e.queries.getByIndex(t)
            }

            function Iu(e, t) {
                return Ll(e, t)
            }
            const Mu = new Kn("Application Initializer");
            let Ru = (() => {
                class e {
                    constructor(e) {
                        this.appInits = e, this.resolve = Xa, this.reject = Xa, this.initialized = !1, this.done = !1, this.donePromise = new Promise((e, t) => {
                            this.resolve = e, this.reject = t
                        })
                    }
                    runInitializers() {
                        if (this.initialized) return;
                        const e = [],
                            t = () => {
                                this.done = !0, this.resolve()
                            };
                        if (this.appInits)
                            for (let n = 0; n < this.appInits.length; n++) {
                                const t = this.appInits[n]();
                                $o(t) && e.push(t)
                            }
                        Promise.all(e).then(() => {
                            t()
                        }).catch(e => {
                            this.reject(e)
                        }), 0 === e.length && t(), this.initialized = !0
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Mu, 8))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            const Nu = new Kn("AppId"),
                Lu = {
                    provide: Nu,
                    useFactory: function() {
                        return `${ju()}${ju()}${ju()}`
                    },
                    deps: []
                };

            function ju() {
                return String.fromCharCode(97 + Math.floor(25 * Math.random()))
            }
            const Bu = new Kn("Platform Initializer"),
                Vu = new Kn("Platform ID"),
                Uu = new Kn("appBootstrapListener");
            let $u = (() => {
                class e {
                    log(e) {
                        console.log(e)
                    }
                    warn(e) {
                        console.warn(e)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            const Hu = new Kn("LocaleId"),
                zu = new Kn("DefaultCurrencyCode");
            class qu {
                constructor(e, t) {
                    this.ngModuleFactory = e, this.componentFactories = t
                }
            }
            const Gu = function(e) {
                    return new tu(e)
                },
                Wu = Gu,
                Ku = function(e) {
                    return Promise.resolve(Gu(e))
                },
                Zu = function(e) {
                    const t = Gu(e),
                        n = fs(Je(e).declarations).reduce((e, t) => {
                            const n = Ye(t);
                            return n && e.push(new Yl(n)), e
                        }, []);
                    return new qu(t, n)
                },
                Qu = Zu,
                Yu = function(e) {
                    return Promise.resolve(Zu(e))
                };
            let Ju = (() => {
                class e {
                    constructor() {
                        this.compileModuleSync = Wu, this.compileModuleAsync = Ku, this.compileModuleAndAllComponentsSync = Qu, this.compileModuleAndAllComponentsAsync = Yu
                    }
                    clearCache() {}
                    clearCacheFor(e) {}
                    getModuleId(e) {}
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            const Xu = (() => Promise.resolve(0))();

            function ec(e) {
                "undefined" == typeof Zone ? Xu.then(() => {
                    e && e.apply(null, null)
                }) : Zone.current.scheduleMicroTask("scheduleMicrotask", e)
            }
            class tc {
                constructor({
                    enableLongStackTrace: e = !1,
                    shouldCoalesceEventChangeDetection: t = !1,
                    shouldCoalesceRunChangeDetection: n = !1
                }) {
                    if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new gu(!1), this.onMicrotaskEmpty = new gu(!1), this.onStable = new gu(!1), this.onError = new gu(!1), "undefined" == typeof Zone) throw new Error("In this configuration Angular requires Zone.js");
                    Zone.assertZonePatched();
                    const r = this;
                    r._nesting = 0, r._outer = r._inner = Zone.current, Zone.TaskTrackingZoneSpec && (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec)), e && Zone.longStackTraceZoneSpec && (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)), r.shouldCoalesceEventChangeDetection = !n && t, r.shouldCoalesceRunChangeDetection = n, r.lastRequestAnimationFrameId = -1, r.nativeRequestAnimationFrame = function() {
                            let e = Fe.requestAnimationFrame,
                                t = Fe.cancelAnimationFrame;
                            if ("undefined" != typeof Zone && e && t) {
                                const n = e[Zone.__symbol__("OriginalDelegate")];
                                n && (e = n);
                                const r = t[Zone.__symbol__("OriginalDelegate")];
                                r && (t = r)
                            }
                            return {
                                nativeRequestAnimationFrame: e,
                                nativeCancelAnimationFrame: t
                            }
                        }().nativeRequestAnimationFrame,
                        function(e) {
                            const t = () => {
                                ! function(e) {
                                    -1 === e.lastRequestAnimationFrameId && (e.lastRequestAnimationFrameId = e.nativeRequestAnimationFrame.call(Fe, () => {
                                        e.fakeTopEventTask || (e.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => {
                                            e.lastRequestAnimationFrameId = -1, sc(e), rc(e)
                                        }, void 0, () => {}, () => {})), e.fakeTopEventTask.invoke()
                                    }), sc(e))
                                }(e)
                            };
                            e._inner = e._inner.fork({
                                name: "angular",
                                properties: {
                                    isAngularZone: !0
                                },
                                onInvokeTask: (n, r, s, i, o, a) => {
                                    try {
                                        return ic(e), n.invokeTask(s, i, o, a)
                                    } finally {
                                        (e.shouldCoalesceEventChangeDetection && "eventTask" === i.type || e.shouldCoalesceRunChangeDetection) && t(), oc(e)
                                    }
                                },
                                onInvoke: (n, r, s, i, o, a, l) => {
                                    try {
                                        return ic(e), n.invoke(s, i, o, a, l)
                                    } finally {
                                        e.shouldCoalesceRunChangeDetection && t(), oc(e)
                                    }
                                },
                                onHasTask: (t, n, r, s) => {
                                    t.hasTask(r, s), n === r && ("microTask" == s.change ? (e._hasPendingMicrotasks = s.microTask, sc(e), rc(e)) : "macroTask" == s.change && (e.hasPendingMacrotasks = s.macroTask))
                                },
                                onHandleError: (t, n, r, s) => (t.handleError(r, s), e.runOutsideAngular(() => e.onError.emit(s)), !1)
                            })
                        }(r)
                }
                static isInAngularZone() {
                    return !0 === Zone.current.get("isAngularZone")
                }
                static assertInAngularZone() {
                    if (!tc.isInAngularZone()) throw new Error("Expected to be in Angular Zone, but it is not!")
                }
                static assertNotInAngularZone() {
                    if (tc.isInAngularZone()) throw new Error("Expected to not be in Angular Zone, but it is!")
                }
                run(e, t, n) {
                    return this._inner.run(e, t, n)
                }
                runTask(e, t, n, r) {
                    const s = this._inner,
                        i = s.scheduleEventTask("NgZoneEvent: " + r, e, nc, Xa, Xa);
                    try {
                        return s.runTask(i, t, n)
                    } finally {
                        s.cancelTask(i)
                    }
                }
                runGuarded(e, t, n) {
                    return this._inner.runGuarded(e, t, n)
                }
                runOutsideAngular(e) {
                    return this._outer.run(e)
                }
            }
            const nc = {};

            function rc(e) {
                if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable) try {
                    e._nesting++, e.onMicrotaskEmpty.emit(null)
                } finally {
                    if (e._nesting--, !e.hasPendingMicrotasks) try {
                        e.runOutsideAngular(() => e.onStable.emit(null))
                    } finally {
                        e.isStable = !0
                    }
                }
            }

            function sc(e) {
                e.hasPendingMicrotasks = !!(e._hasPendingMicrotasks || (e.shouldCoalesceEventChangeDetection || e.shouldCoalesceRunChangeDetection) && -1 !== e.lastRequestAnimationFrameId)
            }

            function ic(e) {
                e._nesting++, e.isStable && (e.isStable = !1, e.onUnstable.emit(null))
            }

            function oc(e) {
                e._nesting--, rc(e)
            }
            class ac {
                constructor() {
                    this.hasPendingMicrotasks = !1, this.hasPendingMacrotasks = !1, this.isStable = !0, this.onUnstable = new gu, this.onMicrotaskEmpty = new gu, this.onStable = new gu, this.onError = new gu
                }
                run(e, t, n) {
                    return e.apply(t, n)
                }
                runGuarded(e, t, n) {
                    return e.apply(t, n)
                }
                runOutsideAngular(e) {
                    return e()
                }
                runTask(e, t, n, r) {
                    return e.apply(t, n)
                }
            }
            let lc = (() => {
                    class e {
                        constructor(e) {
                            this._ngZone = e, this._pendingCount = 0, this._isZoneStable = !0, this._didWork = !1, this._callbacks = [], this.taskTrackingZone = null, this._watchAngularEvents(), e.run(() => {
                                this.taskTrackingZone = "undefined" == typeof Zone ? null : Zone.current.get("TaskTrackingZone")
                            })
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    this._didWork = !0, this._isZoneStable = !1
                                }
                            }), this._ngZone.runOutsideAngular(() => {
                                this._ngZone.onStable.subscribe({
                                    next: () => {
                                        tc.assertNotInAngularZone(), ec(() => {
                                            this._isZoneStable = !0, this._runCallbacksIfReady()
                                        })
                                    }
                                })
                            })
                        }
                        increasePendingRequestCount() {
                            return this._pendingCount += 1, this._didWork = !0, this._pendingCount
                        }
                        decreasePendingRequestCount() {
                            if (this._pendingCount -= 1, this._pendingCount < 0) throw new Error("pending async requests below zero");
                            return this._runCallbacksIfReady(), this._pendingCount
                        }
                        isStable() {
                            return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable()) ec(() => {
                                for (; 0 !== this._callbacks.length;) {
                                    let e = this._callbacks.pop();
                                    clearTimeout(e.timeoutId), e.doneCb(this._didWork)
                                }
                                this._didWork = !1
                            });
                            else {
                                let e = this.getPendingTasks();
                                this._callbacks = this._callbacks.filter(t => !t.updateCb || !t.updateCb(e) || (clearTimeout(t.timeoutId), !1)), this._didWork = !0
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(e => ({
                                source: e.source,
                                creationLocation: e.creationLocation,
                                data: e.data
                            })) : []
                        }
                        addCallback(e, t, n) {
                            let r = -1;
                            t && t > 0 && (r = setTimeout(() => {
                                this._callbacks = this._callbacks.filter(e => e.timeoutId !== r), e(this._didWork, this.getPendingTasks())
                            }, t)), this._callbacks.push({
                                doneCb: e,
                                timeoutId: r,
                                updateCb: n
                            })
                        }
                        whenStable(e, t, n) {
                            if (n && !this.taskTrackingZone) throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');
                            this.addCallback(e, t, n), this._runCallbacksIfReady()
                        }
                        getPendingRequestCount() {
                            return this._pendingCount
                        }
                        findProviders(e, t, n) {
                            return []
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(tc))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                uc = (() => {
                    class e {
                        constructor() {
                            this._applications = new Map, dc.addToWindow(this)
                        }
                        registerApplication(e, t) {
                            this._applications.set(e, t)
                        }
                        unregisterApplication(e) {
                            this._applications.delete(e)
                        }
                        unregisterAllApplications() {
                            this._applications.clear()
                        }
                        getTestability(e) {
                            return this._applications.get(e) || null
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values())
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys())
                        }
                        findTestabilityInTree(e, t = !0) {
                            return dc.findTestabilityInTree(this, e, t)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })();
            class cc {
                addToWindow(e) {}
                findTestabilityInTree(e, t, n) {
                    return null
                }
            }
            let hc, dc = new cc,
                pc = !0,
                fc = !1;
            const gc = new Kn("AllowMultipleToken");
            class mc {
                constructor(e, t) {
                    this.name = e, this.token = t
                }
            }

            function yc(e, t, n = []) {
                const r = `Platform: ${t}`,
                    s = new Kn(r);
                return (t = []) => {
                    let i = bc();
                    if (!i || i.injector.get(gc, !1))
                        if (e) e(n.concat(t).concat({
                            provide: s,
                            useValue: !0
                        }));
                        else {
                            const e = n.concat(t).concat({
                                provide: s,
                                useValue: !0
                            }, {
                                provide: eo,
                                useValue: "platform"
                            });
                            ! function(e) {
                                if (hc && !hc.destroyed && !hc.injector.get(gc, !1)) throw new Error("There can be only one platform. Destroy the previous one to create a new one.");
                                hc = e.get(vc);
                                const t = e.get(Bu, null);
                                t && t.forEach(e => e())
                            }(go.create({
                                providers: e,
                                name: r
                            }))
                        } return function(e) {
                        const t = bc();
                        if (!t) throw new Error("No platform exists!");
                        if (!t.injector.get(e, null)) throw new Error("A platform with a different configuration has been created. Please destroy it first.");
                        return t
                    }(s)
                }
            }

            function bc() {
                return hc && !hc.destroyed ? hc : null
            }
            let vc = (() => {
                class e {
                    constructor(e) {
                        this._injector = e, this._modules = [], this._destroyListeners = [], this._destroyed = !1
                    }
                    bootstrapModuleFactory(e, t) {
                        const n = function(e, t) {
                                let n;
                                return n = "noop" === e ? new ac : ("zone.js" === e ? void 0 : e) || new tc({
                                    enableLongStackTrace: (fc = !0, pc),
                                    shouldCoalesceEventChangeDetection: !!(null == t ? void 0 : t.ngZoneEventCoalescing),
                                    shouldCoalesceRunChangeDetection: !!(null == t ? void 0 : t.ngZoneRunCoalescing)
                                }), n
                            }(t ? t.ngZone : void 0, {
                                ngZoneEventCoalescing: t && t.ngZoneEventCoalescing || !1,
                                ngZoneRunCoalescing: t && t.ngZoneRunCoalescing || !1
                            }),
                            r = [{
                                provide: tc,
                                useValue: n
                            }];
                        return n.run(() => {
                            const t = go.create({
                                    providers: r,
                                    parent: this.injector,
                                    name: e.moduleType.name
                                }),
                                s = e.create(t),
                                i = s.injector.get(cs, null);
                            if (!i) throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");
                            return n.runOutsideAngular(() => {
                                    const e = n.onError.subscribe({
                                        next: e => {
                                            i.handleError(e)
                                        }
                                    });
                                    s.onDestroy(() => {
                                        Cc(this._modules, s), e.unsubscribe()
                                    })
                                }),
                                function(e, t, n) {
                                    try {
                                        const r = n();
                                        return $o(r) ? r.catch(n => {
                                            throw t.runOutsideAngular(() => e.handleError(n)), n
                                        }) : r
                                    } catch (r) {
                                        throw t.runOutsideAngular(() => e.handleError(r)), r
                                    }
                                }(i, n, () => {
                                    const e = s.injector.get(Ru);
                                    return e.runInitializers(), e.donePromise.then(() => (Ua(s.injector.get(Hu, Ba) || Ba), this._moduleDoBootstrap(s), s))
                                })
                        })
                    }
                    bootstrapModule(e, t = []) {
                        const n = _c({}, t);
                        return function(e, t, n) {
                            const r = new tu(n);
                            return Promise.resolve(r)
                        }(0, 0, e).then(e => this.bootstrapModuleFactory(e, n))
                    }
                    _moduleDoBootstrap(e) {
                        const t = e.injector.get(wc);
                        if (e._bootstrapComponents.length > 0) e._bootstrapComponents.forEach(e => t.bootstrap(e));
                        else {
                            if (!e.instance.ngDoBootstrap) throw new Error(`The module ${te(e.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);
                            e.instance.ngDoBootstrap(t)
                        }
                        this._modules.push(e)
                    }
                    onDestroy(e) {
                        this._destroyListeners.push(e)
                    }
                    get injector() {
                        return this._injector
                    }
                    destroy() {
                        if (this._destroyed) throw new Error("The platform has already been destroyed!");
                        this._modules.slice().forEach(e => e.destroy()), this._destroyListeners.forEach(e => e()), this._destroyed = !0
                    }
                    get destroyed() {
                        return this._destroyed
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(go))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();

            function _c(e, t) {
                return Array.isArray(t) ? t.reduce(_c, e) : Object.assign(Object.assign({}, e), t)
            }
            let wc = (() => {
                class e {
                    constructor(e, t, n, r, s) {
                        this._zone = e, this._injector = t, this._exceptionHandler = n, this._componentFactoryResolver = r, this._initStatus = s, this._bootstrapListeners = [], this._views = [], this._runningTick = !1, this._stable = !0, this.componentTypes = [], this.components = [], this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({
                            next: () => {
                                this._zone.run(() => {
                                    this.tick()
                                })
                            }
                        });
                        const i = new b(e => {
                                this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks, this._zone.runOutsideAngular(() => {
                                    e.next(this._stable), e.complete()
                                })
                            }),
                            o = new b(e => {
                                let t;
                                this._zone.runOutsideAngular(() => {
                                    t = this._zone.onStable.subscribe(() => {
                                        tc.assertNotInAngularZone(), ec(() => {
                                            this._stable || this._zone.hasPendingMacrotasks || this._zone.hasPendingMicrotasks || (this._stable = !0, e.next(!0))
                                        })
                                    })
                                });
                                const n = this._zone.onUnstable.subscribe(() => {
                                    tc.assertInAngularZone(), this._stable && (this._stable = !1, this._zone.runOutsideAngular(() => {
                                        e.next(!1)
                                    }))
                                });
                                return () => {
                                    t.unsubscribe(), n.unsubscribe()
                                }
                            });
                        this.isStable = function(...e) {
                            let t = Number.POSITIVE_INFINITY,
                                n = null,
                                r = e[e.length - 1];
                            return E(r) ? (n = e.pop(), e.length > 1 && "number" == typeof e[e.length - 1] && (t = e.pop())) : "number" == typeof r && (t = e.pop()), null === n && 1 === e.length && e[0] instanceof b ? e[0] : z(t)(q(e, n))
                        }(i, o.pipe(e => {
                            return G()((t = J, function(e) {
                                let n;
                                n = "function" == typeof t ? t : function() {
                                    return t
                                };
                                const r = Object.create(e, Q);
                                return r.source = e, r.subjectFactory = n, r
                            })(e));
                            var t
                        }))
                    }
                    bootstrap(e, t) {
                        if (!this._initStatus.done) throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");
                        let n;
                        n = e instanceof Qa ? e : this._componentFactoryResolver.resolveComponentFactory(e), this.componentTypes.push(n.componentType);
                        const r = n.isBoundToModule ? void 0 : this._injector.get(jl),
                            s = n.create(go.NULL, [], t || n.selector, r),
                            i = s.location.nativeElement,
                            o = s.injector.get(lc, null),
                            a = o && s.injector.get(uc);
                        return o && a && a.registerApplication(i, o), s.onDestroy(() => {
                            this.detachView(s.hostView), Cc(this.components, s), a && a.unregisterApplication(i)
                        }), this._loadComponent(s), s
                    }
                    tick() {
                        if (this._runningTick) throw new Error("ApplicationRef.tick is called recursively");
                        try {
                            this._runningTick = !0;
                            for (let e of this._views) e.detectChanges()
                        } catch (e) {
                            this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e))
                        } finally {
                            this._runningTick = !1
                        }
                    }
                    attachView(e) {
                        const t = e;
                        this._views.push(t), t.attachToAppRef(this)
                    }
                    detachView(e) {
                        const t = e;
                        Cc(this._views, t), t.detachFromAppRef()
                    }
                    _loadComponent(e) {
                        this.attachView(e.hostView), this.tick(), this.components.push(e), this._injector.get(Uu, []).concat(this._bootstrapListeners).forEach(t => t(e))
                    }
                    ngOnDestroy() {
                        this._views.slice().forEach(e => e.destroy()), this._onMicrotaskEmptySubscription.unsubscribe()
                    }
                    get viewCount() {
                        return this._views.length
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(tc), dr(go), dr(cs), dr(Ja), dr(Ru))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();

            function Cc(e, t) {
                const n = e.indexOf(t);
                n > -1 && e.splice(n, 1)
            }
            class Sc {}
            class xc {}
            const Ec = {
                factoryPathPrefix: "",
                factoryPathSuffix: ".ngfactory"
            };
            let kc = (() => {
                class e {
                    constructor(e, t) {
                        this._compiler = e, this._config = t || Ec
                    }
                    load(e) {
                        return this.loadAndCompile(e)
                    }
                    loadAndCompile(e) {
                        let [t, r] = e.split("#");
                        return void 0 === r && (r = "default"), n("zn8P")(t).then(e => e[r]).then(e => Ac(e, t, r)).then(e => this._compiler.compileModuleAsync(e))
                    }
                    loadFactory(e) {
                        let [t, r] = e.split("#"), s = "NgFactory";
                        return void 0 === r && (r = "default", s = ""), n("zn8P")(this._config.factoryPathPrefix + t + this._config.factoryPathSuffix).then(e => e[r + s]).then(e => Ac(e, t, r))
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Ju), dr(xc, 8))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();

            function Ac(e, t, n) {
                if (!e) throw new Error(`Cannot find '${n}' in '${t}'`);
                return e
            }
            const Dc = yc(null, "core", [{
                    provide: Vu,
                    useValue: "unknown"
                }, {
                    provide: vc,
                    deps: [go]
                }, {
                    provide: uc,
                    deps: []
                }, {
                    provide: $u,
                    deps: []
                }]),
                Tc = [{
                    provide: wc,
                    useClass: wc,
                    deps: [tc, go, cs, Ja, Ru]
                }, {
                    provide: Ql,
                    deps: [tc],
                    useFactory: function(e) {
                        let t = [];
                        return e.onStable.subscribe(() => {
                                for (; t.length;) t.pop()()
                            }),
                            function(e) {
                                t.push(e)
                            }
                    }
                }, {
                    provide: Ru,
                    useClass: Ru,
                    deps: [
                        [new mr, Mu]
                    ]
                }, {
                    provide: Ju,
                    useClass: Ju,
                    deps: []
                }, Lu, {
                    provide: wl,
                    useFactory: function() {
                        return Fl
                    },
                    deps: []
                }, {
                    provide: Sl,
                    useFactory: function() {
                        return Pl
                    },
                    deps: []
                }, {
                    provide: Hu,
                    useFactory: function(e) {
                        return Ua(e = e || "undefined" != typeof $localize && $localize.locale || Ba), e
                    },
                    deps: [
                        [new gr(Hu), new mr, new yr]
                    ]
                }, {
                    provide: zu,
                    useValue: "USD"
                }];
            let Oc = (() => {
                    class e {
                        constructor(e) {}
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(wc))
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: Tc
                    }), e
                })(),
                Fc = null;

            function Pc() {
                return Fc
            }
            const Ic = new Kn("DocumentToken");
            let Mc = (() => {
                class e {}
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275prov = he({
                    factory: Rc,
                    token: e,
                    providedIn: "platform"
                }), e
            })();

            function Rc() {
                return dr(Lc)
            }
            const Nc = new Kn("Location Initialized");
            let Lc = (() => {
                class e extends Mc {
                    constructor(e) {
                        super(), this._doc = e, this._init()
                    }
                    _init() {
                        this.location = Pc().getLocation(), this._history = Pc().getHistory()
                    }
                    getBaseHrefFromDOM() {
                        return Pc().getBaseHref(this._doc)
                    }
                    onPopState(e) {
                        Pc().getGlobalEventTarget(this._doc, "window").addEventListener("popstate", e, !1)
                    }
                    onHashChange(e) {
                        Pc().getGlobalEventTarget(this._doc, "window").addEventListener("hashchange", e, !1)
                    }
                    get href() {
                        return this.location.href
                    }
                    get protocol() {
                        return this.location.protocol
                    }
                    get hostname() {
                        return this.location.hostname
                    }
                    get port() {
                        return this.location.port
                    }
                    get pathname() {
                        return this.location.pathname
                    }
                    get search() {
                        return this.location.search
                    }
                    get hash() {
                        return this.location.hash
                    }
                    set pathname(e) {
                        this.location.pathname = e
                    }
                    pushState(e, t, n) {
                        jc() ? this._history.pushState(e, t, n) : this.location.hash = n
                    }
                    replaceState(e, t, n) {
                        jc() ? this._history.replaceState(e, t, n) : this.location.hash = n
                    }
                    forward() {
                        this._history.forward()
                    }
                    back() {
                        this._history.back()
                    }
                    getState() {
                        return this._history.state
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Ic))
                }, e.\u0275prov = he({
                    factory: Bc,
                    token: e,
                    providedIn: "platform"
                }), e
            })();

            function jc() {
                return !!window.history.pushState
            }

            function Bc() {
                return new Lc(dr(Ic))
            }

            function Vc(e, t) {
                if (0 == e.length) return t;
                if (0 == t.length) return e;
                let n = 0;
                return e.endsWith("/") && n++, t.startsWith("/") && n++, 2 == n ? e + t.substring(1) : 1 == n ? e + t : e + "/" + t
            }

            function Uc(e) {
                const t = e.match(/#|\?|$/),
                    n = t && t.index || e.length;
                return e.slice(0, n - ("/" === e[n - 1] ? 1 : 0)) + e.slice(n)
            }

            function $c(e) {
                return e && "?" !== e[0] ? "?" + e : e
            }
            let Hc = (() => {
                class e {}
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275prov = he({
                    factory: zc,
                    token: e,
                    providedIn: "root"
                }), e
            })();

            function zc(e) {
                const t = dr(Ic).location;
                return new Gc(dr(Mc), t && t.origin || "")
            }
            const qc = new Kn("appBaseHref");
            let Gc = (() => {
                    class e extends Hc {
                        constructor(e, t) {
                            if (super(), this._platformLocation = e, null == t && (t = this._platformLocation.getBaseHrefFromDOM()), null == t) throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");
                            this._baseHref = t
                        }
                        onPopState(e) {
                            this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e)
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        prepareExternalUrl(e) {
                            return Vc(this._baseHref, e)
                        }
                        path(e = !1) {
                            const t = this._platformLocation.pathname + $c(this._platformLocation.search),
                                n = this._platformLocation.hash;
                            return n && e ? `${t}${n}` : t
                        }
                        pushState(e, t, n, r) {
                            const s = this.prepareExternalUrl(n + $c(r));
                            this._platformLocation.pushState(e, t, s)
                        }
                        replaceState(e, t, n, r) {
                            const s = this.prepareExternalUrl(n + $c(r));
                            this._platformLocation.replaceState(e, t, s)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Mc), dr(qc, 8))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                Wc = (() => {
                    class e extends Hc {
                        constructor(e, t) {
                            super(), this._platformLocation = e, this._baseHref = "", null != t && (this._baseHref = t)
                        }
                        onPopState(e) {
                            this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e)
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        path(e = !1) {
                            let t = this._platformLocation.hash;
                            return null == t && (t = "#"), t.length > 0 ? t.substring(1) : t
                        }
                        prepareExternalUrl(e) {
                            const t = Vc(this._baseHref, e);
                            return t.length > 0 ? "#" + t : t
                        }
                        pushState(e, t, n, r) {
                            let s = this.prepareExternalUrl(n + $c(r));
                            0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.pushState(e, t, s)
                        }
                        replaceState(e, t, n, r) {
                            let s = this.prepareExternalUrl(n + $c(r));
                            0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.replaceState(e, t, s)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Mc), dr(qc, 8))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                Kc = (() => {
                    class e {
                        constructor(e, t) {
                            this._subject = new gu, this._urlChangeListeners = [], this._platformStrategy = e;
                            const n = this._platformStrategy.getBaseHref();
                            this._platformLocation = t, this._baseHref = Uc(Qc(n)), this._platformStrategy.onPopState(e => {
                                this._subject.emit({
                                    url: this.path(!0),
                                    pop: !0,
                                    state: e.state,
                                    type: e.type
                                })
                            })
                        }
                        path(e = !1) {
                            return this.normalize(this._platformStrategy.path(e))
                        }
                        getState() {
                            return this._platformLocation.getState()
                        }
                        isCurrentPathEqualTo(e, t = "") {
                            return this.path() == this.normalize(e + $c(t))
                        }
                        normalize(t) {
                            return e.stripTrailingSlash(function(e, t) {
                                return e && t.startsWith(e) ? t.substring(e.length) : t
                            }(this._baseHref, Qc(t)))
                        }
                        prepareExternalUrl(e) {
                            return e && "/" !== e[0] && (e = "/" + e), this._platformStrategy.prepareExternalUrl(e)
                        }
                        go(e, t = "", n = null) {
                            this._platformStrategy.pushState(n, "", e, t), this._notifyUrlChangeListeners(this.prepareExternalUrl(e + $c(t)), n)
                        }
                        replaceState(e, t = "", n = null) {
                            this._platformStrategy.replaceState(n, "", e, t), this._notifyUrlChangeListeners(this.prepareExternalUrl(e + $c(t)), n)
                        }
                        forward() {
                            this._platformStrategy.forward()
                        }
                        back() {
                            this._platformStrategy.back()
                        }
                        onUrlChange(e) {
                            this._urlChangeListeners.push(e), this._urlChangeSubscription || (this._urlChangeSubscription = this.subscribe(e => {
                                this._notifyUrlChangeListeners(e.url, e.state)
                            }))
                        }
                        _notifyUrlChangeListeners(e = "", t) {
                            this._urlChangeListeners.forEach(n => n(e, t))
                        }
                        subscribe(e, t, n) {
                            return this._subject.subscribe({
                                next: e,
                                error: t,
                                complete: n
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Hc), dr(Mc))
                    }, e.normalizeQueryParams = $c, e.joinWithSlash = Vc, e.stripTrailingSlash = Uc, e.\u0275prov = he({
                        factory: Zc,
                        token: e,
                        providedIn: "root"
                    }), e
                })();

            function Zc() {
                return new Kc(dr(Hc), dr(Mc))
            }

            function Qc(e) {
                return e.replace(/\/index.html$/, "")
            }
            var Yc = function(e) {
                    return e[e.Zero = 0] = "Zero", e[e.One = 1] = "One", e[e.Two = 2] = "Two", e[e.Few = 3] = "Few", e[e.Many = 4] = "Many", e[e.Other = 5] = "Other", e
                }({}),
                Jc = function(e) {
                    return e[e.Format = 0] = "Format", e[e.Standalone = 1] = "Standalone", e
                }({}),
                Xc = function(e) {
                    return e[e.Narrow = 0] = "Narrow", e[e.Abbreviated = 1] = "Abbreviated", e[e.Wide = 2] = "Wide", e[e.Short = 3] = "Short", e
                }({}),
                eh = function(e) {
                    return e[e.Short = 0] = "Short", e[e.Medium = 1] = "Medium", e[e.Long = 2] = "Long", e[e.Full = 3] = "Full", e
                }({}),
                th = function(e) {
                    return e[e.Decimal = 0] = "Decimal", e[e.Group = 1] = "Group", e[e.List = 2] = "List", e[e.PercentSign = 3] = "PercentSign", e[e.PlusSign = 4] = "PlusSign", e[e.MinusSign = 5] = "MinusSign", e[e.Exponential = 6] = "Exponential", e[e.SuperscriptingExponent = 7] = "SuperscriptingExponent", e[e.PerMille = 8] = "PerMille", e[e[1 / 0] = 9] = "Infinity", e[e.NaN = 10] = "NaN", e[e.TimeSeparator = 11] = "TimeSeparator", e[e.CurrencyDecimal = 12] = "CurrencyDecimal", e[e.CurrencyGroup = 13] = "CurrencyGroup", e
                }({});

            function nh(e, t) {
                return ah(Na(e)[ja.DateFormat], t)
            }

            function rh(e, t) {
                return ah(Na(e)[ja.TimeFormat], t)
            }

            function sh(e, t) {
                return ah(Na(e)[ja.DateTimeFormat], t)
            }

            function ih(e, t) {
                const n = Na(e),
                    r = n[ja.NumberSymbols][t];
                if (void 0 === r) {
                    if (t === th.CurrencyDecimal) return n[ja.NumberSymbols][th.Decimal];
                    if (t === th.CurrencyGroup) return n[ja.NumberSymbols][th.Group]
                }
                return r
            }

            function oh(e) {
                if (!e[ja.ExtraData]) throw new Error(`Missing extra locale data for the locale "${e[ja.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)
            }

            function ah(e, t) {
                for (let n = t; n > -1; n--)
                    if (void 0 !== e[n]) return e[n];
                throw new Error("Locale data API: locale data undefined")
            }

            function lh(e) {
                const [t, n] = e.split(":");
                return {
                    hours: +t,
                    minutes: +n
                }
            }
            const uh = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
                ch = {},
                hh = /((?:[^GyYMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
            var dh = function(e) {
                    return e[e.Short = 0] = "Short", e[e.ShortGMT = 1] = "ShortGMT", e[e.Long = 2] = "Long", e[e.Extended = 3] = "Extended", e
                }({}),
                ph = function(e) {
                    return e[e.FullYear = 0] = "FullYear", e[e.Month = 1] = "Month", e[e.Date = 2] = "Date", e[e.Hours = 3] = "Hours", e[e.Minutes = 4] = "Minutes", e[e.Seconds = 5] = "Seconds", e[e.FractionalSeconds = 6] = "FractionalSeconds", e[e.Day = 7] = "Day", e
                }({}),
                fh = function(e) {
                    return e[e.DayPeriods = 0] = "DayPeriods", e[e.Days = 1] = "Days", e[e.Months = 2] = "Months", e[e.Eras = 3] = "Eras", e
                }({});

            function gh(e, t, n, r) {
                let s = function(e) {
                    if (Dh(e)) return e;
                    if ("number" == typeof e && !isNaN(e)) return new Date(e);
                    if ("string" == typeof e) {
                        if (e = e.trim(), /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(e)) {
                            const [t, n = 1, r = 1] = e.split("-").map(e => +e);
                            return mh(t, n - 1, r)
                        }
                        const t = parseFloat(e);
                        if (!isNaN(e - t)) return new Date(t);
                        let n;
                        if (n = e.match(uh)) return function(e) {
                            const t = new Date(0);
                            let n = 0,
                                r = 0;
                            const s = e[8] ? t.setUTCFullYear : t.setFullYear,
                                i = e[8] ? t.setUTCHours : t.setHours;
                            e[9] && (n = Number(e[9] + e[10]), r = Number(e[9] + e[11])), s.call(t, Number(e[1]), Number(e[2]) - 1, Number(e[3]));
                            const o = Number(e[4] || 0) - n,
                                a = Number(e[5] || 0) - r,
                                l = Number(e[6] || 0),
                                u = Math.floor(1e3 * parseFloat("0." + (e[7] || 0)));
                            return i.call(t, o, a, l, u), t
                        }(n)
                    }
                    const t = new Date(e);
                    if (!Dh(t)) throw new Error(`Unable to convert "${e}" into a date`);
                    return t
                }(e);
                t = yh(n, t) || t;
                let i, o = [];
                for (; t;) {
                    if (i = hh.exec(t), !i) {
                        o.push(t);
                        break
                    } {
                        o = o.concat(i.slice(1));
                        const e = o.pop();
                        if (!e) break;
                        t = e
                    }
                }
                let a = s.getTimezoneOffset();
                r && (a = Ah(r, a), s = function(e, t, n) {
                    const r = e.getTimezoneOffset();
                    return function(e, t) {
                        return (e = new Date(e.getTime())).setMinutes(e.getMinutes() + t), e
                    }(e, -1 * (Ah(t, r) - r))
                }(s, r));
                let l = "";
                return o.forEach(e => {
                    const t = function(e) {
                        if (kh[e]) return kh[e];
                        let t;
                        switch (e) {
                            case "G":
                            case "GG":
                            case "GGG":
                                t = wh(fh.Eras, Xc.Abbreviated);
                                break;
                            case "GGGG":
                                t = wh(fh.Eras, Xc.Wide);
                                break;
                            case "GGGGG":
                                t = wh(fh.Eras, Xc.Narrow);
                                break;
                            case "y":
                                t = _h(ph.FullYear, 1, 0, !1, !0);
                                break;
                            case "yy":
                                t = _h(ph.FullYear, 2, 0, !0, !0);
                                break;
                            case "yyy":
                                t = _h(ph.FullYear, 3, 0, !1, !0);
                                break;
                            case "yyyy":
                                t = _h(ph.FullYear, 4, 0, !1, !0);
                                break;
                            case "Y":
                                t = Eh(1);
                                break;
                            case "YY":
                                t = Eh(2, !0);
                                break;
                            case "YYY":
                                t = Eh(3);
                                break;
                            case "YYYY":
                                t = Eh(4);
                                break;
                            case "M":
                            case "L":
                                t = _h(ph.Month, 1, 1);
                                break;
                            case "MM":
                            case "LL":
                                t = _h(ph.Month, 2, 1);
                                break;
                            case "MMM":
                                t = wh(fh.Months, Xc.Abbreviated);
                                break;
                            case "MMMM":
                                t = wh(fh.Months, Xc.Wide);
                                break;
                            case "MMMMM":
                                t = wh(fh.Months, Xc.Narrow);
                                break;
                            case "LLL":
                                t = wh(fh.Months, Xc.Abbreviated, Jc.Standalone);
                                break;
                            case "LLLL":
                                t = wh(fh.Months, Xc.Wide, Jc.Standalone);
                                break;
                            case "LLLLL":
                                t = wh(fh.Months, Xc.Narrow, Jc.Standalone);
                                break;
                            case "w":
                                t = xh(1);
                                break;
                            case "ww":
                                t = xh(2);
                                break;
                            case "W":
                                t = xh(1, !0);
                                break;
                            case "d":
                                t = _h(ph.Date, 1);
                                break;
                            case "dd":
                                t = _h(ph.Date, 2);
                                break;
                            case "E":
                            case "EE":
                            case "EEE":
                                t = wh(fh.Days, Xc.Abbreviated);
                                break;
                            case "EEEE":
                                t = wh(fh.Days, Xc.Wide);
                                break;
                            case "EEEEE":
                                t = wh(fh.Days, Xc.Narrow);
                                break;
                            case "EEEEEE":
                                t = wh(fh.Days, Xc.Short);
                                break;
                            case "a":
                            case "aa":
                            case "aaa":
                                t = wh(fh.DayPeriods, Xc.Abbreviated);
                                break;
                            case "aaaa":
                                t = wh(fh.DayPeriods, Xc.Wide);
                                break;
                            case "aaaaa":
                                t = wh(fh.DayPeriods, Xc.Narrow);
                                break;
                            case "b":
                            case "bb":
                            case "bbb":
                                t = wh(fh.DayPeriods, Xc.Abbreviated, Jc.Standalone, !0);
                                break;
                            case "bbbb":
                                t = wh(fh.DayPeriods, Xc.Wide, Jc.Standalone, !0);
                                break;
                            case "bbbbb":
                                t = wh(fh.DayPeriods, Xc.Narrow, Jc.Standalone, !0);
                                break;
                            case "B":
                            case "BB":
                            case "BBB":
                                t = wh(fh.DayPeriods, Xc.Abbreviated, Jc.Format, !0);
                                break;
                            case "BBBB":
                                t = wh(fh.DayPeriods, Xc.Wide, Jc.Format, !0);
                                break;
                            case "BBBBB":
                                t = wh(fh.DayPeriods, Xc.Narrow, Jc.Format, !0);
                                break;
                            case "h":
                                t = _h(ph.Hours, 1, -12);
                                break;
                            case "hh":
                                t = _h(ph.Hours, 2, -12);
                                break;
                            case "H":
                                t = _h(ph.Hours, 1);
                                break;
                            case "HH":
                                t = _h(ph.Hours, 2);
                                break;
                            case "m":
                                t = _h(ph.Minutes, 1);
                                break;
                            case "mm":
                                t = _h(ph.Minutes, 2);
                                break;
                            case "s":
                                t = _h(ph.Seconds, 1);
                                break;
                            case "ss":
                                t = _h(ph.Seconds, 2);
                                break;
                            case "S":
                                t = _h(ph.FractionalSeconds, 1);
                                break;
                            case "SS":
                                t = _h(ph.FractionalSeconds, 2);
                                break;
                            case "SSS":
                                t = _h(ph.FractionalSeconds, 3);
                                break;
                            case "Z":
                            case "ZZ":
                            case "ZZZ":
                                t = Ch(dh.Short);
                                break;
                            case "ZZZZZ":
                                t = Ch(dh.Extended);
                                break;
                            case "O":
                            case "OO":
                            case "OOO":
                            case "z":
                            case "zz":
                            case "zzz":
                                t = Ch(dh.ShortGMT);
                                break;
                            case "OOOO":
                            case "ZZZZ":
                            case "zzzz":
                                t = Ch(dh.Long);
                                break;
                            default:
                                return null
                        }
                        return kh[e] = t, t
                    }(e);
                    l += t ? t(s, n, a) : "''" === e ? "'" : e.replace(/(^'|'$)/g, "").replace(/''/g, "'")
                }), l
            }

            function mh(e, t, n) {
                const r = new Date(0);
                return r.setFullYear(e, t, n), r.setHours(0, 0, 0), r
            }

            function yh(e, t) {
                const n = function(e) {
                    return Na(e)[ja.LocaleId]
                }(e);
                if (ch[n] = ch[n] || {}, ch[n][t]) return ch[n][t];
                let r = "";
                switch (t) {
                    case "shortDate":
                        r = nh(e, eh.Short);
                        break;
                    case "mediumDate":
                        r = nh(e, eh.Medium);
                        break;
                    case "longDate":
                        r = nh(e, eh.Long);
                        break;
                    case "fullDate":
                        r = nh(e, eh.Full);
                        break;
                    case "shortTime":
                        r = rh(e, eh.Short);
                        break;
                    case "mediumTime":
                        r = rh(e, eh.Medium);
                        break;
                    case "longTime":
                        r = rh(e, eh.Long);
                        break;
                    case "fullTime":
                        r = rh(e, eh.Full);
                        break;
                    case "short":
                        const t = yh(e, "shortTime"),
                            n = yh(e, "shortDate");
                        r = bh(sh(e, eh.Short), [t, n]);
                        break;
                    case "medium":
                        const s = yh(e, "mediumTime"),
                            i = yh(e, "mediumDate");
                        r = bh(sh(e, eh.Medium), [s, i]);
                        break;
                    case "long":
                        const o = yh(e, "longTime"),
                            a = yh(e, "longDate");
                        r = bh(sh(e, eh.Long), [o, a]);
                        break;
                    case "full":
                        const l = yh(e, "fullTime"),
                            u = yh(e, "fullDate");
                        r = bh(sh(e, eh.Full), [l, u])
                }
                return r && (ch[n][t] = r), r
            }

            function bh(e, t) {
                return t && (e = e.replace(/\{([^}]+)}/g, function(e, n) {
                    return null != t && n in t ? t[n] : e
                })), e
            }

            function vh(e, t, n = "-", r, s) {
                let i = "";
                (e < 0 || s && e <= 0) && (s ? e = 1 - e : (e = -e, i = n));
                let o = String(e);
                for (; o.length < t;) o = "0" + o;
                return r && (o = o.substr(o.length - t)), i + o
            }

            function _h(e, t, n = 0, r = !1, s = !1) {
                return function(i, o) {
                    let a = function(e, t) {
                        switch (e) {
                            case ph.FullYear:
                                return t.getFullYear();
                            case ph.Month:
                                return t.getMonth();
                            case ph.Date:
                                return t.getDate();
                            case ph.Hours:
                                return t.getHours();
                            case ph.Minutes:
                                return t.getMinutes();
                            case ph.Seconds:
                                return t.getSeconds();
                            case ph.FractionalSeconds:
                                return t.getMilliseconds();
                            case ph.Day:
                                return t.getDay();
                            default:
                                throw new Error(`Unknown DateType value "${e}".`)
                        }
                    }(e, i);
                    if ((n > 0 || a > -n) && (a += n), e === ph.Hours) 0 === a && -12 === n && (a = 12);
                    else if (e === ph.FractionalSeconds) return l = t, vh(a, 3).substr(0, l);
                    var l;
                    const u = ih(o, th.MinusSign);
                    return vh(a, t, u, r, s)
                }
            }

            function wh(e, t, n = Jc.Format, r = !1) {
                return function(s, i) {
                    return function(e, t, n, r, s, i) {
                        switch (n) {
                            case fh.Months:
                                return function(e, t, n) {
                                    const r = Na(e),
                                        s = ah([r[ja.MonthsFormat], r[ja.MonthsStandalone]], t);
                                    return ah(s, n)
                                }(t, s, r)[e.getMonth()];
                            case fh.Days:
                                return function(e, t, n) {
                                    const r = Na(e),
                                        s = ah([r[ja.DaysFormat], r[ja.DaysStandalone]], t);
                                    return ah(s, n)
                                }(t, s, r)[e.getDay()];
                            case fh.DayPeriods:
                                const o = e.getHours(),
                                    a = e.getMinutes();
                                if (i) {
                                    const e = function(e) {
                                            const t = Na(e);
                                            return oh(t), (t[ja.ExtraData][2] || []).map(e => "string" == typeof e ? lh(e) : [lh(e[0]), lh(e[1])])
                                        }(t),
                                        n = function(e, t, n) {
                                            const r = Na(e);
                                            oh(r);
                                            const s = ah([r[ja.ExtraData][0], r[ja.ExtraData][1]], t) || [];
                                            return ah(s, n) || []
                                        }(t, s, r),
                                        i = e.findIndex(e => {
                                            if (Array.isArray(e)) {
                                                const [t, n] = e, r = o >= t.hours && a >= t.minutes, s = o < n.hours || o === n.hours && a < n.minutes;
                                                if (t.hours < n.hours) {
                                                    if (r && s) return !0
                                                } else if (r || s) return !0
                                            } else if (e.hours === o && e.minutes === a) return !0;
                                            return !1
                                        });
                                    if (-1 !== i) return n[i]
                                }
                                return function(e, t, n) {
                                    const r = Na(e),
                                        s = ah([r[ja.DayPeriodsFormat], r[ja.DayPeriodsStandalone]], t);
                                    return ah(s, n)
                                }(t, s, r)[o < 12 ? 0 : 1];
                            case fh.Eras:
                                return function(e, t) {
                                    return ah(Na(e)[ja.Eras], t)
                                }(t, r)[e.getFullYear() <= 0 ? 0 : 1];
                            default:
                                throw new Error(`unexpected translation type ${n}`)
                        }
                    }(s, i, e, t, n, r)
                }
            }

            function Ch(e) {
                return function(t, n, r) {
                    const s = -1 * r,
                        i = ih(n, th.MinusSign),
                        o = s > 0 ? Math.floor(s / 60) : Math.ceil(s / 60);
                    switch (e) {
                        case dh.Short:
                            return (s >= 0 ? "+" : "") + vh(o, 2, i) + vh(Math.abs(s % 60), 2, i);
                        case dh.ShortGMT:
                            return "GMT" + (s >= 0 ? "+" : "") + vh(o, 1, i);
                        case dh.Long:
                            return "GMT" + (s >= 0 ? "+" : "") + vh(o, 2, i) + ":" + vh(Math.abs(s % 60), 2, i);
                        case dh.Extended:
                            return 0 === r ? "Z" : (s >= 0 ? "+" : "") + vh(o, 2, i) + ":" + vh(Math.abs(s % 60), 2, i);
                        default:
                            throw new Error(`Unknown zone width "${e}"`)
                    }
                }
            }

            function Sh(e) {
                return mh(e.getFullYear(), e.getMonth(), e.getDate() + (4 - e.getDay()))
            }

            function xh(e, t = !1) {
                return function(n, r) {
                    let s;
                    if (t) {
                        const e = new Date(n.getFullYear(), n.getMonth(), 1).getDay() - 1,
                            t = n.getDate();
                        s = 1 + Math.floor((t + e) / 7)
                    } else {
                        const e = Sh(n),
                            t = function(e) {
                                const t = mh(e, 0, 1).getDay();
                                return mh(e, 0, 1 + (t <= 4 ? 4 : 11) - t)
                            }(e.getFullYear()),
                            r = e.getTime() - t.getTime();
                        s = 1 + Math.round(r / 6048e5)
                    }
                    return vh(s, e, ih(r, th.MinusSign))
                }
            }

            function Eh(e, t = !1) {
                return function(n, r) {
                    return vh(Sh(n).getFullYear(), e, ih(r, th.MinusSign), t)
                }
            }
            const kh = {};

            function Ah(e, t) {
                e = e.replace(/:/g, "");
                const n = Date.parse("Jan 01, 1970 00:00:00 " + e) / 6e4;
                return isNaN(n) ? t : n
            }

            function Dh(e) {
                return e instanceof Date && !isNaN(e.valueOf())
            }
            class Th {}
            let Oh = (() => {
                class e extends Th {
                    constructor(e) {
                        super(), this.locale = e
                    }
                    getPluralCategory(e, t) {
                        switch (function(e) {
                                return Na(e)[ja.PluralCase]
                            }(t || this.locale)(e)) {
                            case Yc.Zero:
                                return "zero";
                            case Yc.One:
                                return "one";
                            case Yc.Two:
                                return "two";
                            case Yc.Few:
                                return "few";
                            case Yc.Many:
                                return "many";
                            default:
                                return "other"
                        }
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Hu))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();

            function Fh(e, t) {
                t = encodeURIComponent(t);
                for (const n of e.split(";")) {
                    const e = n.indexOf("="),
                        [r, s] = -1 == e ? [n, ""] : [n.slice(0, e), n.slice(e + 1)];
                    if (r.trim() === t) return decodeURIComponent(s)
                }
                return null
            }
            let Ph = (() => {
                class e {
                    constructor(e, t, n, r) {
                        this._iterableDiffers = e, this._keyValueDiffers = t, this._ngEl = n, this._renderer = r, this._iterableDiffer = null, this._keyValueDiffer = null, this._initialClasses = [], this._rawClass = null
                    }
                    set klass(e) {
                        this._removeClasses(this._initialClasses), this._initialClasses = "string" == typeof e ? e.split(/\s+/) : [], this._applyClasses(this._initialClasses), this._applyClasses(this._rawClass)
                    }
                    set ngClass(e) {
                        this._removeClasses(this._rawClass), this._applyClasses(this._initialClasses), this._iterableDiffer = null, this._keyValueDiffer = null, this._rawClass = "string" == typeof e ? e.split(/\s+/) : e, this._rawClass && (Eo(this._rawClass) ? this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create() : this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create())
                    }
                    ngDoCheck() {
                        if (this._iterableDiffer) {
                            const e = this._iterableDiffer.diff(this._rawClass);
                            e && this._applyIterableChanges(e)
                        } else if (this._keyValueDiffer) {
                            const e = this._keyValueDiffer.diff(this._rawClass);
                            e && this._applyKeyValueChanges(e)
                        }
                    }
                    _applyKeyValueChanges(e) {
                        e.forEachAddedItem(e => this._toggleClass(e.key, e.currentValue)), e.forEachChangedItem(e => this._toggleClass(e.key, e.currentValue)), e.forEachRemovedItem(e => {
                            e.previousValue && this._toggleClass(e.key, !1)
                        })
                    }
                    _applyIterableChanges(e) {
                        e.forEachAddedItem(e => {
                            if ("string" != typeof e.item) throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${te(e.item)}`);
                            this._toggleClass(e.item, !0)
                        }), e.forEachRemovedItem(e => this._toggleClass(e.item, !1))
                    }
                    _applyClasses(e) {
                        e && (Array.isArray(e) || e instanceof Set ? e.forEach(e => this._toggleClass(e, !0)) : Object.keys(e).forEach(t => this._toggleClass(t, !!e[t])))
                    }
                    _removeClasses(e) {
                        e && (Array.isArray(e) || e instanceof Set ? e.forEach(e => this._toggleClass(e, !1)) : Object.keys(e).forEach(e => this._toggleClass(e, !1)))
                    }
                    _toggleClass(e, t) {
                        (e = e.trim()) && e.split(/\s+/g).forEach(e => {
                            t ? this._renderer.addClass(this._ngEl.nativeElement, e) : this._renderer.removeClass(this._ngEl.nativeElement, e)
                        })
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(wl), Ro(Sl), Ro(nl), Ro(il))
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["", "ngClass", ""]
                    ],
                    inputs: {
                        klass: ["class", "klass"],
                        ngClass: "ngClass"
                    }
                }), e
            })();
            class Ih {
                constructor(e, t, n, r) {
                    this.$implicit = e, this.ngForOf = t, this.index = n, this.count = r
                }
                get first() {
                    return 0 === this.index
                }
                get last() {
                    return this.index === this.count - 1
                }
                get even() {
                    return this.index % 2 == 0
                }
                get odd() {
                    return !this.even
                }
            }
            let Mh = (() => {
                class e {
                    constructor(e, t, n) {
                        this._viewContainer = e, this._template = t, this._differs = n, this._ngForOf = null, this._ngForOfDirty = !0, this._differ = null
                    }
                    set ngForOf(e) {
                        this._ngForOf = e, this._ngForOfDirty = !0
                    }
                    set ngForTrackBy(e) {
                        this._trackByFn = e
                    }
                    get ngForTrackBy() {
                        return this._trackByFn
                    }
                    set ngForTemplate(e) {
                        e && (this._template = e)
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const n = this._ngForOf;
                            if (!this._differ && n) try {
                                this._differ = this._differs.find(n).create(this.ngForTrackBy)
                            } catch (t) {
                                throw new Error(`Cannot find a differ supporting object '${n}' of type '${e=n,e.name||typeof e}'. NgFor only supports binding to Iterables such as Arrays.`)
                            }
                        }
                        var e;
                        if (this._differ) {
                            const e = this._differ.diff(this._ngForOf);
                            e && this._applyChanges(e)
                        }
                    }
                    _applyChanges(e) {
                        const t = [];
                        e.forEachOperation((e, n, r) => {
                            if (null == e.previousIndex) {
                                const n = this._viewContainer.createEmbeddedView(this._template, new Ih(null, this._ngForOf, -1, -1), null === r ? void 0 : r),
                                    s = new Rh(e, n);
                                t.push(s)
                            } else if (null == r) this._viewContainer.remove(null === n ? void 0 : n);
                            else if (null !== n) {
                                const s = this._viewContainer.get(n);
                                this._viewContainer.move(s, r);
                                const i = new Rh(e, s);
                                t.push(i)
                            }
                        });
                        for (let n = 0; n < t.length; n++) this._perViewChange(t[n].view, t[n].record);
                        for (let n = 0, r = this._viewContainer.length; n < r; n++) {
                            const e = this._viewContainer.get(n);
                            e.context.index = n, e.context.count = r, e.context.ngForOf = this._ngForOf
                        }
                        e.forEachIdentityChange(e => {
                            this._viewContainer.get(e.currentIndex).context.$implicit = e.item
                        })
                    }
                    _perViewChange(e, t) {
                        e.context.$implicit = t.item
                    }
                    static ngTemplateContextGuard(e, t) {
                        return !0
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Ul), Ro(Ml), Ro(wl))
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["", "ngFor", "", "ngForOf", ""]
                    ],
                    inputs: {
                        ngForOf: "ngForOf",
                        ngForTrackBy: "ngForTrackBy",
                        ngForTemplate: "ngForTemplate"
                    }
                }), e
            })();
            class Rh {
                constructor(e, t) {
                    this.record = e, this.view = t
                }
            }
            let Nh = (() => {
                class e {
                    constructor(e, t) {
                        this._viewContainer = e, this._context = new Lh, this._thenTemplateRef = null, this._elseTemplateRef = null, this._thenViewRef = null, this._elseViewRef = null, this._thenTemplateRef = t
                    }
                    set ngIf(e) {
                        this._context.$implicit = this._context.ngIf = e, this._updateView()
                    }
                    set ngIfThen(e) {
                        jh("ngIfThen", e), this._thenTemplateRef = e, this._thenViewRef = null, this._updateView()
                    }
                    set ngIfElse(e) {
                        jh("ngIfElse", e), this._elseTemplateRef = e, this._elseViewRef = null, this._updateView()
                    }
                    _updateView() {
                        this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(), this._elseViewRef = null, this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(), this._thenViewRef = null, this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)))
                    }
                    static ngTemplateContextGuard(e, t) {
                        return !0
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Ul), Ro(Ml))
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["", "ngIf", ""]
                    ],
                    inputs: {
                        ngIf: "ngIf",
                        ngIfThen: "ngIfThen",
                        ngIfElse: "ngIfElse"
                    }
                }), e
            })();
            class Lh {
                constructor() {
                    this.$implicit = null, this.ngIf = null
                }
            }

            function jh(e, t) {
                if (t && !t.createEmbeddedView) throw new Error(`${e} must be a TemplateRef, but received '${te(t)}'.`)
            }

            function Bh(e, t) {
                return Error(`InvalidPipeArgument: '${t}' for pipe '${te(e)}'`)
            }
            class Vh {
                createSubscription(e, t) {
                    return e.subscribe({
                        next: t,
                        error: e => {
                            throw e
                        }
                    })
                }
                dispose(e) {
                    e.unsubscribe()
                }
                onDestroy(e) {
                    e.unsubscribe()
                }
            }
            class Uh {
                createSubscription(e, t) {
                    return e.then(t, e => {
                        throw e
                    })
                }
                dispose(e) {}
                onDestroy(e) {}
            }
            const $h = new Uh,
                Hh = new Vh;
            let zh = (() => {
                class e {
                    constructor(e) {
                        this._ref = e, this._latestValue = null, this._subscription = null, this._obj = null, this._strategy = null
                    }
                    ngOnDestroy() {
                        this._subscription && this._dispose()
                    }
                    transform(e) {
                        return this._obj ? e !== this._obj ? (this._dispose(), this.transform(e)) : this._latestValue : (e && this._subscribe(e), this._latestValue)
                    }
                    _subscribe(e) {
                        this._obj = e, this._strategy = this._selectStrategy(e), this._subscription = this._strategy.createSubscription(e, t => this._updateLatestValue(e, t))
                    }
                    _selectStrategy(t) {
                        if ($o(t)) return $h;
                        if (Ho(t)) return Hh;
                        throw Bh(e, t)
                    }
                    _dispose() {
                        this._strategy.dispose(this._subscription), this._latestValue = null, this._subscription = null, this._obj = null
                    }
                    _updateLatestValue(e, t) {
                        e === this._obj && (this._latestValue = t, this._ref.markForCheck())
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(function(e = _e.Default) {
                        const t = Tl(!0);
                        if (null != t || e & _e.Optional) return t;
                        ce("ChangeDetectorRef")
                    }())
                }, e.\u0275pipe = Qe({
                    name: "async",
                    type: e,
                    pure: !1
                }), e
            })();
            const qh = /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;
            let Gh = (() => {
                    class e {
                        transform(t) {
                            if (null == t) return null;
                            if ("string" != typeof t) throw Bh(e, t);
                            return t.replace(qh, e => e[0].toUpperCase() + e.substr(1).toLowerCase())
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275pipe = Qe({
                        name: "titlecase",
                        type: e,
                        pure: !0
                    }), e
                })(),
                Wh = (() => {
                    class e {
                        constructor(e) {
                            this.locale = e
                        }
                        transform(t, n = "mediumDate", r, s) {
                            if (null == t || "" === t || t != t) return null;
                            try {
                                return gh(t, n, s || this.locale, r)
                            } catch (i) {
                                throw Bh(e, i.message)
                            }
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(Hu))
                    }, e.\u0275pipe = Qe({
                        name: "date",
                        type: e,
                        pure: !0
                    }), e
                })(),
                Kh = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: [{
                            provide: Th,
                            useClass: Oh
                        }]
                    }), e
                })();

            function Zh(e) {
                return "browser" === e
            }
            let Qh = (() => {
                class e {}
                return e.\u0275prov = he({
                    token: e,
                    providedIn: "root",
                    factory: () => new Yh(dr(Ic), window)
                }), e
            })();
            class Yh {
                constructor(e, t) {
                    this.document = e, this.window = t, this.offset = () => [0, 0]
                }
                setOffset(e) {
                    this.offset = Array.isArray(e) ? () => e : e
                }
                getScrollPosition() {
                    return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0]
                }
                scrollToPosition(e) {
                    this.supportsScrolling() && this.window.scrollTo(e[0], e[1])
                }
                scrollToAnchor(e) {
                    if (!this.supportsScrolling()) return;
                    const t = function(e, t) {
                        const n = e.getElementById(t) || e.getElementsByName(t)[0];
                        if (n) return n;
                        if ("function" == typeof e.createTreeWalker && e.body && (e.body.createShadowRoot || e.body.attachShadow)) {
                            const n = e.createTreeWalker(e.body, NodeFilter.SHOW_ELEMENT);
                            let r = n.currentNode;
                            for (; r;) {
                                const e = r.shadowRoot;
                                if (e) {
                                    const n = e.getElementById(t) || e.querySelector(`[name="${t}"]`);
                                    if (n) return n
                                }
                                r = n.nextNode()
                            }
                        }
                        return null
                    }(this.document, e);
                    t && (this.scrollToElement(t), this.attemptFocus(t))
                }
                setHistoryScrollRestoration(e) {
                    if (this.supportScrollRestoration()) {
                        const t = this.window.history;
                        t && t.scrollRestoration && (t.scrollRestoration = e)
                    }
                }
                scrollToElement(e) {
                    const t = e.getBoundingClientRect(),
                        n = t.left + this.window.pageXOffset,
                        r = t.top + this.window.pageYOffset,
                        s = this.offset();
                    this.window.scrollTo(n - s[0], r - s[1])
                }
                attemptFocus(e) {
                    return e.focus(), this.document.activeElement === e
                }
                supportScrollRestoration() {
                    try {
                        if (!this.supportsScrolling()) return !1;
                        const e = Jh(this.window.history) || Jh(Object.getPrototypeOf(this.window.history));
                        return !(!e || !e.writable && !e.set)
                    } catch (e) {
                        return !1
                    }
                }
                supportsScrolling() {
                    try {
                        return !!this.window && !!this.window.scrollTo && "pageXOffset" in this.window
                    } catch (e) {
                        return !1
                    }
                }
            }

            function Jh(e) {
                return Object.getOwnPropertyDescriptor(e, "scrollRestoration")
            }
            class Xh extends class extends class {} {
                constructor() {
                    super()
                }
                supportsDOMEvents() {
                    return !0
                }
            } {
                static makeCurrent() {
                    var e;
                    e = new Xh, Fc || (Fc = e)
                }
                getProperty(e, t) {
                    return e[t]
                }
                log(e) {
                    window.console && window.console.log && window.console.log(e)
                }
                logGroup(e) {
                    window.console && window.console.group && window.console.group(e)
                }
                logGroupEnd() {
                    window.console && window.console.groupEnd && window.console.groupEnd()
                }
                onAndCancel(e, t, n) {
                    return e.addEventListener(t, n, !1), () => {
                        e.removeEventListener(t, n, !1)
                    }
                }
                dispatchEvent(e, t) {
                    e.dispatchEvent(t)
                }
                remove(e) {
                    return e.parentNode && e.parentNode.removeChild(e), e
                }
                getValue(e) {
                    return e.value
                }
                createElement(e, t) {
                    return (t = t || this.getDefaultDocument()).createElement(e)
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument("fakeTitle")
                }
                getDefaultDocument() {
                    return document
                }
                isElementNode(e) {
                    return e.nodeType === Node.ELEMENT_NODE
                }
                isShadowRoot(e) {
                    return e instanceof DocumentFragment
                }
                getGlobalEventTarget(e, t) {
                    return "window" === t ? window : "document" === t ? e : "body" === t ? e.body : null
                }
                getHistory() {
                    return window.history
                }
                getLocation() {
                    return window.location
                }
                getBaseHref(e) {
                    const t = td || (td = document.querySelector("base"), td) ? td.getAttribute("href") : null;
                    return null == t ? null : (n = t, ed || (ed = document.createElement("a")), ed.setAttribute("href", n), "/" === ed.pathname.charAt(0) ? ed.pathname : "/" + ed.pathname);
                    var n
                }
                resetBaseElement() {
                    td = null
                }
                getUserAgent() {
                    return window.navigator.userAgent
                }
                performanceNow() {
                    return window.performance && window.performance.now ? window.performance.now() : (new Date).getTime()
                }
                supportsCookies() {
                    return !0
                }
                getCookie(e) {
                    return Fh(document.cookie, e)
                }
            }
            let ed, td = null;
            const nd = new Kn("TRANSITION_ID"),
                rd = [{
                    provide: Mu,
                    useFactory: function(e, t, n) {
                        return () => {
                            n.get(Ru).donePromise.then(() => {
                                const n = Pc();
                                Array.prototype.slice.apply(t.querySelectorAll("style[ng-transition]")).filter(t => t.getAttribute("ng-transition") === e).forEach(e => n.remove(e))
                            })
                        }
                    },
                    deps: [nd, Ic, go],
                    multi: !0
                }];
            class sd {
                static init() {
                    var e;
                    e = new sd, dc = e
                }
                addToWindow(e) {
                    Fe.getAngularTestability = (t, n = !0) => {
                        const r = e.findTestabilityInTree(t, n);
                        if (null == r) throw new Error("Could not find testability for element.");
                        return r
                    }, Fe.getAllAngularTestabilities = () => e.getAllTestabilities(), Fe.getAllAngularRootElements = () => e.getAllRootElements(), Fe.frameworkStabilizers || (Fe.frameworkStabilizers = []), Fe.frameworkStabilizers.push(e => {
                        const t = Fe.getAllAngularTestabilities();
                        let n = t.length,
                            r = !1;
                        const s = function(t) {
                            r = r || t, n--, 0 == n && e(r)
                        };
                        t.forEach(function(e) {
                            e.whenStable(s)
                        })
                    })
                }
                findTestabilityInTree(e, t, n) {
                    if (null == t) return null;
                    const r = e.getTestability(t);
                    return null != r ? r : n ? Pc().isShadowRoot(t) ? this.findTestabilityInTree(e, t.host, !0) : this.findTestabilityInTree(e, t.parentElement, !0) : null
                }
            }
            const id = new Kn("EventManagerPlugins");
            let od = (() => {
                class e {
                    constructor(e, t) {
                        this._zone = t, this._eventNameToPlugin = new Map, e.forEach(e => e.manager = this), this._plugins = e.slice().reverse()
                    }
                    addEventListener(e, t, n) {
                        return this._findPluginFor(t).addEventListener(e, t, n)
                    }
                    addGlobalEventListener(e, t, n) {
                        return this._findPluginFor(t).addGlobalEventListener(e, t, n)
                    }
                    getZone() {
                        return this._zone
                    }
                    _findPluginFor(e) {
                        const t = this._eventNameToPlugin.get(e);
                        if (t) return t;
                        const n = this._plugins;
                        for (let r = 0; r < n.length; r++) {
                            const t = n[r];
                            if (t.supports(e)) return this._eventNameToPlugin.set(e, t), t
                        }
                        throw new Error(`No event manager plugin found for event ${e}`)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(id), dr(tc))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            class ad {
                constructor(e) {
                    this._doc = e
                }
                addGlobalEventListener(e, t, n) {
                    const r = Pc().getGlobalEventTarget(this._doc, e);
                    if (!r) throw new Error(`Unsupported event target ${r} for event ${t}`);
                    return this.addEventListener(r, t, n)
                }
            }
            let ld = (() => {
                    class e {
                        constructor() {
                            this._stylesSet = new Set
                        }
                        addStyles(e) {
                            const t = new Set;
                            e.forEach(e => {
                                this._stylesSet.has(e) || (this._stylesSet.add(e), t.add(e))
                            }), this.onStylesAdded(t)
                        }
                        onStylesAdded(e) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                ud = (() => {
                    class e extends ld {
                        constructor(e) {
                            super(), this._doc = e, this._hostNodes = new Set, this._styleNodes = new Set, this._hostNodes.add(e.head)
                        }
                        _addStylesToHost(e, t) {
                            e.forEach(e => {
                                const n = this._doc.createElement("style");
                                n.textContent = e, this._styleNodes.add(t.appendChild(n))
                            })
                        }
                        addHost(e) {
                            this._addStylesToHost(this._stylesSet, e), this._hostNodes.add(e)
                        }
                        removeHost(e) {
                            this._hostNodes.delete(e)
                        }
                        onStylesAdded(e) {
                            this._hostNodes.forEach(t => this._addStylesToHost(e, t))
                        }
                        ngOnDestroy() {
                            this._styleNodes.forEach(e => Pc().remove(e))
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Ic))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })();
            const cd = {
                    svg: "http://www.w3.org/2000/svg",
                    xhtml: "http://www.w3.org/1999/xhtml",
                    xlink: "http://www.w3.org/1999/xlink",
                    xml: "http://www.w3.org/XML/1998/namespace",
                    xmlns: "http://www.w3.org/2000/xmlns/"
                },
                hd = /%COMP%/g;

            function dd(e, t, n) {
                for (let r = 0; r < t.length; r++) {
                    let s = t[r];
                    Array.isArray(s) ? dd(e, s, n) : (s = s.replace(hd, e), n.push(s))
                }
                return n
            }

            function pd(e) {
                return t => {
                    if ("__ngUnwrap__" === t) return e;
                    !1 === e(t) && (t.preventDefault(), t.returnValue = !1)
                }
            }
            let fd = (() => {
                class e {
                    constructor(e, t, n) {
                        this.eventManager = e, this.sharedStylesHost = t, this.appId = n, this.rendererByCompId = new Map, this.defaultRenderer = new gd(e)
                    }
                    createRenderer(e, t) {
                        if (!e || !t) return this.defaultRenderer;
                        switch (t.encapsulation) {
                            case ke.Emulated: {
                                let n = this.rendererByCompId.get(t.id);
                                return n || (n = new md(this.eventManager, this.sharedStylesHost, t, this.appId), this.rendererByCompId.set(t.id, n)), n.applyToHost(e), n
                            }
                            case 1:
                            case ke.ShadowDom:
                                return new yd(this.eventManager, this.sharedStylesHost, e, t);
                            default:
                                if (!this.rendererByCompId.has(t.id)) {
                                    const e = dd(t.id, t.styles, []);
                                    this.sharedStylesHost.addStyles(e), this.rendererByCompId.set(t.id, this.defaultRenderer)
                                }
                                return this.defaultRenderer
                        }
                    }
                    begin() {}
                    end() {}
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(od), dr(ud), dr(Nu))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            class gd {
                constructor(e) {
                    this.eventManager = e, this.data = Object.create(null)
                }
                destroy() {}
                createElement(e, t) {
                    return t ? document.createElementNS(cd[t] || t, e) : document.createElement(e)
                }
                createComment(e) {
                    return document.createComment(e)
                }
                createText(e) {
                    return document.createTextNode(e)
                }
                appendChild(e, t) {
                    e.appendChild(t)
                }
                insertBefore(e, t, n) {
                    e && e.insertBefore(t, n)
                }
                removeChild(e, t) {
                    e && e.removeChild(t)
                }
                selectRootElement(e, t) {
                    let n = "string" == typeof e ? document.querySelector(e) : e;
                    if (!n) throw new Error(`The selector "${e}" did not match any elements`);
                    return t || (n.textContent = ""), n
                }
                parentNode(e) {
                    return e.parentNode
                }
                nextSibling(e) {
                    return e.nextSibling
                }
                setAttribute(e, t, n, r) {
                    if (r) {
                        t = r + ":" + t;
                        const s = cd[r];
                        s ? e.setAttributeNS(s, t, n) : e.setAttribute(t, n)
                    } else e.setAttribute(t, n)
                }
                removeAttribute(e, t, n) {
                    if (n) {
                        const r = cd[n];
                        r ? e.removeAttributeNS(r, t) : e.removeAttribute(`${n}:${t}`)
                    } else e.removeAttribute(t)
                }
                addClass(e, t) {
                    e.classList.add(t)
                }
                removeClass(e, t) {
                    e.classList.remove(t)
                }
                setStyle(e, t, n, r) {
                    r & (gs.DashCase | gs.Important) ? e.style.setProperty(t, n, r & gs.Important ? "important" : "") : e.style[t] = n
                }
                removeStyle(e, t, n) {
                    n & gs.DashCase ? e.style.removeProperty(t) : e.style[t] = ""
                }
                setProperty(e, t, n) {
                    e[t] = n
                }
                setValue(e, t) {
                    e.nodeValue = t
                }
                listen(e, t, n) {
                    return "string" == typeof e ? this.eventManager.addGlobalEventListener(e, t, pd(n)) : this.eventManager.addEventListener(e, t, pd(n))
                }
            }
            class md extends gd {
                constructor(e, t, n, r) {
                    super(e), this.component = n;
                    const s = dd(r + "-" + n.id, n.styles, []);
                    t.addStyles(s), this.contentAttr = "_ngcontent-%COMP%".replace(hd, r + "-" + n.id), this.hostAttr = "_nghost-%COMP%".replace(hd, r + "-" + n.id)
                }
                applyToHost(e) {
                    super.setAttribute(e, this.hostAttr, "")
                }
                createElement(e, t) {
                    const n = super.createElement(e, t);
                    return super.setAttribute(n, this.contentAttr, ""), n
                }
            }
            class yd extends gd {
                constructor(e, t, n, r) {
                    super(e), this.sharedStylesHost = t, this.hostEl = n, this.shadowRoot = n.attachShadow({
                        mode: "open"
                    }), this.sharedStylesHost.addHost(this.shadowRoot);
                    const s = dd(r.id, r.styles, []);
                    for (let i = 0; i < s.length; i++) {
                        const e = document.createElement("style");
                        e.textContent = s[i], this.shadowRoot.appendChild(e)
                    }
                }
                nodeOrShadowRoot(e) {
                    return e === this.hostEl ? this.shadowRoot : e
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot)
                }
                appendChild(e, t) {
                    return super.appendChild(this.nodeOrShadowRoot(e), t)
                }
                insertBefore(e, t, n) {
                    return super.insertBefore(this.nodeOrShadowRoot(e), t, n)
                }
                removeChild(e, t) {
                    return super.removeChild(this.nodeOrShadowRoot(e), t)
                }
                parentNode(e) {
                    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))
                }
            }
            let bd = (() => {
                class e extends ad {
                    constructor(e) {
                        super(e)
                    }
                    supports(e) {
                        return !0
                    }
                    addEventListener(e, t, n) {
                        return e.addEventListener(t, n, !1), () => this.removeEventListener(e, t, n)
                    }
                    removeEventListener(e, t, n) {
                        return e.removeEventListener(t, n)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Ic))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            const vd = ["alt", "control", "meta", "shift"],
                _d = {
                    "\b": "Backspace",
                    "\t": "Tab",
                    "\x7f": "Delete",
                    "\x1b": "Escape",
                    Del: "Delete",
                    Esc: "Escape",
                    Left: "ArrowLeft",
                    Right: "ArrowRight",
                    Up: "ArrowUp",
                    Down: "ArrowDown",
                    Menu: "ContextMenu",
                    Scroll: "ScrollLock",
                    Win: "OS"
                },
                wd = {
                    A: "1",
                    B: "2",
                    C: "3",
                    D: "4",
                    E: "5",
                    F: "6",
                    G: "7",
                    H: "8",
                    I: "9",
                    J: "*",
                    K: "+",
                    M: "-",
                    N: ".",
                    O: "/",
                    "`": "0",
                    "\x90": "NumLock"
                },
                Cd = {
                    alt: e => e.altKey,
                    control: e => e.ctrlKey,
                    meta: e => e.metaKey,
                    shift: e => e.shiftKey
                };
            let Sd = (() => {
                    class e extends ad {
                        constructor(e) {
                            super(e)
                        }
                        supports(t) {
                            return null != e.parseEventName(t)
                        }
                        addEventListener(t, n, r) {
                            const s = e.parseEventName(n),
                                i = e.eventCallback(s.fullKey, r, this.manager.getZone());
                            return this.manager.getZone().runOutsideAngular(() => Pc().onAndCancel(t, s.domEventName, i))
                        }
                        static parseEventName(t) {
                            const n = t.toLowerCase().split("."),
                                r = n.shift();
                            if (0 === n.length || "keydown" !== r && "keyup" !== r) return null;
                            const s = e._normalizeKey(n.pop());
                            let i = "";
                            if (vd.forEach(e => {
                                    const t = n.indexOf(e);
                                    t > -1 && (n.splice(t, 1), i += e + ".")
                                }), i += s, 0 != n.length || 0 === s.length) return null;
                            const o = {};
                            return o.domEventName = r, o.fullKey = i, o
                        }
                        static getEventFullKey(e) {
                            let t = "",
                                n = function(e) {
                                    let t = e.key;
                                    if (null == t) {
                                        if (t = e.keyIdentifier, null == t) return "Unidentified";
                                        t.startsWith("U+") && (t = String.fromCharCode(parseInt(t.substring(2), 16)), 3 === e.location && wd.hasOwnProperty(t) && (t = wd[t]))
                                    }
                                    return _d[t] || t
                                }(e);
                            return n = n.toLowerCase(), " " === n ? n = "space" : "." === n && (n = "dot"), vd.forEach(r => {
                                r != n && (0, Cd[r])(e) && (t += r + ".")
                            }), t += n, t
                        }
                        static eventCallback(t, n, r) {
                            return s => {
                                e.getEventFullKey(s) === t && r.runGuarded(() => n(s))
                            }
                        }
                        static _normalizeKey(e) {
                            switch (e) {
                                case "esc":
                                    return "escape";
                                default:
                                    return e
                            }
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Ic))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                xd = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275prov = he({
                        factory: function() {
                            return dr(Ed)
                        },
                        token: e,
                        providedIn: "root"
                    }), e
                })(),
                Ed = (() => {
                    class e extends xd {
                        constructor(e) {
                            super(), this._doc = e
                        }
                        sanitize(e, t) {
                            if (null == t) return null;
                            switch (e) {
                                case ns.NONE:
                                    return t;
                                case ns.HTML:
                                    return Fr(t, "HTML") ? Or(t) : es(this._doc, String(t)).toString();
                                case ns.STYLE:
                                    return Fr(t, "Style") ? Or(t) : t;
                                case ns.SCRIPT:
                                    if (Fr(t, "Script")) return Or(t);
                                    throw new Error("unsafe value used in a script context");
                                case ns.URL:
                                    return Pr(t), Fr(t, "URL") ? Or(t) : Lr(String(t));
                                case ns.RESOURCE_URL:
                                    if (Fr(t, "ResourceURL")) return Or(t);
                                    throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)");
                                default:
                                    throw new Error(`Unexpected SecurityContext ${e} (see https://g.co/ng/security#xss)`)
                            }
                        }
                        bypassSecurityTrustHtml(e) {
                            return new Er(e)
                        }
                        bypassSecurityTrustStyle(e) {
                            return new kr(e)
                        }
                        bypassSecurityTrustScript(e) {
                            return new Ar(e)
                        }
                        bypassSecurityTrustUrl(e) {
                            return new Dr(e)
                        }
                        bypassSecurityTrustResourceUrl(e) {
                            return new Tr(e)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Ic))
                    }, e.\u0275prov = he({
                        factory: function() {
                            return e = dr(Ji), new Ed(e.get(Ic));
                            var e
                        },
                        token: e,
                        providedIn: "root"
                    }), e
                })();
            const kd = yc(Dc, "browser", [{
                    provide: Vu,
                    useValue: "browser"
                }, {
                    provide: Bu,
                    useValue: function() {
                        Xh.makeCurrent(), sd.init()
                    },
                    multi: !0
                }, {
                    provide: Ic,
                    useFactory: function() {
                        return function(e) {
                            gt = e
                        }(document), document
                    },
                    deps: []
                }]),
                Ad = [
                    [], {
                        provide: eo,
                        useValue: "root"
                    }, {
                        provide: cs,
                        useFactory: function() {
                            return new cs
                        },
                        deps: []
                    }, {
                        provide: id,
                        useClass: bd,
                        multi: !0,
                        deps: [Ic, tc, Vu]
                    }, {
                        provide: id,
                        useClass: Sd,
                        multi: !0,
                        deps: [Ic]
                    },
                    [], {
                        provide: fd,
                        useClass: fd,
                        deps: [od, ud, Nu]
                    }, {
                        provide: sl,
                        useExisting: fd
                    }, {
                        provide: ld,
                        useExisting: ud
                    }, {
                        provide: ud,
                        useClass: ud,
                        deps: [Ic]
                    }, {
                        provide: lc,
                        useClass: lc,
                        deps: [tc]
                    }, {
                        provide: od,
                        useClass: od,
                        deps: [id, tc]
                    },
                    []
                ];
            let Dd = (() => {
                class e {
                    constructor(e) {
                        if (e) throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")
                    }
                    static withServerTransition(t) {
                        return {
                            ngModule: e,
                            providers: [{
                                provide: Nu,
                                useValue: t.appId
                            }, {
                                provide: nd,
                                useExisting: Nu
                            }, rd]
                        }
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(e, 12))
                }, e.\u0275mod = We({
                    type: e
                }), e.\u0275inj = de({
                    providers: Ad,
                    imports: [Kh, Oc]
                }), e
            })();

            function Td() {
                return new Od(dr(Ic))
            }
            let Od = (() => {
                class e {
                    constructor(e) {
                        this._doc = e, this._dom = Pc()
                    }
                    addTag(e, t = !1) {
                        return e ? this._getOrCreateElement(e, t) : null
                    }
                    addTags(e, t = !1) {
                        return e ? e.reduce((e, n) => (n && e.push(this._getOrCreateElement(n, t)), e), []) : []
                    }
                    getTag(e) {
                        return e && this._doc.querySelector(`meta[${e}]`) || null
                    }
                    getTags(e) {
                        if (!e) return [];
                        const t = this._doc.querySelectorAll(`meta[${e}]`);
                        return t ? [].slice.call(t) : []
                    }
                    updateTag(e, t) {
                        if (!e) return null;
                        t = t || this._parseSelector(e);
                        const n = this.getTag(t);
                        return n ? this._setMetaElementAttributes(e, n) : this._getOrCreateElement(e, !0)
                    }
                    removeTag(e) {
                        this.removeTagElement(this.getTag(e))
                    }
                    removeTagElement(e) {
                        e && this._dom.remove(e)
                    }
                    _getOrCreateElement(e, t = !1) {
                        if (!t) {
                            const t = this._parseSelector(e),
                                n = this.getTag(t);
                            if (n && this._containsAttributes(e, n)) return n
                        }
                        const n = this._dom.createElement("meta");
                        return this._setMetaElementAttributes(e, n), this._doc.getElementsByTagName("head")[0].appendChild(n), n
                    }
                    _setMetaElementAttributes(e, t) {
                        return Object.keys(e).forEach(n => t.setAttribute(this._getMetaKeyMap(n), e[n])), t
                    }
                    _parseSelector(e) {
                        const t = e.name ? "name" : "property";
                        return `${t}="${e[t]}"`
                    }
                    _containsAttributes(e, t) {
                        return Object.keys(e).every(n => t.getAttribute(this._getMetaKeyMap(n)) === e[n])
                    }
                    _getMetaKeyMap(e) {
                        return Fd[e] || e
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Ic))
                }, e.\u0275prov = he({
                    factory: Td,
                    token: e,
                    providedIn: "root"
                }), e
            })();
            const Fd = {
                httpEquiv: "http-equiv"
            };

            function Pd() {
                return new Id(dr(Ic))
            }
            let Id = (() => {
                class e {
                    constructor(e) {
                        this._doc = e
                    }
                    getTitle() {
                        return this._doc.title
                    }
                    setTitle(e) {
                        this._doc.title = e || ""
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Ic))
                }, e.\u0275prov = he({
                    factory: Pd,
                    token: e,
                    providedIn: "root"
                }), e
            })();
            "undefined" != typeof window && window;
            let Md = (() => {
                class e {
                    constructor() {
                        this.store = {}, this.onSerializeCallbacks = {}
                    }
                    static init(t) {
                        const n = new e;
                        return n.store = t, n
                    }
                    get(e, t) {
                        return void 0 !== this.store[e] ? this.store[e] : t
                    }
                    set(e, t) {
                        this.store[e] = t
                    }
                    remove(e) {
                        delete this.store[e]
                    }
                    hasKey(e) {
                        return this.store.hasOwnProperty(e)
                    }
                    onSerialize(e, t) {
                        this.onSerializeCallbacks[e] = t
                    }
                    toJson() {
                        for (const t in this.onSerializeCallbacks)
                            if (this.onSerializeCallbacks.hasOwnProperty(t)) try {
                                this.store[t] = this.onSerializeCallbacks[t]()
                            } catch (e) {
                                console.warn("Exception in onSerialize callback: ", e)
                            }
                        return JSON.stringify(this.store)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();

            function Rd(e, t) {
                const n = e.getElementById(t + "-state");
                let r = {};
                if (n && n.textContent) try {
                    r = JSON.parse(function(e) {
                        const t = {
                            "&a;": "&",
                            "&q;": '"',
                            "&s;": "'",
                            "&l;": "<",
                            "&g;": ">"
                        };
                        return e.replace(/&[^;]+;/g, e => t[e])
                    }(n.textContent))
                } catch (s) {
                    console.warn("Exception while restoring TransferState for app " + t, s)
                }
                return Md.init(r)
            }
            let Nd = (() => {
                class e {}
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275mod = We({
                    type: e
                }), e.\u0275inj = de({
                    providers: [{
                        provide: Md,
                        useFactory: Rd,
                        deps: [Ic, Nu]
                    }]
                }), e
            })();

            function Ld(...e) {
                let t = e[e.length - 1];
                return E(t) ? (e.pop(), R(e, t)) : q(e)
            }
            class jd extends S {
                constructor(e) {
                    super(), this._value = e
                }
                get value() {
                    return this.getValue()
                }
                _subscribe(e) {
                    const t = super._subscribe(e);
                    return t && !t.closed && e.next(this._value), t
                }
                getValue() {
                    if (this.hasError) throw this.thrownError;
                    if (this.closed) throw new _;
                    return this._value
                }
                next(e) {
                    super.next(this._value = e)
                }
            }
            class Bd extends f {
                notifyNext(e, t, n, r, s) {
                    this.destination.next(t)
                }
                notifyError(e, t) {
                    this.destination.error(e)
                }
                notifyComplete(e) {
                    this.destination.complete()
                }
            }
            class Vd extends f {
                constructor(e, t, n) {
                    super(), this.parent = e, this.outerValue = t, this.outerIndex = n, this.index = 0
                }
                _next(e) {
                    this.parent.notifyNext(this.outerValue, e, this.outerIndex, this.index++, this)
                }
                _error(e) {
                    this.parent.notifyError(e, this), this.unsubscribe()
                }
                _complete() {
                    this.parent.notifyComplete(this), this.unsubscribe()
                }
            }

            function Ud(e, t, n, r, s = new Vd(e, n, r)) {
                if (!s.closed) return t instanceof b ? t.subscribe(s) : M(t)(s)
            }
            const $d = {};

            function Hd(...e) {
                let t, n;
                return E(e[e.length - 1]) && (n = e.pop()), "function" == typeof e[e.length - 1] && (t = e.pop()), 1 === e.length && l(e[0]) && (e = e[0]), q(e, n).lift(new zd(t))
            }
            class zd {
                constructor(e) {
                    this.resultSelector = e
                }
                call(e, t) {
                    return t.subscribe(new qd(e, this.resultSelector))
                }
            }
            class qd extends Bd {
                constructor(e, t) {
                    super(e), this.resultSelector = t, this.active = 0, this.values = [], this.observables = []
                }
                _next(e) {
                    this.values.push($d), this.observables.push(e)
                }
                _complete() {
                    const e = this.observables,
                        t = e.length;
                    if (0 === t) this.destination.complete();
                    else {
                        this.active = t, this.toRespond = t;
                        for (let n = 0; n < t; n++) this.add(Ud(this, e[n], void 0, n))
                    }
                }
                notifyComplete(e) {
                    0 == (this.active -= 1) && this.destination.complete()
                }
                notifyNext(e, t, n) {
                    const r = this.values,
                        s = this.toRespond ? r[n] === $d ? --this.toRespond : this.toRespond : 0;
                    r[n] = t, 0 === s && (this.resultSelector ? this._tryResultSelector(r) : this.destination.next(r.slice()))
                }
                _tryResultSelector(e) {
                    let t;
                    try {
                        t = this.resultSelector.apply(this, e)
                    } catch (n) {
                        return void this.destination.error(n)
                    }
                    this.destination.next(t)
                }
            }
            const Gd = (() => {
                function e() {
                    return Error.call(this), this.message = "no elements in sequence", this.name = "EmptyError", this
                }
                return e.prototype = Object.create(Error.prototype), e
            })();

            function Wd(...e) {
                return z(1)(Ld(...e))
            }
            const Kd = new b(e => e.complete());

            function Zd(e) {
                return e ? function(e) {
                    return new b(t => e.schedule(() => t.complete()))
                }(e) : Kd
            }

            function Qd(e) {
                return new b(t => {
                    let n;
                    try {
                        n = e()
                    } catch (r) {
                        return void t.error(r)
                    }
                    return (n ? N(n) : Zd()).subscribe(t)
                })
            }

            function Yd(e, t) {
                return "function" == typeof t ? n => n.pipe(Yd((n, r) => N(e(n, r)).pipe(k((e, s) => t(n, e, r, s))))) : t => t.lift(new Jd(e))
            }
            class Jd {
                constructor(e) {
                    this.project = e
                }
                call(e, t) {
                    return t.subscribe(new Xd(e, this.project))
                }
            }
            class Xd extends j {
                constructor(e, t) {
                    super(e), this.project = t, this.index = 0
                }
                _next(e) {
                    let t;
                    const n = this.index++;
                    try {
                        t = this.project(e, n)
                    } catch (r) {
                        return void this.destination.error(r)
                    }
                    this._innerSub(t)
                }
                _innerSub(e) {
                    const t = this.innerSubscription;
                    t && t.unsubscribe();
                    const n = new L(this),
                        r = this.destination;
                    r.add(n), this.innerSubscription = B(e, n), this.innerSubscription !== n && r.add(this.innerSubscription)
                }
                _complete() {
                    const {
                        innerSubscription: e
                    } = this;
                    e && !e.closed || super._complete(), this.unsubscribe()
                }
                _unsubscribe() {
                    this.innerSubscription = void 0
                }
                notifyComplete() {
                    this.innerSubscription = void 0, this.isStopped && super._complete()
                }
                notifyNext(e) {
                    this.destination.next(e)
                }
            }
            const ep = (() => {
                function e() {
                    return Error.call(this), this.message = "argument out of range", this.name = "ArgumentOutOfRangeError", this
                }
                return e.prototype = Object.create(Error.prototype), e
            })();

            function tp(e) {
                return t => 0 === e ? Zd() : t.lift(new np(e))
            }
            class np {
                constructor(e) {
                    if (this.total = e, this.total < 0) throw new ep
                }
                call(e, t) {
                    return t.subscribe(new rp(e, this.total))
                }
            }
            class rp extends f {
                constructor(e, t) {
                    super(e), this.total = t, this.count = 0
                }
                _next(e) {
                    const t = this.total,
                        n = ++this.count;
                    n <= t && (this.destination.next(e), n === t && (this.destination.complete(), this.unsubscribe()))
                }
            }

            function sp(...e) {
                const t = e[e.length - 1];
                return E(t) ? (e.pop(), n => Wd(e, n, t)) : t => Wd(e, t)
            }

            function ip(e, t) {
                let n = !1;
                return arguments.length >= 2 && (n = !0),
                    function(r) {
                        return r.lift(new op(e, t, n))
                    }
            }
            class op {
                constructor(e, t, n = !1) {
                    this.accumulator = e, this.seed = t, this.hasSeed = n
                }
                call(e, t) {
                    return t.subscribe(new ap(e, this.accumulator, this.seed, this.hasSeed))
                }
            }
            class ap extends f {
                constructor(e, t, n, r) {
                    super(e), this.accumulator = t, this._seed = n, this.hasSeed = r, this.index = 0
                }
                get seed() {
                    return this._seed
                }
                set seed(e) {
                    this.hasSeed = !0, this._seed = e
                }
                _next(e) {
                    if (this.hasSeed) return this._tryNext(e);
                    this.seed = e, this.destination.next(e)
                }
                _tryNext(e) {
                    const t = this.index++;
                    let n;
                    try {
                        n = this.accumulator(this.seed, e, t)
                    } catch (r) {
                        this.destination.error(r)
                    }
                    this.seed = n, this.destination.next(n)
                }
            }

            function lp(e, t) {
                return function(n) {
                    return n.lift(new up(e, t))
                }
            }
            class up {
                constructor(e, t) {
                    this.predicate = e, this.thisArg = t
                }
                call(e, t) {
                    return t.subscribe(new cp(e, this.predicate, this.thisArg))
                }
            }
            class cp extends f {
                constructor(e, t, n) {
                    super(e), this.predicate = t, this.thisArg = n, this.count = 0
                }
                _next(e) {
                    let t;
                    try {
                        t = this.predicate.call(this.thisArg, e, this.count++)
                    } catch (n) {
                        return void this.destination.error(n)
                    }
                    t && this.destination.next(e)
                }
            }

            function hp(e) {
                return function(t) {
                    const n = new dp(e),
                        r = t.lift(n);
                    return n.caught = r
                }
            }
            class dp {
                constructor(e) {
                    this.selector = e
                }
                call(e, t) {
                    return t.subscribe(new pp(e, this.selector, this.caught))
                }
            }
            class pp extends j {
                constructor(e, t, n) {
                    super(e), this.selector = t, this.caught = n
                }
                error(e) {
                    if (!this.isStopped) {
                        let n;
                        try {
                            n = this.selector(e, this.caught)
                        } catch (t) {
                            return void super.error(t)
                        }
                        this._unsubscribeAndRecycle();
                        const r = new L(this);
                        this.add(r);
                        const s = B(n, r);
                        s !== r && this.add(s)
                    }
                }
            }

            function fp(e, t) {
                return V(e, t, 1)
            }

            function gp(e) {
                return function(t) {
                    return 0 === e ? Zd() : t.lift(new mp(e))
                }
            }
            class mp {
                constructor(e) {
                    if (this.total = e, this.total < 0) throw new ep
                }
                call(e, t) {
                    return t.subscribe(new yp(e, this.total))
                }
            }
            class yp extends f {
                constructor(e, t) {
                    super(e), this.total = t, this.ring = new Array, this.count = 0
                }
                _next(e) {
                    const t = this.ring,
                        n = this.total,
                        r = this.count++;
                    t.length < n ? t.push(e) : t[r % n] = e
                }
                _complete() {
                    const e = this.destination;
                    let t = this.count;
                    if (t > 0) {
                        const n = this.count >= this.total ? this.total : this.count,
                            r = this.ring;
                        for (let s = 0; s < n; s++) {
                            const s = t++ % n;
                            e.next(r[s])
                        }
                    }
                    e.complete()
                }
            }

            function bp(e = wp) {
                return t => t.lift(new vp(e))
            }
            class vp {
                constructor(e) {
                    this.errorFactory = e
                }
                call(e, t) {
                    return t.subscribe(new _p(e, this.errorFactory))
                }
            }
            class _p extends f {
                constructor(e, t) {
                    super(e), this.errorFactory = t, this.hasValue = !1
                }
                _next(e) {
                    this.hasValue = !0, this.destination.next(e)
                }
                _complete() {
                    if (this.hasValue) return this.destination.complete(); {
                        let t;
                        try {
                            t = this.errorFactory()
                        } catch (e) {
                            t = e
                        }
                        this.destination.error(t)
                    }
                }
            }

            function wp() {
                return new Gd
            }

            function Cp(e = null) {
                return t => t.lift(new Sp(e))
            }
            class Sp {
                constructor(e) {
                    this.defaultValue = e
                }
                call(e, t) {
                    return t.subscribe(new xp(e, this.defaultValue))
                }
            }
            class xp extends f {
                constructor(e, t) {
                    super(e), this.defaultValue = t, this.isEmpty = !0
                }
                _next(e) {
                    this.isEmpty = !1, this.destination.next(e)
                }
                _complete() {
                    this.isEmpty && this.destination.next(this.defaultValue), this.destination.complete()
                }
            }

            function Ep(e, t) {
                const n = arguments.length >= 2;
                return r => r.pipe(e ? lp((t, n) => e(t, n, r)) : y, tp(1), n ? Cp(t) : bp(() => new Gd))
            }

            function kp() {}

            function Ap(e, t, n) {
                return function(r) {
                    return r.lift(new Dp(e, t, n))
                }
            }
            class Dp {
                constructor(e, t, n) {
                    this.nextOrObserver = e, this.error = t, this.complete = n
                }
                call(e, t) {
                    return t.subscribe(new Tp(e, this.nextOrObserver, this.error, this.complete))
                }
            }
            class Tp extends f {
                constructor(e, t, n, s) {
                    super(e), this._tapNext = kp, this._tapError = kp, this._tapComplete = kp, this._tapError = n || kp, this._tapComplete = s || kp, r(t) ? (this._context = this, this._tapNext = t) : t && (this._context = t, this._tapNext = t.next || kp, this._tapError = t.error || kp, this._tapComplete = t.complete || kp)
                }
                _next(e) {
                    try {
                        this._tapNext.call(this._context, e)
                    } catch (t) {
                        return void this.destination.error(t)
                    }
                    this.destination.next(e)
                }
                _error(e) {
                    try {
                        this._tapError.call(this._context, e)
                    } catch (e) {
                        return void this.destination.error(e)
                    }
                    this.destination.error(e)
                }
                _complete() {
                    try {
                        this._tapComplete.call(this._context)
                    } catch (e) {
                        return void this.destination.error(e)
                    }
                    return this.destination.complete()
                }
            }

            function Op(e) {
                return t => t.lift(new Fp(e))
            }
            class Fp {
                constructor(e) {
                    this.callback = e
                }
                call(e, t) {
                    return t.subscribe(new Pp(e, this.callback))
                }
            }
            class Pp extends f {
                constructor(e, t) {
                    super(e), this.add(new h(t))
                }
            }
            class Ip {
                constructor(e, t) {
                    this.id = e, this.url = t
                }
            }
            class Mp extends Ip {
                constructor(e, t, n = "imperative", r = null) {
                    super(e, t), this.navigationTrigger = n, this.restoredState = r
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`
                }
            }
            class Rp extends Ip {
                constructor(e, t, n) {
                    super(e, t), this.urlAfterRedirects = n
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`
                }
            }
            class Np extends Ip {
                constructor(e, t, n) {
                    super(e, t), this.reason = n
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`
                }
            }
            class Lp extends Ip {
                constructor(e, t, n) {
                    super(e, t), this.error = n
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`
                }
            }
            class jp extends Ip {
                constructor(e, t, n, r) {
                    super(e, t), this.urlAfterRedirects = n, this.state = r
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class Bp extends Ip {
                constructor(e, t, n, r) {
                    super(e, t), this.urlAfterRedirects = n, this.state = r
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class Vp extends Ip {
                constructor(e, t, n, r, s) {
                    super(e, t), this.urlAfterRedirects = n, this.state = r, this.shouldActivate = s
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`
                }
            }
            class Up extends Ip {
                constructor(e, t, n, r) {
                    super(e, t), this.urlAfterRedirects = n, this.state = r
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class $p extends Ip {
                constructor(e, t, n, r) {
                    super(e, t), this.urlAfterRedirects = n, this.state = r
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class Hp {
                constructor(e) {
                    this.route = e
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`
                }
            }
            class zp {
                constructor(e) {
                    this.route = e
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`
                }
            }
            class qp {
                constructor(e) {
                    this.snapshot = e
                }
                toString() {
                    return `ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class Gp {
                constructor(e) {
                    this.snapshot = e
                }
                toString() {
                    return `ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class Wp {
                constructor(e) {
                    this.snapshot = e
                }
                toString() {
                    return `ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class Kp {
                constructor(e) {
                    this.snapshot = e
                }
                toString() {
                    return `ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class Zp {
                constructor(e, t, n) {
                    this.routerEvent = e, this.position = t, this.anchor = n
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`
                }
            }
            const Qp = "primary";
            class Yp {
                constructor(e) {
                    this.params = e || {}
                }
                has(e) {
                    return Object.prototype.hasOwnProperty.call(this.params, e)
                }
                get(e) {
                    if (this.has(e)) {
                        const t = this.params[e];
                        return Array.isArray(t) ? t[0] : t
                    }
                    return null
                }
                getAll(e) {
                    if (this.has(e)) {
                        const t = this.params[e];
                        return Array.isArray(t) ? t : [t]
                    }
                    return []
                }
                get keys() {
                    return Object.keys(this.params)
                }
            }

            function Jp(e) {
                return new Yp(e)
            }

            function Xp(e) {
                const t = Error("NavigationCancelingError: " + e);
                return t.ngNavigationCancelingError = !0, t
            }

            function ef(e, t, n) {
                const r = n.path.split("/");
                if (r.length > e.length) return null;
                if ("full" === n.pathMatch && (t.hasChildren() || r.length < e.length)) return null;
                const s = {};
                for (let i = 0; i < r.length; i++) {
                    const t = r[i],
                        n = e[i];
                    if (t.startsWith(":")) s[t.substring(1)] = n;
                    else if (t !== n.path) return null
                }
                return {
                    consumed: e.slice(0, r.length),
                    posParams: s
                }
            }

            function tf(e, t) {
                const n = e ? Object.keys(e) : void 0,
                    r = t ? Object.keys(t) : void 0;
                if (!n || !r || n.length != r.length) return !1;
                let s;
                for (let i = 0; i < n.length; i++)
                    if (s = n[i], !nf(e[s], t[s])) return !1;
                return !0
            }

            function nf(e, t) {
                if (Array.isArray(e) && Array.isArray(t)) {
                    if (e.length !== t.length) return !1;
                    const n = [...e].sort(),
                        r = [...t].sort();
                    return n.every((e, t) => r[t] === e)
                }
                return e === t
            }

            function rf(e) {
                return Array.prototype.concat.apply([], e)
            }

            function sf(e) {
                return e.length > 0 ? e[e.length - 1] : null
            }

            function of(e, t) {
                for (const n in e) e.hasOwnProperty(n) && t(e[n], n)
            }

            function af(e) {
                return zo(e) ? e : $o(e) ? N(Promise.resolve(e)) : Ld(e)
            }

            function lf(e, t, n) {
                return n ? function(e, t) {
                    return tf(e, t)
                }(e.queryParams, t.queryParams) && uf(e.root, t.root) : function(e, t) {
                    return Object.keys(t).length <= Object.keys(e).length && Object.keys(t).every(n => nf(e[n], t[n]))
                }(e.queryParams, t.queryParams) && cf(e.root, t.root)
            }

            function uf(e, t) {
                if (!gf(e.segments, t.segments)) return !1;
                if (e.numberOfChildren !== t.numberOfChildren) return !1;
                for (const n in t.children) {
                    if (!e.children[n]) return !1;
                    if (!uf(e.children[n], t.children[n])) return !1
                }
                return !0
            }

            function cf(e, t) {
                return hf(e, t, t.segments)
            }

            function hf(e, t, n) {
                if (e.segments.length > n.length) return !!gf(e.segments.slice(0, n.length), n) && !t.hasChildren();
                if (e.segments.length === n.length) {
                    if (!gf(e.segments, n)) return !1;
                    for (const n in t.children) {
                        if (!e.children[n]) return !1;
                        if (!cf(e.children[n], t.children[n])) return !1
                    }
                    return !0
                } {
                    const r = n.slice(0, e.segments.length),
                        s = n.slice(e.segments.length);
                    return !!gf(e.segments, r) && !!e.children.primary && hf(e.children.primary, t, s)
                }
            }
            class df {
                constructor(e, t, n) {
                    this.root = e, this.queryParams = t, this.fragment = n
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = Jp(this.queryParams)), this._queryParamMap
                }
                toString() {
                    return bf.serialize(this)
                }
            }
            class pf {
                constructor(e, t) {
                    this.segments = e, this.children = t, this.parent = null, of(t, (e, t) => e.parent = this)
                }
                hasChildren() {
                    return this.numberOfChildren > 0
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length
                }
                toString() {
                    return vf(this)
                }
            }
            class ff {
                constructor(e, t) {
                    this.path = e, this.parameters = t
                }
                get parameterMap() {
                    return this._parameterMap || (this._parameterMap = Jp(this.parameters)), this._parameterMap
                }
                toString() {
                    return kf(this)
                }
            }

            function gf(e, t) {
                return e.length === t.length && e.every((e, n) => e.path === t[n].path)
            }
            class mf {}
            class yf {
                parse(e) {
                    const t = new Ff(e);
                    return new df(t.parseRootSegment(), t.parseQueryParams(), t.parseFragment())
                }
                serialize(e) {
                    var t;
                    return `/${_f(e.root,!0)}${function(e){const t=Object.keys(e).map(t=>{const n=e[t];return Array.isArray(n)?n.map(e=>`${Cf(t)}=${Cf(e)}`).join("&"):`${Cf(t)}=${Cf(n)}`});return t.length?` ? $ {
                        t.join("&")
                    }
                    `:""}(e.queryParams)}${"string"==typeof e.fragment?`#${t=e.fragment,encodeURI(t)}`:""}`
                }
            }
            const bf = new yf;

            function vf(e) {
                return e.segments.map(e => kf(e)).join("/")
            }

            function _f(e, t) {
                if (!e.hasChildren()) return vf(e);
                if (t) {
                    const t = e.children.primary ? _f(e.children.primary, !1) : "",
                        n = [];
                    return of(e.children, (e, t) => {
                        t !== Qp && n.push(`${t}:${_f(e,!1)}`)
                    }), n.length > 0 ? `${t}(${n.join("//")})` : t
                } {
                    const t = function(e, t) {
                        let n = [];
                        return of(e.children, (e, r) => {
                            r === Qp && (n = n.concat(t(e, r)))
                        }), of(e.children, (e, r) => {
                            r !== Qp && (n = n.concat(t(e, r)))
                        }), n
                    }(e, (t, n) => n === Qp ? [_f(e.children.primary, !1)] : [`${n}:${_f(t,!1)}`]);
                    return 1 === Object.keys(e.children).length && null != e.children.primary ? `${vf(e)}/${t[0]}` : `${vf(e)}/(${t.join("//")})`
                }
            }

            function wf(e) {
                return encodeURIComponent(e).replace(/%40/g, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",")
            }

            function Cf(e) {
                return wf(e).replace(/%3B/gi, ";")
            }

            function Sf(e) {
                return wf(e).replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/%26/gi, "&")
            }

            function xf(e) {
                return decodeURIComponent(e)
            }

            function Ef(e) {
                return xf(e.replace(/\+/g, "%20"))
            }

            function kf(e) {
                return `${Sf(e.path)}${t=e.parameters,Object.keys(t).map(e=>`;${Sf(e)}=${Sf(t[e])}`).join("")}`;
                var t
            }
            const Af = /^[^\/()?;=#]+/;

            function Df(e) {
                const t = e.match(Af);
                return t ? t[0] : ""
            }
            const Tf = /^[^=?&#]+/,
                Of = /^[^?&#]+/;
            class Ff {
                constructor(e) {
                    this.url = e, this.remaining = e
                }
                parseRootSegment() {
                    return this.consumeOptional("/"), "" === this.remaining || this.peekStartsWith("?") || this.peekStartsWith("#") ? new pf([], {}) : new pf([], this.parseChildren())
                }
                parseQueryParams() {
                    const e = {};
                    if (this.consumeOptional("?"))
                        do {
                            this.parseQueryParam(e)
                        } while (this.consumeOptional("&"));
                    return e
                }
                parseFragment() {
                    return this.consumeOptional("#") ? decodeURIComponent(this.remaining) : null
                }
                parseChildren() {
                    if ("" === this.remaining) return {};
                    this.consumeOptional("/");
                    const e = [];
                    for (this.peekStartsWith("(") || e.push(this.parseSegment()); this.peekStartsWith("/") && !this.peekStartsWith("//") && !this.peekStartsWith("/(");) this.capture("/"), e.push(this.parseSegment());
                    let t = {};
                    this.peekStartsWith("/(") && (this.capture("/"), t = this.parseParens(!0));
                    let n = {};
                    return this.peekStartsWith("(") && (n = this.parseParens(!1)), (e.length > 0 || Object.keys(t).length > 0) && (n.primary = new pf(e, t)), n
                }
                parseSegment() {
                    const e = Df(this.remaining);
                    if ("" === e && this.peekStartsWith(";")) throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);
                    return this.capture(e), new ff(xf(e), this.parseMatrixParams())
                }
                parseMatrixParams() {
                    const e = {};
                    for (; this.consumeOptional(";");) this.parseParam(e);
                    return e
                }
                parseParam(e) {
                    const t = Df(this.remaining);
                    if (!t) return;
                    this.capture(t);
                    let n = "";
                    if (this.consumeOptional("=")) {
                        const e = Df(this.remaining);
                        e && (n = e, this.capture(n))
                    }
                    e[xf(t)] = xf(n)
                }
                parseQueryParam(e) {
                    const t = function(e) {
                        const t = e.match(Tf);
                        return t ? t[0] : ""
                    }(this.remaining);
                    if (!t) return;
                    this.capture(t);
                    let n = "";
                    if (this.consumeOptional("=")) {
                        const e = function(e) {
                            const t = e.match(Of);
                            return t ? t[0] : ""
                        }(this.remaining);
                        e && (n = e, this.capture(n))
                    }
                    const r = Ef(t),
                        s = Ef(n);
                    if (e.hasOwnProperty(r)) {
                        let t = e[r];
                        Array.isArray(t) || (t = [t], e[r] = t), t.push(s)
                    } else e[r] = s
                }
                parseParens(e) {
                    const t = {};
                    for (this.capture("("); !this.consumeOptional(")") && this.remaining.length > 0;) {
                        const n = Df(this.remaining),
                            r = this.remaining[n.length];
                        if ("/" !== r && ")" !== r && ";" !== r) throw new Error(`Cannot parse url '${this.url}'`);
                        let s;
                        n.indexOf(":") > -1 ? (s = n.substr(0, n.indexOf(":")), this.capture(s), this.capture(":")) : e && (s = Qp);
                        const i = this.parseChildren();
                        t[s] = 1 === Object.keys(i).length ? i.primary : new pf([], i), this.consumeOptional("//")
                    }
                    return t
                }
                peekStartsWith(e) {
                    return this.remaining.startsWith(e)
                }
                consumeOptional(e) {
                    return !!this.peekStartsWith(e) && (this.remaining = this.remaining.substring(e.length), !0)
                }
                capture(e) {
                    if (!this.consumeOptional(e)) throw new Error(`Expected "${e}".`)
                }
            }
            class Pf {
                constructor(e) {
                    this._root = e
                }
                get root() {
                    return this._root.value
                }
                parent(e) {
                    const t = this.pathFromRoot(e);
                    return t.length > 1 ? t[t.length - 2] : null
                }
                children(e) {
                    const t = If(e, this._root);
                    return t ? t.children.map(e => e.value) : []
                }
                firstChild(e) {
                    const t = If(e, this._root);
                    return t && t.children.length > 0 ? t.children[0].value : null
                }
                siblings(e) {
                    const t = Mf(e, this._root);
                    return t.length < 2 ? [] : t[t.length - 2].children.map(e => e.value).filter(t => t !== e)
                }
                pathFromRoot(e) {
                    return Mf(e, this._root).map(e => e.value)
                }
            }

            function If(e, t) {
                if (e === t.value) return t;
                for (const n of t.children) {
                    const t = If(e, n);
                    if (t) return t
                }
                return null
            }

            function Mf(e, t) {
                if (e === t.value) return [t];
                for (const n of t.children) {
                    const r = Mf(e, n);
                    if (r.length) return r.unshift(t), r
                }
                return []
            }
            class Rf {
                constructor(e, t) {
                    this.value = e, this.children = t
                }
                toString() {
                    return `TreeNode(${this.value})`
                }
            }

            function Nf(e) {
                const t = {};
                return e && e.children.forEach(e => t[e.value.outlet] = e), t
            }
            class Lf extends Pf {
                constructor(e, t) {
                    super(e), this.snapshot = t, Hf(this, e)
                }
                toString() {
                    return this.snapshot.toString()
                }
            }

            function jf(e, t) {
                const n = function(e, t) {
                        const n = new Uf([], {}, {}, "", {}, Qp, t, null, e.root, -1, {});
                        return new $f("", new Rf(n, []))
                    }(e, t),
                    r = new jd([new ff("", {})]),
                    s = new jd({}),
                    i = new jd({}),
                    o = new jd({}),
                    a = new jd(""),
                    l = new Bf(r, s, o, a, i, Qp, t, n.root);
                return l.snapshot = n.root, new Lf(new Rf(l, []), n)
            }
            class Bf {
                constructor(e, t, n, r, s, i, o, a) {
                    this.url = e, this.params = t, this.queryParams = n, this.fragment = r, this.data = s, this.outlet = i, this.component = o, this._futureSnapshot = a
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig
                }
                get root() {
                    return this._routerState.root
                }
                get parent() {
                    return this._routerState.parent(this)
                }
                get firstChild() {
                    return this._routerState.firstChild(this)
                }
                get children() {
                    return this._routerState.children(this)
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this)
                }
                get paramMap() {
                    return this._paramMap || (this._paramMap = this.params.pipe(k(e => Jp(e)))), this._paramMap
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(k(e => Jp(e)))), this._queryParamMap
                }
                toString() {
                    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`
                }
            }

            function Vf(e, t = "emptyOnly") {
                const n = e.pathFromRoot;
                let r = 0;
                if ("always" !== t)
                    for (r = n.length - 1; r >= 1;) {
                        const e = n[r],
                            t = n[r - 1];
                        if (e.routeConfig && "" === e.routeConfig.path) r--;
                        else {
                            if (t.component) break;
                            r--
                        }
                    }
                return function(e) {
                    return e.reduce((e, t) => ({
                        params: Object.assign(Object.assign({}, e.params), t.params),
                        data: Object.assign(Object.assign({}, e.data), t.data),
                        resolve: Object.assign(Object.assign({}, e.resolve), t._resolvedData)
                    }), {
                        params: {},
                        data: {},
                        resolve: {}
                    })
                }(n.slice(r))
            }
            class Uf {
                constructor(e, t, n, r, s, i, o, a, l, u, c) {
                    this.url = e, this.params = t, this.queryParams = n, this.fragment = r, this.data = s, this.outlet = i, this.component = o, this.routeConfig = a, this._urlSegment = l, this._lastPathIndex = u, this._resolve = c
                }
                get root() {
                    return this._routerState.root
                }
                get parent() {
                    return this._routerState.parent(this)
                }
                get firstChild() {
                    return this._routerState.firstChild(this)
                }
                get children() {
                    return this._routerState.children(this)
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this)
                }
                get paramMap() {
                    return this._paramMap || (this._paramMap = Jp(this.params)), this._paramMap
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = Jp(this.queryParams)), this._queryParamMap
                }
                toString() {
                    return `Route(url:'${this.url.map(e=>e.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`
                }
            }
            class $f extends Pf {
                constructor(e, t) {
                    super(t), this.url = e, Hf(this, t)
                }
                toString() {
                    return zf(this._root)
                }
            }

            function Hf(e, t) {
                t.value._routerState = e, t.children.forEach(t => Hf(e, t))
            }

            function zf(e) {
                const t = e.children.length > 0 ? ` { ${e.children.map(zf).join(", ")} } ` : "";
                return `${e.value}${t}`
            }

            function qf(e) {
                if (e.snapshot) {
                    const t = e.snapshot,
                        n = e._futureSnapshot;
                    e.snapshot = n, tf(t.queryParams, n.queryParams) || e.queryParams.next(n.queryParams), t.fragment !== n.fragment && e.fragment.next(n.fragment), tf(t.params, n.params) || e.params.next(n.params),
                        function(e, t) {
                            if (e.length !== t.length) return !1;
                            for (let n = 0; n < e.length; ++n)
                                if (!tf(e[n], t[n])) return !1;
                            return !0
                        }(t.url, n.url) || e.url.next(n.url), tf(t.data, n.data) || e.data.next(n.data)
                } else e.snapshot = e._futureSnapshot, e.data.next(e._futureSnapshot.data)
            }

            function Gf(e, t) {
                var n, r;
                return tf(e.params, t.params) && gf(n = e.url, r = t.url) && n.every((e, t) => tf(e.parameters, r[t].parameters)) && !(!e.parent != !t.parent) && (!e.parent || Gf(e.parent, t.parent))
            }

            function Wf(e, t, n) {
                if (n && e.shouldReuseRoute(t.value, n.value.snapshot)) {
                    const r = n.value;
                    r._futureSnapshot = t.value;
                    const s = function(e, t, n) {
                        return t.children.map(t => {
                            for (const r of n.children)
                                if (e.shouldReuseRoute(t.value, r.value.snapshot)) return Wf(e, t, r);
                            return Wf(e, t)
                        })
                    }(e, t, n);
                    return new Rf(r, s)
                } {
                    if (e.shouldAttach(t.value)) {
                        const n = e.retrieve(t.value);
                        if (null !== n) {
                            const e = n.route;
                            return Kf(t, e), e
                        }
                    }
                    const n = new Bf(new jd((r = t.value).url), new jd(r.params), new jd(r.queryParams), new jd(r.fragment), new jd(r.data), r.outlet, r.component, r),
                        s = t.children.map(t => Wf(e, t));
                    return new Rf(n, s)
                }
                var r
            }

            function Kf(e, t) {
                if (e.value.routeConfig !== t.value.routeConfig) throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");
                if (e.children.length !== t.children.length) throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");
                t.value._futureSnapshot = e.value;
                for (let n = 0; n < e.children.length; ++n) Kf(e.children[n], t.children[n])
            }

            function Zf(e) {
                return "object" == typeof e && null != e && !e.outlets && !e.segmentPath
            }

            function Qf(e) {
                return "object" == typeof e && null != e && e.outlets
            }

            function Yf(e, t, n, r, s) {
                let i = {};
                return r && of(r, (e, t) => {
                    i[t] = Array.isArray(e) ? e.map(e => `${e}`) : `${e}`
                }), new df(n.root === e ? t : Jf(n.root, e, t), i, s)
            }

            function Jf(e, t, n) {
                const r = {};
                return of(e.children, (e, s) => {
                    r[s] = e === t ? n : Jf(e, t, n)
                }), new pf(e.segments, r)
            }
            class Xf {
                constructor(e, t, n) {
                    if (this.isAbsolute = e, this.numberOfDoubleDots = t, this.commands = n, e && n.length > 0 && Zf(n[0])) throw new Error("Root segment cannot have matrix parameters");
                    const r = n.find(Qf);
                    if (r && r !== sf(n)) throw new Error("{outlets:{}} has to be the last command")
                }
                toRoot() {
                    return this.isAbsolute && 1 === this.commands.length && "/" == this.commands[0]
                }
            }
            class eg {
                constructor(e, t, n) {
                    this.segmentGroup = e, this.processChildren = t, this.index = n
                }
            }

            function tg(e, t, n) {
                if (e || (e = new pf([], {})), 0 === e.segments.length && e.hasChildren()) return ng(e, t, n);
                const r = function(e, t, n) {
                        let r = 0,
                            s = t;
                        const i = {
                            match: !1,
                            pathIndex: 0,
                            commandIndex: 0
                        };
                        for (; s < e.segments.length;) {
                            if (r >= n.length) return i;
                            const t = e.segments[s],
                                o = n[r];
                            if (Qf(o)) break;
                            const a = `${o}`,
                                l = r < n.length - 1 ? n[r + 1] : null;
                            if (s > 0 && void 0 === a) break;
                            if (a && l && "object" == typeof l && void 0 === l.outlets) {
                                if (!og(a, l, t)) return i;
                                r += 2
                            } else {
                                if (!og(a, {}, t)) return i;
                                r++
                            }
                            s++
                        }
                        return {
                            match: !0,
                            pathIndex: s,
                            commandIndex: r
                        }
                    }(e, t, n),
                    s = n.slice(r.commandIndex);
                if (r.match && r.pathIndex < e.segments.length) {
                    const t = new pf(e.segments.slice(0, r.pathIndex), {});
                    return t.children.primary = new pf(e.segments.slice(r.pathIndex), e.children), ng(t, 0, s)
                }
                return r.match && 0 === s.length ? new pf(e.segments, {}) : r.match && !e.hasChildren() ? rg(e, t, n) : r.match ? ng(e, 0, s) : rg(e, t, n)
            }

            function ng(e, t, n) {
                if (0 === n.length) return new pf(e.segments, {}); {
                    const r = function(e) {
                            return Qf(e[0]) ? e[0].outlets : {
                                [Qp]: e
                            }
                        }(n),
                        s = {};
                    return of(r, (n, r) => {
                        "string" == typeof n && (n = [n]), null !== n && (s[r] = tg(e.children[r], t, n))
                    }), of(e.children, (e, t) => {
                        void 0 === r[t] && (s[t] = e)
                    }), new pf(e.segments, s)
                }
            }

            function rg(e, t, n) {
                const r = e.segments.slice(0, t);
                let s = 0;
                for (; s < n.length;) {
                    const i = n[s];
                    if (Qf(i)) {
                        const e = sg(i.outlets);
                        return new pf(r, e)
                    }
                    if (0 === s && Zf(n[0])) {
                        r.push(new ff(e.segments[t].path, ig(n[0]))), s++;
                        continue
                    }
                    const o = Qf(i) ? i.outlets.primary : `${i}`,
                        a = s < n.length - 1 ? n[s + 1] : null;
                    o && a && Zf(a) ? (r.push(new ff(o, ig(a))), s += 2) : (r.push(new ff(o, {})), s++)
                }
                return new pf(r, {})
            }

            function sg(e) {
                const t = {};
                return of(e, (e, n) => {
                    "string" == typeof e && (e = [e]), null !== e && (t[n] = rg(new pf([], {}), 0, e))
                }), t
            }

            function ig(e) {
                const t = {};
                return of(e, (e, n) => t[n] = `${e}`), t
            }

            function og(e, t, n) {
                return e == n.path && tf(t, n.parameters)
            }
            class ag {
                constructor(e, t, n, r) {
                    this.routeReuseStrategy = e, this.futureState = t, this.currState = n, this.forwardEvent = r
                }
                activate(e) {
                    const t = this.futureState._root,
                        n = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(t, n, e), qf(this.futureState.root), this.activateChildRoutes(t, n, e)
                }
                deactivateChildRoutes(e, t, n) {
                    const r = Nf(t);
                    e.children.forEach(e => {
                        const t = e.value.outlet;
                        this.deactivateRoutes(e, r[t], n), delete r[t]
                    }), of(r, (e, t) => {
                        this.deactivateRouteAndItsChildren(e, n)
                    })
                }
                deactivateRoutes(e, t, n) {
                    const r = e.value,
                        s = t ? t.value : null;
                    if (r === s)
                        if (r.component) {
                            const s = n.getContext(r.outlet);
                            s && this.deactivateChildRoutes(e, t, s.children)
                        } else this.deactivateChildRoutes(e, t, n);
                    else s && this.deactivateRouteAndItsChildren(t, n)
                }
                deactivateRouteAndItsChildren(e, t) {
                    this.routeReuseStrategy.shouldDetach(e.value.snapshot) ? this.detachAndStoreRouteSubtree(e, t) : this.deactivateRouteAndOutlet(e, t)
                }
                detachAndStoreRouteSubtree(e, t) {
                    const n = t.getContext(e.value.outlet);
                    if (n && n.outlet) {
                        const t = n.outlet.detach(),
                            r = n.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(e.value.snapshot, {
                            componentRef: t,
                            route: e,
                            contexts: r
                        })
                    }
                }
                deactivateRouteAndOutlet(e, t) {
                    const n = t.getContext(e.value.outlet),
                        r = n && e.value.component ? n.children : t,
                        s = Nf(e);
                    for (const i of Object.keys(s)) this.deactivateRouteAndItsChildren(s[i], r);
                    n && n.outlet && (n.outlet.deactivate(), n.children.onOutletDeactivated(), n.attachRef = null, n.resolver = null, n.route = null)
                }
                activateChildRoutes(e, t, n) {
                    const r = Nf(t);
                    e.children.forEach(e => {
                        this.activateRoutes(e, r[e.value.outlet], n), this.forwardEvent(new Kp(e.value.snapshot))
                    }), e.children.length && this.forwardEvent(new Gp(e.value.snapshot))
                }
                activateRoutes(e, t, n) {
                    const r = e.value,
                        s = t ? t.value : null;
                    if (qf(r), r === s)
                        if (r.component) {
                            const s = n.getOrCreateContext(r.outlet);
                            this.activateChildRoutes(e, t, s.children)
                        } else this.activateChildRoutes(e, t, n);
                    else if (r.component) {
                        const t = n.getOrCreateContext(r.outlet);
                        if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
                            const e = this.routeReuseStrategy.retrieve(r.snapshot);
                            this.routeReuseStrategy.store(r.snapshot, null), t.children.onOutletReAttached(e.contexts), t.attachRef = e.componentRef, t.route = e.route.value, t.outlet && t.outlet.attach(e.componentRef, e.route.value), lg(e.route)
                        } else {
                            const n = function(e) {
                                    for (let t = e.parent; t; t = t.parent) {
                                        const e = t.routeConfig;
                                        if (e && e._loadedConfig) return e._loadedConfig;
                                        if (e && e.component) return null
                                    }
                                    return null
                                }(r.snapshot),
                                s = n ? n.module.componentFactoryResolver : null;
                            t.attachRef = null, t.route = r, t.resolver = s, t.outlet && t.outlet.activateWith(r, s), this.activateChildRoutes(e, null, t.children)
                        }
                    } else this.activateChildRoutes(e, null, n)
                }
            }

            function lg(e) {
                qf(e.value), e.children.forEach(lg)
            }
            class ug {
                constructor(e, t) {
                    this.routes = e, this.module = t
                }
            }

            function cg(e) {
                return "function" == typeof e
            }

            function hg(e) {
                return e instanceof df
            }
            const dg = Symbol("INITIAL_VALUE");

            function pg() {
                return Yd(e => Hd(e.map(e => e.pipe(tp(1), sp(dg)))).pipe(ip((e, t) => {
                    let n = !1;
                    return t.reduce((e, r, s) => {
                        if (e !== dg) return e;
                        if (r === dg && (n = !0), !n) {
                            if (!1 === r) return r;
                            if (s === t.length - 1 || hg(r)) return r
                        }
                        return e
                    }, e)
                }, dg), lp(e => e !== dg), k(e => hg(e) ? e : !0 === e), tp(1)))
            }
            let fg = (() => {
                class e {}
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["ng-component"]
                    ],
                    decls: 1,
                    vars: 0,
                    template: function(e, t) {
                        1 & e && Vo(0, "router-outlet")
                    },
                    directives: function() {
                        return [lm]
                    },
                    encapsulation: 2
                }), e
            })();

            function gg(e, t = "") {
                for (let n = 0; n < e.length; n++) {
                    const r = e[n];
                    mg(r, yg(t, r))
                }
            }

            function mg(e, t) {
                e.children && gg(e.children, t)
            }

            function yg(e, t) {
                return t ? e || t.path ? e && !t.path ? `${e}/` : !e && t.path ? t.path : `${e}/${t.path}` : "" : e
            }

            function bg(e) {
                const t = e.children && e.children.map(bg),
                    n = t ? Object.assign(Object.assign({}, e), {
                        children: t
                    }) : Object.assign({}, e);
                return !n.component && (t || n.loadChildren) && n.outlet && n.outlet !== Qp && (n.component = fg), n
            }

            function vg(e) {
                return e.outlet || Qp
            }

            function _g(e, t) {
                const n = e.filter(e => vg(e) === t);
                return n.push(...e.filter(e => vg(e) !== t)), n
            }
            const wg = {
                matched: !1,
                consumedSegments: [],
                lastChild: 0,
                parameters: {},
                positionalParamSegments: {}
            };

            function Cg(e, t, n) {
                var r;
                if ("" === t.path) return "full" === t.pathMatch && (e.hasChildren() || n.length > 0) ? Object.assign({}, wg) : {
                    matched: !0,
                    consumedSegments: [],
                    lastChild: 0,
                    parameters: {},
                    positionalParamSegments: {}
                };
                const s = (t.matcher || ef)(n, e, t);
                if (!s) return Object.assign({}, wg);
                const i = {};
                of(s.posParams, (e, t) => {
                    i[t] = e.path
                });
                const o = s.consumed.length > 0 ? Object.assign(Object.assign({}, i), s.consumed[s.consumed.length - 1].parameters) : i;
                return {
                    matched: !0,
                    consumedSegments: s.consumed,
                    lastChild: s.consumed.length,
                    parameters: o,
                    positionalParamSegments: null !== (r = s.posParams) && void 0 !== r ? r : {}
                }
            }

            function Sg(e, t, n, r, s = "corrected") {
                if (n.length > 0 && function(e, t, n) {
                        return n.some(n => xg(e, t, n) && vg(n) !== Qp)
                    }(e, n, r)) {
                    const s = new pf(t, function(e, t, n, r) {
                        const s = {};
                        s.primary = r, r._sourceSegment = e, r._segmentIndexShift = t.length;
                        for (const i of n)
                            if ("" === i.path && vg(i) !== Qp) {
                                const n = new pf([], {});
                                n._sourceSegment = e, n._segmentIndexShift = t.length, s[vg(i)] = n
                            } return s
                    }(e, t, r, new pf(n, e.children)));
                    return s._sourceSegment = e, s._segmentIndexShift = t.length, {
                        segmentGroup: s,
                        slicedSegments: []
                    }
                }
                if (0 === n.length && function(e, t, n) {
                        return n.some(n => xg(e, t, n))
                    }(e, n, r)) {
                    const i = new pf(e.segments, function(e, t, n, r, s, i) {
                        const o = {};
                        for (const a of r)
                            if (xg(e, n, a) && !s[vg(a)]) {
                                const n = new pf([], {});
                                n._sourceSegment = e, n._segmentIndexShift = "legacy" === i ? e.segments.length : t.length, o[vg(a)] = n
                            } return Object.assign(Object.assign({}, s), o)
                    }(e, t, n, r, e.children, s));
                    return i._sourceSegment = e, i._segmentIndexShift = t.length, {
                        segmentGroup: i,
                        slicedSegments: n
                    }
                }
                const i = new pf(e.segments, e.children);
                return i._sourceSegment = e, i._segmentIndexShift = t.length, {
                    segmentGroup: i,
                    slicedSegments: n
                }
            }

            function xg(e, t, n) {
                return (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) && "" === n.path
            }

            function Eg(e, t, n, r) {
                return !!(vg(e) === r || r !== Qp && xg(t, n, e)) && ("**" === e.path || Cg(t, e, n).matched)
            }

            function kg(e, t, n) {
                return 0 === t.length && !e.children[n]
            }
            class Ag {
                constructor(e) {
                    this.segmentGroup = e || null
                }
            }
            class Dg {
                constructor(e) {
                    this.urlTree = e
                }
            }

            function Tg(e) {
                return new b(t => t.error(new Ag(e)))
            }

            function Og(e) {
                return new b(t => t.error(new Dg(e)))
            }

            function Fg(e) {
                return new b(t => t.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${e}'`)))
            }
            class Pg {
                constructor(e, t, n, r, s) {
                    this.configLoader = t, this.urlSerializer = n, this.urlTree = r, this.config = s, this.allowRedirects = !0, this.ngModule = e.get(jl)
                }
                apply() {
                    const e = Sg(this.urlTree.root, [], [], this.config).segmentGroup,
                        t = new pf(e.segments, e.children);
                    return this.expandSegmentGroup(this.ngModule, this.config, t, Qp).pipe(k(e => this.createUrlTree(Ig(e), this.urlTree.queryParams, this.urlTree.fragment))).pipe(hp(e => {
                        if (e instanceof Dg) return this.allowRedirects = !1, this.match(e.urlTree);
                        if (e instanceof Ag) throw this.noMatchError(e);
                        throw e
                    }))
                }
                match(e) {
                    return this.expandSegmentGroup(this.ngModule, this.config, e.root, Qp).pipe(k(t => this.createUrlTree(Ig(t), e.queryParams, e.fragment))).pipe(hp(e => {
                        if (e instanceof Ag) throw this.noMatchError(e);
                        throw e
                    }))
                }
                noMatchError(e) {
                    return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`)
                }
                createUrlTree(e, t, n) {
                    const r = e.segments.length > 0 ? new pf([], {
                        [Qp]: e
                    }) : e;
                    return new df(r, t, n)
                }
                expandSegmentGroup(e, t, n, r) {
                    return 0 === n.segments.length && n.hasChildren() ? this.expandChildren(e, t, n).pipe(k(e => new pf([], e))) : this.expandSegment(e, n, t, n.segments, r, !0)
                }
                expandChildren(e, t, n) {
                    const r = [];
                    for (const s of Object.keys(n.children)) "primary" === s ? r.unshift(s) : r.push(s);
                    return N(r).pipe(fp(r => {
                        const s = n.children[r],
                            i = _g(t, r);
                        return this.expandSegmentGroup(e, i, s, r).pipe(k(e => ({
                            segment: e,
                            outlet: r
                        })))
                    }), ip((e, t) => (e[t.outlet] = t.segment, e), {}), function(e, t) {
                        const n = arguments.length >= 2;
                        return r => r.pipe(e ? lp((t, n) => e(t, n, r)) : y, gp(1), n ? Cp(t) : bp(() => new Gd))
                    }())
                }
                expandSegment(e, t, n, r, s, i) {
                    return N(n).pipe(fp(o => this.expandSegmentAgainstRoute(e, t, n, o, r, s, i).pipe(hp(e => {
                        if (e instanceof Ag) return Ld(null);
                        throw e
                    }))), Ep(e => !!e), hp((e, n) => {
                        if (e instanceof Gd || "EmptyError" === e.name) {
                            if (kg(t, r, s)) return Ld(new pf([], {}));
                            throw new Ag(t)
                        }
                        throw e
                    }))
                }
                expandSegmentAgainstRoute(e, t, n, r, s, i, o) {
                    return Eg(r, t, s, i) ? void 0 === r.redirectTo ? this.matchSegmentAgainstRoute(e, t, r, s, i) : o && this.allowRedirects ? this.expandSegmentAgainstRouteUsingRedirect(e, t, n, r, s, i) : Tg(t) : Tg(t)
                }
                expandSegmentAgainstRouteUsingRedirect(e, t, n, r, s, i) {
                    return "**" === r.path ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(e, n, r, i) : this.expandRegularSegmentAgainstRouteUsingRedirect(e, t, n, r, s, i)
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(e, t, n, r) {
                    const s = this.applyRedirectCommands([], n.redirectTo, {});
                    return n.redirectTo.startsWith("/") ? Og(s) : this.lineralizeSegments(n, s).pipe(V(n => {
                        const s = new pf(n, {});
                        return this.expandSegment(e, s, t, n, r, !1)
                    }))
                }
                expandRegularSegmentAgainstRouteUsingRedirect(e, t, n, r, s, i) {
                    const {
                        matched: o,
                        consumedSegments: a,
                        lastChild: l,
                        positionalParamSegments: u
                    } = Cg(t, r, s);
                    if (!o) return Tg(t);
                    const c = this.applyRedirectCommands(a, r.redirectTo, u);
                    return r.redirectTo.startsWith("/") ? Og(c) : this.lineralizeSegments(r, c).pipe(V(r => this.expandSegment(e, t, n, r.concat(s.slice(l)), i, !1)))
                }
                matchSegmentAgainstRoute(e, t, n, r, s) {
                    if ("**" === n.path) return n.loadChildren ? (n._loadedConfig ? Ld(n._loadedConfig) : this.configLoader.load(e.injector, n)).pipe(k(e => (n._loadedConfig = e, new pf(r, {})))) : Ld(new pf(r, {}));
                    const {
                        matched: i,
                        consumedSegments: o,
                        lastChild: a
                    } = Cg(t, n, r);
                    if (!i) return Tg(t);
                    const l = r.slice(a);
                    return this.getChildConfig(e, n, r).pipe(V(e => {
                        const r = e.module,
                            i = e.routes,
                            {
                                segmentGroup: a,
                                slicedSegments: u
                            } = Sg(t, o, l, i),
                            c = new pf(a.segments, a.children);
                        if (0 === u.length && c.hasChildren()) return this.expandChildren(r, i, c).pipe(k(e => new pf(o, e)));
                        if (0 === i.length && 0 === u.length) return Ld(new pf(o, {}));
                        const h = vg(n) === s;
                        return this.expandSegment(r, c, i, u, h ? Qp : s, !0).pipe(k(e => new pf(o.concat(e.segments), e.children)))
                    }))
                }
                getChildConfig(e, t, n) {
                    return t.children ? Ld(new ug(t.children, e)) : t.loadChildren ? void 0 !== t._loadedConfig ? Ld(t._loadedConfig) : this.runCanLoadGuards(e.injector, t, n).pipe(V(n => n ? this.configLoader.load(e.injector, t).pipe(k(e => (t._loadedConfig = e, e))) : function(e) {
                        return new b(t => t.error(Xp(`Cannot load children because the guard of the route "path: '${e.path}'" returned false`)))
                    }(t))) : Ld(new ug([], e))
                }
                runCanLoadGuards(e, t, n) {
                    const r = t.canLoad;
                    return r && 0 !== r.length ? Ld(r.map(r => {
                        const s = e.get(r);
                        let i;
                        if (function(e) {
                                return e && cg(e.canLoad)
                            }(s)) i = s.canLoad(t, n);
                        else {
                            if (!cg(s)) throw new Error("Invalid CanLoad guard");
                            i = s(t, n)
                        }
                        return af(i)
                    })).pipe(pg(), Ap(e => {
                        if (!hg(e)) return;
                        const t = Xp(`Redirecting to "${this.urlSerializer.serialize(e)}"`);
                        throw t.url = e, t
                    }), k(e => !0 === e)) : Ld(!0)
                }
                lineralizeSegments(e, t) {
                    let n = [],
                        r = t.root;
                    for (;;) {
                        if (n = n.concat(r.segments), 0 === r.numberOfChildren) return Ld(n);
                        if (r.numberOfChildren > 1 || !r.children.primary) return Fg(e.redirectTo);
                        r = r.children.primary
                    }
                }
                applyRedirectCommands(e, t, n) {
                    return this.applyRedirectCreatreUrlTree(t, this.urlSerializer.parse(t), e, n)
                }
                applyRedirectCreatreUrlTree(e, t, n, r) {
                    const s = this.createSegmentGroup(e, t.root, n, r);
                    return new df(s, this.createQueryParams(t.queryParams, this.urlTree.queryParams), t.fragment)
                }
                createQueryParams(e, t) {
                    const n = {};
                    return of(e, (e, r) => {
                        if ("string" == typeof e && e.startsWith(":")) {
                            const s = e.substring(1);
                            n[r] = t[s]
                        } else n[r] = e
                    }), n
                }
                createSegmentGroup(e, t, n, r) {
                    const s = this.createSegments(e, t.segments, n, r);
                    let i = {};
                    return of(t.children, (t, s) => {
                        i[s] = this.createSegmentGroup(e, t, n, r)
                    }), new pf(s, i)
                }
                createSegments(e, t, n, r) {
                    return t.map(t => t.path.startsWith(":") ? this.findPosParam(e, t, r) : this.findOrReturn(t, n))
                }
                findPosParam(e, t, n) {
                    const r = n[t.path.substring(1)];
                    if (!r) throw new Error(`Cannot redirect to '${e}'. Cannot find '${t.path}'.`);
                    return r
                }
                findOrReturn(e, t) {
                    let n = 0;
                    for (const r of t) {
                        if (r.path === e.path) return t.splice(n), r;
                        n++
                    }
                    return e
                }
            }

            function Ig(e) {
                const t = {};
                for (const n of Object.keys(e.children)) {
                    const r = Ig(e.children[n]);
                    (r.segments.length > 0 || r.hasChildren()) && (t[n] = r)
                }
                return function(e) {
                    if (1 === e.numberOfChildren && e.children.primary) {
                        const t = e.children.primary;
                        return new pf(e.segments.concat(t.segments), t.children)
                    }
                    return e
                }(new pf(e.segments, t))
            }
            class Mg {
                constructor(e) {
                    this.path = e, this.route = this.path[this.path.length - 1]
                }
            }
            class Rg {
                constructor(e, t) {
                    this.component = e, this.route = t
                }
            }

            function Ng(e, t, n) {
                const r = e._root;
                return jg(r, t ? t._root : null, n, [r.value])
            }

            function Lg(e, t, n) {
                const r = function(e) {
                    if (!e) return null;
                    for (let t = e.parent; t; t = t.parent) {
                        const e = t.routeConfig;
                        if (e && e._loadedConfig) return e._loadedConfig
                    }
                    return null
                }(t);
                return (r ? r.module.injector : n).get(e)
            }

            function jg(e, t, n, r, s = {
                canDeactivateChecks: [],
                canActivateChecks: []
            }) {
                const i = Nf(t);
                return e.children.forEach(e => {
                    ! function(e, t, n, r, s = {
                        canDeactivateChecks: [],
                        canActivateChecks: []
                    }) {
                        const i = e.value,
                            o = t ? t.value : null,
                            a = n ? n.getContext(e.value.outlet) : null;
                        if (o && i.routeConfig === o.routeConfig) {
                            const l = function(e, t, n) {
                                if ("function" == typeof n) return n(e, t);
                                switch (n) {
                                    case "pathParamsChange":
                                        return !gf(e.url, t.url);
                                    case "pathParamsOrQueryParamsChange":
                                        return !gf(e.url, t.url) || !tf(e.queryParams, t.queryParams);
                                    case "always":
                                        return !0;
                                    case "paramsOrQueryParamsChange":
                                        return !Gf(e, t) || !tf(e.queryParams, t.queryParams);
                                    case "paramsChange":
                                    default:
                                        return !Gf(e, t)
                                }
                            }(o, i, i.routeConfig.runGuardsAndResolvers);
                            l ? s.canActivateChecks.push(new Mg(r)) : (i.data = o.data, i._resolvedData = o._resolvedData), jg(e, t, i.component ? a ? a.children : null : n, r, s), l && a && a.outlet && a.outlet.isActivated && s.canDeactivateChecks.push(new Rg(a.outlet.component, o))
                        } else o && Bg(t, a, s), s.canActivateChecks.push(new Mg(r)), jg(e, null, i.component ? a ? a.children : null : n, r, s)
                    }(e, i[e.value.outlet], n, r.concat([e.value]), s), delete i[e.value.outlet]
                }), of(i, (e, t) => Bg(e, n.getContext(t), s)), s
            }

            function Bg(e, t, n) {
                const r = Nf(e),
                    s = e.value;
                of(r, (e, r) => {
                    Bg(e, s.component ? t ? t.children.getContext(r) : null : t, n)
                }), n.canDeactivateChecks.push(new Rg(s.component && t && t.outlet && t.outlet.isActivated ? t.outlet.component : null, s))
            }
            class Vg {}

            function Ug(e) {
                return new b(t => t.error(e))
            }
            class $g {
                constructor(e, t, n, r, s, i) {
                    this.rootComponentType = e, this.config = t, this.urlTree = n, this.url = r, this.paramsInheritanceStrategy = s, this.relativeLinkResolution = i
                }
                recognize() {
                    const e = Sg(this.urlTree.root, [], [], this.config.filter(e => void 0 === e.redirectTo), this.relativeLinkResolution).segmentGroup,
                        t = this.processSegmentGroup(this.config, e, Qp);
                    if (null === t) return null;
                    const n = new Uf([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, Qp, this.rootComponentType, null, this.urlTree.root, -1, {}),
                        r = new Rf(n, t),
                        s = new $f(this.url, r);
                    return this.inheritParamsAndData(s._root), s
                }
                inheritParamsAndData(e) {
                    const t = e.value,
                        n = Vf(t, this.paramsInheritanceStrategy);
                    t.params = Object.freeze(n.params), t.data = Object.freeze(n.data), e.children.forEach(e => this.inheritParamsAndData(e))
                }
                processSegmentGroup(e, t, n) {
                    return 0 === t.segments.length && t.hasChildren() ? this.processChildren(e, t) : this.processSegment(e, t, t.segments, n)
                }
                processChildren(e, t) {
                    const n = [];
                    for (const s of Object.keys(t.children)) {
                        const r = t.children[s],
                            i = _g(e, s),
                            o = this.processSegmentGroup(i, r, s);
                        if (null === o) return null;
                        n.push(...o)
                    }
                    const r = zg(n);
                    return r.sort((e, t) => e.value.outlet === Qp ? -1 : t.value.outlet === Qp ? 1 : e.value.outlet.localeCompare(t.value.outlet)), r
                }
                processSegment(e, t, n, r) {
                    for (const s of e) {
                        const e = this.processSegmentAgainstRoute(s, t, n, r);
                        if (null !== e) return e
                    }
                    return kg(t, n, r) ? [] : null
                }
                processSegmentAgainstRoute(e, t, n, r) {
                    if (e.redirectTo || !Eg(e, t, n, r)) return null;
                    let s, i = [],
                        o = [];
                    if ("**" === e.path) {
                        const r = n.length > 0 ? sf(n).parameters : {};
                        s = new Uf(n, r, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, Wg(e), vg(e), e.component, e, qg(t), Gg(t) + n.length, Kg(e))
                    } else {
                        const r = Cg(t, e, n);
                        if (!r.matched) return null;
                        i = r.consumedSegments, o = n.slice(r.lastChild), s = new Uf(i, r.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, Wg(e), vg(e), e.component, e, qg(t), Gg(t) + i.length, Kg(e))
                    }
                    const a = function(e) {
                            return e.children ? e.children : e.loadChildren ? e._loadedConfig.routes : []
                        }(e),
                        {
                            segmentGroup: l,
                            slicedSegments: u
                        } = Sg(t, i, o, a.filter(e => void 0 === e.redirectTo), this.relativeLinkResolution);
                    if (0 === u.length && l.hasChildren()) {
                        const e = this.processChildren(a, l);
                        return null === e ? null : [new Rf(s, e)]
                    }
                    if (0 === a.length && 0 === u.length) return [new Rf(s, [])];
                    const c = vg(e) === r,
                        h = this.processSegment(a, l, u, c ? Qp : r);
                    return null === h ? null : [new Rf(s, h)]
                }
            }

            function Hg(e) {
                const t = e.value.routeConfig;
                return t && "" === t.path && void 0 === t.redirectTo
            }

            function zg(e) {
                const t = [],
                    n = new Set;
                for (const r of e) {
                    if (!Hg(r)) {
                        t.push(r);
                        continue
                    }
                    const e = t.find(e => r.value.routeConfig === e.value.routeConfig);
                    void 0 !== e ? (e.children.push(...r.children), n.add(e)) : t.push(r)
                }
                for (const r of n) {
                    const e = zg(r.children);
                    t.push(new Rf(r.value, e))
                }
                return t.filter(e => !n.has(e))
            }

            function qg(e) {
                let t = e;
                for (; t._sourceSegment;) t = t._sourceSegment;
                return t
            }

            function Gg(e) {
                let t = e,
                    n = t._segmentIndexShift ? t._segmentIndexShift : 0;
                for (; t._sourceSegment;) t = t._sourceSegment, n += t._segmentIndexShift ? t._segmentIndexShift : 0;
                return n - 1
            }

            function Wg(e) {
                return e.data || {}
            }

            function Kg(e) {
                return e.resolve || {}
            }

            function Zg(e) {
                return Yd(t => {
                    const n = e(t);
                    return n ? N(n).pipe(k(() => t)) : Ld(t)
                })
            }
            class Qg extends class {
                shouldDetach(e) {
                    return !1
                }
                store(e, t) {}
                shouldAttach(e) {
                    return !1
                }
                retrieve(e) {
                    return null
                }
                shouldReuseRoute(e, t) {
                    return e.routeConfig === t.routeConfig
                }
            } {}
            const Yg = new Kn("ROUTES");
            class Jg {
                constructor(e, t, n, r) {
                    this.loader = e, this.compiler = t, this.onLoadStartListener = n, this.onLoadEndListener = r
                }
                load(e, t) {
                    if (t._loader$) return t._loader$;
                    this.onLoadStartListener && this.onLoadStartListener(t);
                    const n = this.loadModuleFactory(t.loadChildren).pipe(k(n => {
                        this.onLoadEndListener && this.onLoadEndListener(t);
                        const r = n.create(e);
                        return new ug(rf(r.injector.get(Yg, void 0, _e.Self | _e.Optional)).map(bg), r)
                    }), hp(e => {
                        throw t._loader$ = void 0, e
                    }));
                    return t._loader$ = new Z(n, () => new S).pipe(G()), t._loader$
                }
                loadModuleFactory(e) {
                    return "string" == typeof e ? N(this.loader.load(e)) : af(e()).pipe(V(e => e instanceof Bl ? Ld(e) : N(this.compiler.compileModuleAsync(e))))
                }
            }
            class Xg {
                constructor() {
                    this.outlet = null, this.route = null, this.resolver = null, this.children = new em, this.attachRef = null
                }
            }
            class em {
                constructor() {
                    this.contexts = new Map
                }
                onChildOutletCreated(e, t) {
                    const n = this.getOrCreateContext(e);
                    n.outlet = t, this.contexts.set(e, n)
                }
                onChildOutletDestroyed(e) {
                    const t = this.getContext(e);
                    t && (t.outlet = null)
                }
                onOutletDeactivated() {
                    const e = this.contexts;
                    return this.contexts = new Map, e
                }
                onOutletReAttached(e) {
                    this.contexts = e
                }
                getOrCreateContext(e) {
                    let t = this.getContext(e);
                    return t || (t = new Xg, this.contexts.set(e, t)), t
                }
                getContext(e) {
                    return this.contexts.get(e) || null
                }
            }
            class tm {
                shouldProcessUrl(e) {
                    return !0
                }
                extract(e) {
                    return e
                }
                merge(e, t) {
                    return e
                }
            }

            function nm(e) {
                throw e
            }

            function rm(e, t, n) {
                return t.parse("/")
            }

            function sm(e, t) {
                return Ld(null)
            }
            let im = (() => {
                    class e {
                        constructor(e, t, n, r, s, i, o, a) {
                            this.rootComponentType = e, this.urlSerializer = t, this.rootContexts = n, this.location = r, this.config = a, this.lastSuccessfulNavigation = null, this.currentNavigation = null, this.disposed = !1, this.lastLocationChangeInfo = null, this.navigationId = 0, this.isNgZoneEnabled = !1, this.events = new S, this.errorHandler = nm, this.malformedUriErrorHandler = rm, this.navigated = !1, this.lastSuccessfulId = -1, this.hooks = {
                                beforePreactivation: sm,
                                afterPreactivation: sm
                            }, this.urlHandlingStrategy = new tm, this.routeReuseStrategy = new Qg, this.onSameUrlNavigation = "ignore", this.paramsInheritanceStrategy = "emptyOnly", this.urlUpdateStrategy = "deferred", this.relativeLinkResolution = "corrected", this.ngModule = s.get(jl), this.console = s.get($u);
                            const l = s.get(tc);
                            this.isNgZoneEnabled = l instanceof tc && tc.isInAngularZone(), this.resetConfig(a), this.currentUrlTree = new df(new pf([], {}), {}, null), this.rawUrlTree = this.currentUrlTree, this.browserUrlTree = this.currentUrlTree, this.configLoader = new Jg(i, o, e => this.triggerEvent(new Hp(e)), e => this.triggerEvent(new zp(e))), this.routerState = jf(this.currentUrlTree, this.rootComponentType), this.transitions = new jd({
                                id: 0,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.currentUrlTree,
                                extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                                urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                                rawUrl: this.currentUrlTree,
                                extras: {},
                                resolve: null,
                                reject: null,
                                promise: Promise.resolve(!0),
                                source: "imperative",
                                restoredState: null,
                                currentSnapshot: this.routerState.snapshot,
                                targetSnapshot: null,
                                currentRouterState: this.routerState,
                                targetRouterState: null,
                                guards: {
                                    canActivateChecks: [],
                                    canDeactivateChecks: []
                                },
                                guardsResult: null
                            }), this.navigations = this.setupNavigations(this.transitions), this.processNavigations()
                        }
                        setupNavigations(e) {
                            const t = this.events;
                            return e.pipe(lp(e => 0 !== e.id), k(e => Object.assign(Object.assign({}, e), {
                                extractedUrl: this.urlHandlingStrategy.extract(e.rawUrl)
                            })), Yd(e => {
                                let n = !1,
                                    r = !1;
                                return Ld(e).pipe(Ap(e => {
                                    this.currentNavigation = {
                                        id: e.id,
                                        initialUrl: e.currentRawUrl,
                                        extractedUrl: e.extractedUrl,
                                        trigger: e.source,
                                        extras: e.extras,
                                        previousNavigation: this.lastSuccessfulNavigation ? Object.assign(Object.assign({}, this.lastSuccessfulNavigation), {
                                            previousNavigation: null
                                        }) : null
                                    }
                                }), Yd(e => {
                                    const n = !this.navigated || e.extractedUrl.toString() !== this.browserUrlTree.toString();
                                    if (("reload" === this.onSameUrlNavigation || n) && this.urlHandlingStrategy.shouldProcessUrl(e.rawUrl)) return Ld(e).pipe(Yd(e => {
                                        const n = this.transitions.getValue();
                                        return t.next(new Mp(e.id, this.serializeUrl(e.extractedUrl), e.source, e.restoredState)), n !== this.transitions.getValue() ? Kd : Promise.resolve(e)
                                    }), (r = this.ngModule.injector, s = this.configLoader, i = this.urlSerializer, o = this.config, Yd(e => function(e, t, n, r, s) {
                                        return new Pg(e, t, n, r, s).apply()
                                    }(r, s, i, e.extractedUrl, o).pipe(k(t => Object.assign(Object.assign({}, e), {
                                        urlAfterRedirects: t
                                    }))))), Ap(e => {
                                        this.currentNavigation = Object.assign(Object.assign({}, this.currentNavigation), {
                                            finalUrl: e.urlAfterRedirects
                                        })
                                    }), function(e, t, n, r, s) {
                                        return V(i => function(e, t, n, r, s = "emptyOnly", i = "legacy") {
                                            try {
                                                const o = new $g(e, t, n, r, s, i).recognize();
                                                return null === o ? Ug(new Vg) : Ld(o)
                                            } catch (o) {
                                                return Ug(o)
                                            }
                                        }(e, t, i.urlAfterRedirects, n(i.urlAfterRedirects), r, s).pipe(k(e => Object.assign(Object.assign({}, i), {
                                            targetSnapshot: e
                                        }))))
                                    }(this.rootComponentType, this.config, e => this.serializeUrl(e), this.paramsInheritanceStrategy, this.relativeLinkResolution), Ap(e => {
                                        "eager" === this.urlUpdateStrategy && (e.extras.skipLocationChange || this.setBrowserUrl(e.urlAfterRedirects, !!e.extras.replaceUrl, e.id, e.extras.state), this.browserUrlTree = e.urlAfterRedirects);
                                        const n = new jp(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(e.urlAfterRedirects), e.targetSnapshot);
                                        t.next(n)
                                    }));
                                    var r, s, i, o;
                                    if (n && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
                                        const {
                                            id: n,
                                            extractedUrl: r,
                                            source: s,
                                            restoredState: i,
                                            extras: o
                                        } = e, a = new Mp(n, this.serializeUrl(r), s, i);
                                        t.next(a);
                                        const l = jf(r, this.rootComponentType).snapshot;
                                        return Ld(Object.assign(Object.assign({}, e), {
                                            targetSnapshot: l,
                                            urlAfterRedirects: r,
                                            extras: Object.assign(Object.assign({}, o), {
                                                skipLocationChange: !1,
                                                replaceUrl: !1
                                            })
                                        }))
                                    }
                                    return this.rawUrlTree = e.rawUrl, this.browserUrlTree = e.urlAfterRedirects, e.resolve(null), Kd
                                }), Zg(e => {
                                    const {
                                        targetSnapshot: t,
                                        id: n,
                                        extractedUrl: r,
                                        rawUrl: s,
                                        extras: {
                                            skipLocationChange: i,
                                            replaceUrl: o
                                        }
                                    } = e;
                                    return this.hooks.beforePreactivation(t, {
                                        navigationId: n,
                                        appliedUrlTree: r,
                                        rawUrlTree: s,
                                        skipLocationChange: !!i,
                                        replaceUrl: !!o
                                    })
                                }), Ap(e => {
                                    const t = new Bp(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(e.urlAfterRedirects), e.targetSnapshot);
                                    this.triggerEvent(t)
                                }), k(e => Object.assign(Object.assign({}, e), {
                                    guards: Ng(e.targetSnapshot, e.currentSnapshot, this.rootContexts)
                                })), function(e, t) {
                                    return V(n => {
                                        const {
                                            targetSnapshot: r,
                                            currentSnapshot: s,
                                            guards: {
                                                canActivateChecks: i,
                                                canDeactivateChecks: o
                                            }
                                        } = n;
                                        return 0 === o.length && 0 === i.length ? Ld(Object.assign(Object.assign({}, n), {
                                            guardsResult: !0
                                        })) : function(e, t, n, r) {
                                            return N(e).pipe(V(e => function(e, t, n, r, s) {
                                                const i = t && t.routeConfig ? t.routeConfig.canDeactivate : null;
                                                return i && 0 !== i.length ? Ld(i.map(i => {
                                                    const o = Lg(i, t, s);
                                                    let a;
                                                    if (function(e) {
                                                            return e && cg(e.canDeactivate)
                                                        }(o)) a = af(o.canDeactivate(e, t, n, r));
                                                    else {
                                                        if (!cg(o)) throw new Error("Invalid CanDeactivate guard");
                                                        a = af(o(e, t, n, r))
                                                    }
                                                    return a.pipe(Ep())
                                                })).pipe(pg()) : Ld(!0)
                                            }(e.component, e.route, n, t, r)), Ep(e => !0 !== e, !0))
                                        }(o, r, s, e).pipe(V(n => n && "boolean" == typeof n ? function(e, t, n, r) {
                                            return N(t).pipe(fp(t => Wd(function(e, t) {
                                                return null !== e && t && t(new qp(e)), Ld(!0)
                                            }(t.route.parent, r), function(e, t) {
                                                return null !== e && t && t(new Wp(e)), Ld(!0)
                                            }(t.route, r), function(e, t, n) {
                                                const r = t[t.length - 1],
                                                    s = t.slice(0, t.length - 1).reverse().map(e => function(e) {
                                                        const t = e.routeConfig ? e.routeConfig.canActivateChild : null;
                                                        return t && 0 !== t.length ? {
                                                            node: e,
                                                            guards: t
                                                        } : null
                                                    }(e)).filter(e => null !== e).map(t => Qd(() => Ld(t.guards.map(s => {
                                                        const i = Lg(s, t.node, n);
                                                        let o;
                                                        if (function(e) {
                                                                return e && cg(e.canActivateChild)
                                                            }(i)) o = af(i.canActivateChild(r, e));
                                                        else {
                                                            if (!cg(i)) throw new Error("Invalid CanActivateChild guard");
                                                            o = af(i(r, e))
                                                        }
                                                        return o.pipe(Ep())
                                                    })).pipe(pg())));
                                                return Ld(s).pipe(pg())
                                            }(e, t.path, n), function(e, t, n) {
                                                const r = t.routeConfig ? t.routeConfig.canActivate : null;
                                                return r && 0 !== r.length ? Ld(r.map(r => Qd(() => {
                                                    const s = Lg(r, t, n);
                                                    let i;
                                                    if (function(e) {
                                                            return e && cg(e.canActivate)
                                                        }(s)) i = af(s.canActivate(t, e));
                                                    else {
                                                        if (!cg(s)) throw new Error("Invalid CanActivate guard");
                                                        i = af(s(t, e))
                                                    }
                                                    return i.pipe(Ep())
                                                }))).pipe(pg()) : Ld(!0)
                                            }(e, t.route, n))), Ep(e => !0 !== e, !0))
                                        }(r, i, e, t) : Ld(n)), k(e => Object.assign(Object.assign({}, n), {
                                            guardsResult: e
                                        })))
                                    })
                                }(this.ngModule.injector, e => this.triggerEvent(e)), Ap(e => {
                                    if (hg(e.guardsResult)) {
                                        const t = Xp(`Redirecting to "${this.serializeUrl(e.guardsResult)}"`);
                                        throw t.url = e.guardsResult, t
                                    }
                                    const t = new Vp(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(e.urlAfterRedirects), e.targetSnapshot, !!e.guardsResult);
                                    this.triggerEvent(t)
                                }), lp(e => {
                                    if (!e.guardsResult) {
                                        this.resetUrlToCurrentUrlTree();
                                        const n = new Np(e.id, this.serializeUrl(e.extractedUrl), "");
                                        return t.next(n), e.resolve(!1), !1
                                    }
                                    return !0
                                }), Zg(e => {
                                    if (e.guards.canActivateChecks.length) return Ld(e).pipe(Ap(e => {
                                        const t = new Up(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(e.urlAfterRedirects), e.targetSnapshot);
                                        this.triggerEvent(t)
                                    }), Yd(e => {
                                        let n = !1;
                                        return Ld(e).pipe((r = this.paramsInheritanceStrategy, s = this.ngModule.injector, V(e => {
                                            const {
                                                targetSnapshot: t,
                                                guards: {
                                                    canActivateChecks: n
                                                }
                                            } = e;
                                            if (!n.length) return Ld(e);
                                            let i = 0;
                                            return N(n).pipe(fp(e => function(e, t, n, r) {
                                                return function(e, t, n, r) {
                                                    const s = Object.keys(e);
                                                    if (0 === s.length) return Ld({});
                                                    const i = {};
                                                    return N(s).pipe(V(s => function(e, t, n, r) {
                                                        const s = Lg(e, t, r);
                                                        return af(s.resolve ? s.resolve(t, n) : s(t, n))
                                                    }(e[s], t, n, r).pipe(Ap(e => {
                                                        i[s] = e
                                                    }))), gp(1), V(() => Object.keys(i).length === s.length ? Ld(i) : Kd))
                                                }(e._resolve, e, t, r).pipe(k(t => (e._resolvedData = t, e.data = Object.assign(Object.assign({}, e.data), Vf(e, n).resolve), null)))
                                            }(e.route, t, r, s)), Ap(() => i++), gp(1), V(t => i === n.length ? Ld(e) : Kd))
                                        })), Ap({
                                            next: () => n = !0,
                                            complete: () => {
                                                if (!n) {
                                                    const n = new Np(e.id, this.serializeUrl(e.extractedUrl), "At least one route resolver didn't emit any value.");
                                                    t.next(n), e.resolve(!1)
                                                }
                                            }
                                        }));
                                        var r, s
                                    }), Ap(e => {
                                        const t = new $p(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(e.urlAfterRedirects), e.targetSnapshot);
                                        this.triggerEvent(t)
                                    }))
                                }), Zg(e => {
                                    const {
                                        targetSnapshot: t,
                                        id: n,
                                        extractedUrl: r,
                                        rawUrl: s,
                                        extras: {
                                            skipLocationChange: i,
                                            replaceUrl: o
                                        }
                                    } = e;
                                    return this.hooks.afterPreactivation(t, {
                                        navigationId: n,
                                        appliedUrlTree: r,
                                        rawUrlTree: s,
                                        skipLocationChange: !!i,
                                        replaceUrl: !!o
                                    })
                                }), k(e => {
                                    const t = function(e, t, n) {
                                        const r = Wf(e, t._root, n ? n._root : void 0);
                                        return new Lf(r, t)
                                    }(this.routeReuseStrategy, e.targetSnapshot, e.currentRouterState);
                                    return Object.assign(Object.assign({}, e), {
                                        targetRouterState: t
                                    })
                                }), Ap(e => {
                                    this.currentUrlTree = e.urlAfterRedirects, this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, e.rawUrl), this.routerState = e.targetRouterState, "deferred" === this.urlUpdateStrategy && (e.extras.skipLocationChange || this.setBrowserUrl(this.rawUrlTree, !!e.extras.replaceUrl, e.id, e.extras.state), this.browserUrlTree = e.urlAfterRedirects)
                                }), (s = this.rootContexts, i = this.routeReuseStrategy, o = e => this.triggerEvent(e), k(e => (new ag(i, e.targetRouterState, e.currentRouterState, o).activate(s), e))), Ap({
                                    next() {
                                        n = !0
                                    },
                                    complete() {
                                        n = !0
                                    }
                                }), Op(() => {
                                    if (!n && !r) {
                                        this.resetUrlToCurrentUrlTree();
                                        const n = new Np(e.id, this.serializeUrl(e.extractedUrl), `Navigation ID ${e.id} is not equal to the current navigation id ${this.navigationId}`);
                                        t.next(n), e.resolve(!1)
                                    }
                                    this.currentNavigation = null
                                }), hp(n => {
                                    if (r = !0, (s = n) && s.ngNavigationCancelingError) {
                                        const r = hg(n.url);
                                        r || (this.navigated = !0, this.resetStateAndUrl(e.currentRouterState, e.currentUrlTree, e.rawUrl));
                                        const s = new Np(e.id, this.serializeUrl(e.extractedUrl), n.message);
                                        t.next(s), r ? setTimeout(() => {
                                            const t = this.urlHandlingStrategy.merge(n.url, this.rawUrlTree);
                                            this.scheduleNavigation(t, "imperative", null, {
                                                skipLocationChange: e.extras.skipLocationChange,
                                                replaceUrl: "eager" === this.urlUpdateStrategy
                                            }, {
                                                resolve: e.resolve,
                                                reject: e.reject,
                                                promise: e.promise
                                            })
                                        }, 0) : e.resolve(!1)
                                    } else {
                                        this.resetStateAndUrl(e.currentRouterState, e.currentUrlTree, e.rawUrl);
                                        const r = new Lp(e.id, this.serializeUrl(e.extractedUrl), n);
                                        t.next(r);
                                        try {
                                            e.resolve(this.errorHandler(n))
                                        } catch (i) {
                                            e.reject(i)
                                        }
                                    }
                                    var s;
                                    return Kd
                                }));
                                var s, i, o
                            }))
                        }
                        resetRootComponentType(e) {
                            this.rootComponentType = e, this.routerState.root.component = this.rootComponentType
                        }
                        getTransition() {
                            const e = this.transitions.value;
                            return e.urlAfterRedirects = this.browserUrlTree, e
                        }
                        setTransition(e) {
                            this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), e))
                        }
                        initialNavigation() {
                            this.setUpLocationChangeListener(), 0 === this.navigationId && this.navigateByUrl(this.location.path(!0), {
                                replaceUrl: !0
                            })
                        }
                        setUpLocationChangeListener() {
                            this.locationSubscription || (this.locationSubscription = this.location.subscribe(e => {
                                const t = this.extractLocationChangeInfoFromEvent(e);
                                this.shouldScheduleNavigation(this.lastLocationChangeInfo, t) && setTimeout(() => {
                                    const {
                                        source: e,
                                        state: n,
                                        urlTree: r
                                    } = t, s = {
                                        replaceUrl: !0
                                    };
                                    if (n) {
                                        const e = Object.assign({}, n);
                                        delete e.navigationId, 0 !== Object.keys(e).length && (s.state = e)
                                    }
                                    this.scheduleNavigation(r, e, n, s)
                                }, 0), this.lastLocationChangeInfo = t
                            }))
                        }
                        extractLocationChangeInfoFromEvent(e) {
                            var t;
                            return {
                                source: "popstate" === e.type ? "popstate" : "hashchange",
                                urlTree: this.parseUrl(e.url),
                                state: (null === (t = e.state) || void 0 === t ? void 0 : t.navigationId) ? e.state : null,
                                transitionId: this.getTransition().id
                            }
                        }
                        shouldScheduleNavigation(e, t) {
                            if (!e) return !0;
                            const n = t.urlTree.toString() === e.urlTree.toString();
                            return !(t.transitionId === e.transitionId && n && ("hashchange" === t.source && "popstate" === e.source || "popstate" === t.source && "hashchange" === e.source))
                        }
                        get url() {
                            return this.serializeUrl(this.currentUrlTree)
                        }
                        getCurrentNavigation() {
                            return this.currentNavigation
                        }
                        triggerEvent(e) {
                            this.events.next(e)
                        }
                        resetConfig(e) {
                            gg(e), this.config = e.map(bg), this.navigated = !1, this.lastSuccessfulId = -1
                        }
                        ngOnDestroy() {
                            this.dispose()
                        }
                        dispose() {
                            this.transitions.complete(), this.locationSubscription && (this.locationSubscription.unsubscribe(), this.locationSubscription = void 0), this.disposed = !0
                        }
                        createUrlTree(e, t = {}) {
                            const {
                                relativeTo: n,
                                queryParams: r,
                                fragment: s,
                                queryParamsHandling: i,
                                preserveFragment: o
                            } = t, a = n || this.routerState.root, l = o ? this.currentUrlTree.fragment : s;
                            let u = null;
                            switch (i) {
                                case "merge":
                                    u = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), r);
                                    break;
                                case "preserve":
                                    u = this.currentUrlTree.queryParams;
                                    break;
                                default:
                                    u = r || null
                            }
                            return null !== u && (u = this.removeEmptyProps(u)),
                                function(e, t, n, r, s) {
                                    if (0 === n.length) return Yf(t.root, t.root, t, r, s);
                                    const i = function(e) {
                                        if ("string" == typeof e[0] && 1 === e.length && "/" === e[0]) return new Xf(!0, 0, e);
                                        let t = 0,
                                            n = !1;
                                        const r = e.reduce((e, r, s) => {
                                            if ("object" == typeof r && null != r) {
                                                if (r.outlets) {
                                                    const t = {};
                                                    return of(r.outlets, (e, n) => {
                                                        t[n] = "string" == typeof e ? e.split("/") : e
                                                    }), [...e, {
                                                        outlets: t
                                                    }]
                                                }
                                                if (r.segmentPath) return [...e, r.segmentPath]
                                            }
                                            return "string" != typeof r ? [...e, r] : 0 === s ? (r.split("/").forEach((r, s) => {
                                                0 == s && "." === r || (0 == s && "" === r ? n = !0 : ".." === r ? t++ : "" != r && e.push(r))
                                            }), e) : [...e, r]
                                        }, []);
                                        return new Xf(n, t, r)
                                    }(n);
                                    if (i.toRoot()) return Yf(t.root, new pf([], {}), t, r, s);
                                    const o = function(e, t, n) {
                                            if (e.isAbsolute) return new eg(t.root, !0, 0);
                                            if (-1 === n.snapshot._lastPathIndex) {
                                                const e = n.snapshot._urlSegment;
                                                return new eg(e, e === t.root, 0)
                                            }
                                            const r = Zf(e.commands[0]) ? 0 : 1;
                                            return function(e, t, n) {
                                                let r = e,
                                                    s = t,
                                                    i = n;
                                                for (; i > s;) {
                                                    if (i -= s, r = r.parent, !r) throw new Error("Invalid number of '../'");
                                                    s = r.segments.length
                                                }
                                                return new eg(r, !1, s - i)
                                            }(n.snapshot._urlSegment, n.snapshot._lastPathIndex + r, e.numberOfDoubleDots)
                                        }(i, t, e),
                                        a = o.processChildren ? ng(o.segmentGroup, o.index, i.commands) : tg(o.segmentGroup, o.index, i.commands);
                                    return Yf(o.segmentGroup, a, t, r, s)
                                }(a, this.currentUrlTree, e, u, l)
                        }
                        navigateByUrl(e, t = {
                            skipLocationChange: !1
                        }) {
                            const n = hg(e) ? e : this.parseUrl(e),
                                r = this.urlHandlingStrategy.merge(n, this.rawUrlTree);
                            return this.scheduleNavigation(r, "imperative", null, t)
                        }
                        navigate(e, t = {
                            skipLocationChange: !1
                        }) {
                            return function(e) {
                                for (let t = 0; t < e.length; t++) {
                                    const n = e[t];
                                    if (null == n) throw new Error(`The requested path contains ${n} segment at index ${t}`)
                                }
                            }(e), this.navigateByUrl(this.createUrlTree(e, t), t)
                        }
                        serializeUrl(e) {
                            return this.urlSerializer.serialize(e)
                        }
                        parseUrl(e) {
                            let t;
                            try {
                                t = this.urlSerializer.parse(e)
                            } catch (n) {
                                t = this.malformedUriErrorHandler(n, this.urlSerializer, e)
                            }
                            return t
                        }
                        isActive(e, t) {
                            if (hg(e)) return lf(this.currentUrlTree, e, t);
                            const n = this.parseUrl(e);
                            return lf(this.currentUrlTree, n, t)
                        }
                        removeEmptyProps(e) {
                            return Object.keys(e).reduce((t, n) => {
                                const r = e[n];
                                return null != r && (t[n] = r), t
                            }, {})
                        }
                        processNavigations() {
                            this.navigations.subscribe(e => {
                                this.navigated = !0, this.lastSuccessfulId = e.id, this.events.next(new Rp(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(this.currentUrlTree))), this.lastSuccessfulNavigation = this.currentNavigation, e.resolve(!0)
                            }, e => {
                                this.console.warn("Unhandled Navigation Error: ")
                            })
                        }
                        scheduleNavigation(e, t, n, r, s) {
                            if (this.disposed) return Promise.resolve(!1);
                            const i = this.getTransition(),
                                o = "imperative" !== t && "imperative" === (null == i ? void 0 : i.source),
                                a = (this.lastSuccessfulId === i.id || this.currentNavigation ? i.rawUrl : i.urlAfterRedirects).toString() === e.toString();
                            if (o && a) return Promise.resolve(!0);
                            let l, u, c;
                            s ? (l = s.resolve, u = s.reject, c = s.promise) : c = new Promise((e, t) => {
                                l = e, u = t
                            });
                            const h = ++this.navigationId;
                            return this.setTransition({
                                id: h,
                                source: t,
                                restoredState: n,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.rawUrlTree,
                                rawUrl: e,
                                extras: r,
                                resolve: l,
                                reject: u,
                                promise: c,
                                currentSnapshot: this.routerState.snapshot,
                                currentRouterState: this.routerState
                            }), c.catch(e => Promise.reject(e))
                        }
                        setBrowserUrl(e, t, n, r) {
                            const s = this.urlSerializer.serialize(e);
                            r = r || {}, this.location.isCurrentPathEqualTo(s) || t ? this.location.replaceState(s, "", Object.assign(Object.assign({}, r), {
                                navigationId: n
                            })) : this.location.go(s, "", Object.assign(Object.assign({}, r), {
                                navigationId: n
                            }))
                        }
                        resetStateAndUrl(e, t, n) {
                            this.routerState = e, this.currentUrlTree = t, this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, n), this.resetUrlToCurrentUrlTree()
                        }
                        resetUrlToCurrentUrlTree() {
                            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), "", {
                                navigationId: this.lastSuccessfulId
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Qn), dr(mf), dr(em), dr(Kc), dr(go), dr(Sc), dr(Ju), dr(void 0))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                om = (() => {
                    class e {
                        constructor(e, t, n) {
                            this.router = e, this.route = t, this.locationStrategy = n, this.commands = [], this.onChanges = new S, this.subscription = e.events.subscribe(e => {
                                e instanceof Rp && this.updateTargetUrlAndHref()
                            })
                        }
                        set routerLink(e) {
                            this.commands = null != e ? Array.isArray(e) ? e : [e] : []
                        }
                        ngOnChanges(e) {
                            this.updateTargetUrlAndHref(), this.onChanges.next(this)
                        }
                        ngOnDestroy() {
                            this.subscription.unsubscribe()
                        }
                        onClick(e, t, n, r, s) {
                            if (0 !== e || t || n || r || s) return !0;
                            if ("string" == typeof this.target && "_self" != this.target) return !0;
                            const i = {
                                skipLocationChange: am(this.skipLocationChange),
                                replaceUrl: am(this.replaceUrl),
                                state: this.state
                            };
                            return this.router.navigateByUrl(this.urlTree, i), !1
                        }
                        updateTargetUrlAndHref() {
                            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree))
                        }
                        get urlTree() {
                            return this.router.createUrlTree(this.commands, {
                                relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                                queryParams: this.queryParams,
                                fragment: this.fragment,
                                queryParamsHandling: this.queryParamsHandling,
                                preserveFragment: am(this.preserveFragment)
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(im), Ro(Bf), Ro(Hc))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["a", "routerLink", ""],
                            ["area", "routerLink", ""]
                        ],
                        hostVars: 2,
                        hostBindings: function(e, t) {
                            1 & e && qo("click", function(e) {
                                return t.onClick(e.button, e.ctrlKey, e.shiftKey, e.altKey, e.metaKey)
                            }), 2 & e && (Pa("href", t.href, ss), Oo("target", t.target))
                        },
                        inputs: {
                            routerLink: "routerLink",
                            target: "target",
                            queryParams: "queryParams",
                            fragment: "fragment",
                            queryParamsHandling: "queryParamsHandling",
                            preserveFragment: "preserveFragment",
                            skipLocationChange: "skipLocationChange",
                            replaceUrl: "replaceUrl",
                            state: "state",
                            relativeTo: "relativeTo"
                        },
                        features: [ut]
                    }), e
                })();

            function am(e) {
                return "" === e || !!e
            }
            let lm = (() => {
                class e {
                    constructor(e, t, n, r, s) {
                        this.parentContexts = e, this.location = t, this.resolver = n, this.changeDetector = s, this.activated = null, this._activatedRoute = null, this.activateEvents = new gu, this.deactivateEvents = new gu, this.name = r || Qp, e.onChildOutletCreated(this.name, this)
                    }
                    ngOnDestroy() {
                        this.parentContexts.onChildOutletDestroyed(this.name)
                    }
                    ngOnInit() {
                        if (!this.activated) {
                            const e = this.parentContexts.getContext(this.name);
                            e && e.route && (e.attachRef ? this.attach(e.attachRef, e.route) : this.activateWith(e.route, e.resolver || null))
                        }
                    }
                    get isActivated() {
                        return !!this.activated
                    }
                    get component() {
                        if (!this.activated) throw new Error("Outlet is not activated");
                        return this.activated.instance
                    }
                    get activatedRoute() {
                        if (!this.activated) throw new Error("Outlet is not activated");
                        return this._activatedRoute
                    }
                    get activatedRouteData() {
                        return this._activatedRoute ? this._activatedRoute.snapshot.data : {}
                    }
                    detach() {
                        if (!this.activated) throw new Error("Outlet is not activated");
                        this.location.detach();
                        const e = this.activated;
                        return this.activated = null, this._activatedRoute = null, e
                    }
                    attach(e, t) {
                        this.activated = e, this._activatedRoute = t, this.location.insert(e.hostView)
                    }
                    deactivate() {
                        if (this.activated) {
                            const e = this.component;
                            this.activated.destroy(), this.activated = null, this._activatedRoute = null, this.deactivateEvents.emit(e)
                        }
                    }
                    activateWith(e, t) {
                        if (this.isActivated) throw new Error("Cannot activate an already activated outlet");
                        this._activatedRoute = e;
                        const n = (t = t || this.resolver).resolveComponentFactory(e._futureSnapshot.routeConfig.component),
                            r = this.parentContexts.getOrCreateContext(this.name).children,
                            s = new um(e, r, this.location.injector);
                        this.activated = this.location.createComponent(n, this.location.length, s), this.changeDetector.markForCheck(), this.activateEvents.emit(this.activated.instance)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(em), Ro(Ul), Ro(Ja), ("name", function(e, t) {
                        const n = e.attrs;
                        if (n) {
                            const e = n.length;
                            let r = 0;
                            for (; r < e;) {
                                const s = n[r];
                                if (bn(s)) break;
                                if (0 === s) r += 2;
                                else if ("number" == typeof s)
                                    for (r++; r < e && "string" == typeof n[r];) r++;
                                else {
                                    if (s === t) return n[r + 1];
                                    r += 2
                                }
                            }
                        }
                        return null
                    }(Nt(), "name")), Ro(Dl))
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["router-outlet"]
                    ],
                    outputs: {
                        activateEvents: "activate",
                        deactivateEvents: "deactivate"
                    },
                    exportAs: ["outlet"]
                }), e
            })();
            class um {
                constructor(e, t, n) {
                    this.route = e, this.childContexts = t, this.parent = n
                }
                get(e, t) {
                    return e === Bf ? this.route : e === em ? this.childContexts : this.parent.get(e, t)
                }
            }
            class cm {}
            class hm {
                preload(e, t) {
                    return Ld(null)
                }
            }
            let dm = (() => {
                    class e {
                        constructor(e, t, n, r, s) {
                            this.router = e, this.injector = r, this.preloadingStrategy = s, this.loader = new Jg(t, n, t => e.triggerEvent(new Hp(t)), t => e.triggerEvent(new zp(t)))
                        }
                        setUpPreloading() {
                            this.subscription = this.router.events.pipe(lp(e => e instanceof Rp), fp(() => this.preload())).subscribe(() => {})
                        }
                        preload() {
                            const e = this.injector.get(jl);
                            return this.processRoutes(e, this.router.config)
                        }
                        ngOnDestroy() {
                            this.subscription && this.subscription.unsubscribe()
                        }
                        processRoutes(e, t) {
                            const n = [];
                            for (const r of t)
                                if (r.loadChildren && !r.canLoad && r._loadedConfig) {
                                    const e = r._loadedConfig;
                                    n.push(this.processRoutes(e.module, e.routes))
                                } else r.loadChildren && !r.canLoad ? n.push(this.preloadConfig(e, r)) : r.children && n.push(this.processRoutes(e, r.children));
                            return N(n).pipe(z(), k(e => {}))
                        }
                        preloadConfig(e, t) {
                            return this.preloadingStrategy.preload(t, () => (t._loadedConfig ? Ld(t._loadedConfig) : this.loader.load(e.injector, t)).pipe(V(e => (t._loadedConfig = e, this.processRoutes(e.module, e.routes)))))
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(im), dr(Sc), dr(Ju), dr(go), dr(cm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                pm = (() => {
                    class e {
                        constructor(e, t, n = {}) {
                            this.router = e, this.viewportScroller = t, this.options = n, this.lastId = 0, this.lastSource = "imperative", this.restoredId = 0, this.store = {}, n.scrollPositionRestoration = n.scrollPositionRestoration || "disabled", n.anchorScrolling = n.anchorScrolling || "disabled"
                        }
                        init() {
                            "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.setHistoryScrollRestoration("manual"), this.routerEventsSubscription = this.createScrollEvents(), this.scrollEventsSubscription = this.consumeScrollEvents()
                        }
                        createScrollEvents() {
                            return this.router.events.subscribe(e => {
                                e instanceof Mp ? (this.store[this.lastId] = this.viewportScroller.getScrollPosition(), this.lastSource = e.navigationTrigger, this.restoredId = e.restoredState ? e.restoredState.navigationId : 0) : e instanceof Rp && (this.lastId = e.id, this.scheduleScrollEvent(e, this.router.parseUrl(e.urlAfterRedirects).fragment))
                            })
                        }
                        consumeScrollEvents() {
                            return this.router.events.subscribe(e => {
                                e instanceof Zp && (e.position ? "top" === this.options.scrollPositionRestoration ? this.viewportScroller.scrollToPosition([0, 0]) : "enabled" === this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition(e.position) : e.anchor && "enabled" === this.options.anchorScrolling ? this.viewportScroller.scrollToAnchor(e.anchor) : "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition([0, 0]))
                            })
                        }
                        scheduleScrollEvent(e, t) {
                            this.router.triggerEvent(new Zp(e, "popstate" === this.lastSource ? this.store[this.restoredId] : null, t))
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(), this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe()
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(im), dr(Qh), dr(void 0))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })();
            const fm = new Kn("ROUTER_CONFIGURATION"),
                gm = new Kn("ROUTER_FORROOT_GUARD"),
                mm = [Kc, {
                    provide: mf,
                    useClass: yf
                }, {
                    provide: im,
                    useFactory: function(e, t, n, r, s, i, o, a = {}, l, u) {
                        const c = new im(null, e, t, n, r, s, i, rf(o));
                        if (l && (c.urlHandlingStrategy = l), u && (c.routeReuseStrategy = u), function(e, t) {
                                e.errorHandler && (t.errorHandler = e.errorHandler), e.malformedUriErrorHandler && (t.malformedUriErrorHandler = e.malformedUriErrorHandler), e.onSameUrlNavigation && (t.onSameUrlNavigation = e.onSameUrlNavigation), e.paramsInheritanceStrategy && (t.paramsInheritanceStrategy = e.paramsInheritanceStrategy), e.relativeLinkResolution && (t.relativeLinkResolution = e.relativeLinkResolution), e.urlUpdateStrategy && (t.urlUpdateStrategy = e.urlUpdateStrategy)
                            }(a, c), a.enableTracing) {
                            const e = Pc();
                            c.events.subscribe(t => {
                                e.logGroup(`Router Event: ${t.constructor.name}`), e.log(t.toString()), e.log(t), e.logGroupEnd()
                            })
                        }
                        return c
                    },
                    deps: [mf, em, Kc, go, Sc, Ju, Yg, fm, [class {}, new mr],
                        [class {}, new mr]
                    ]
                }, em, {
                    provide: Bf,
                    useFactory: function(e) {
                        return e.routerState.root
                    },
                    deps: [im]
                }, {
                    provide: Sc,
                    useClass: kc
                }, dm, hm, class {
                    preload(e, t) {
                        return t().pipe(hp(() => Ld(null)))
                    }
                }, {
                    provide: fm,
                    useValue: {
                        enableTracing: !1
                    }
                }];

            function ym() {
                return new mc("Router", im)
            }
            let bm = (() => {
                class e {
                    constructor(e, t) {}
                    static forRoot(t, n) {
                        return {
                            ngModule: e,
                            providers: [mm, Cm(t), {
                                    provide: gm,
                                    useFactory: wm,
                                    deps: [
                                        [im, new mr, new yr]
                                    ]
                                }, {
                                    provide: fm,
                                    useValue: n || {}
                                }, {
                                    provide: Hc,
                                    useFactory: _m,
                                    deps: [Mc, [new gr(qc), new mr], fm]
                                }, {
                                    provide: pm,
                                    useFactory: vm,
                                    deps: [im, Qh, fm]
                                }, {
                                    provide: cm,
                                    useExisting: n && n.preloadingStrategy ? n.preloadingStrategy : hm
                                }, {
                                    provide: mc,
                                    multi: !0,
                                    useFactory: ym
                                },
                                [Sm, {
                                    provide: Mu,
                                    multi: !0,
                                    useFactory: xm,
                                    deps: [Sm]
                                }, {
                                    provide: km,
                                    useFactory: Em,
                                    deps: [Sm]
                                }, {
                                    provide: Uu,
                                    multi: !0,
                                    useExisting: km
                                }]
                            ]
                        }
                    }
                    static forChild(t) {
                        return {
                            ngModule: e,
                            providers: [Cm(t)]
                        }
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(gm, 8), dr(im, 8))
                }, e.\u0275mod = We({
                    type: e
                }), e.\u0275inj = de({}), e
            })();

            function vm(e, t, n) {
                return n.scrollOffset && t.setOffset(n.scrollOffset), new pm(e, t, n)
            }

            function _m(e, t, n = {}) {
                return n.useHash ? new Wc(e, t) : new Gc(e, t)
            }

            function wm(e) {
                return "guarded"
            }

            function Cm(e) {
                return [{
                    provide: Zn,
                    multi: !0,
                    useValue: e
                }, {
                    provide: Yg,
                    multi: !0,
                    useValue: e
                }]
            }
            let Sm = (() => {
                class e {
                    constructor(e) {
                        this.injector = e, this.initNavigation = !1, this.resultOfPreactivationDone = new S
                    }
                    appInitializer() {
                        return this.injector.get(Nc, Promise.resolve(null)).then(() => {
                            let e = null;
                            const t = new Promise(t => e = t),
                                n = this.injector.get(im),
                                r = this.injector.get(fm);
                            return "disabled" === r.initialNavigation ? (n.setUpLocationChangeListener(), e(!0)) : "enabled" === r.initialNavigation || "enabledBlocking" === r.initialNavigation ? (n.hooks.afterPreactivation = () => this.initNavigation ? Ld(null) : (this.initNavigation = !0, e(!0), this.resultOfPreactivationDone), n.initialNavigation()) : e(!0), t
                        })
                    }
                    bootstrapListener(e) {
                        const t = this.injector.get(fm),
                            n = this.injector.get(dm),
                            r = this.injector.get(pm),
                            s = this.injector.get(im),
                            i = this.injector.get(wc);
                        e === i.components[0] && ("enabledNonBlocking" !== t.initialNavigation && void 0 !== t.initialNavigation || s.initialNavigation(), n.setUpPreloading(), r.init(), s.resetRootComponentType(i.componentTypes[0]), this.resultOfPreactivationDone.next(null), this.resultOfPreactivationDone.complete())
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(go))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();

            function xm(e) {
                return e.appInitializer.bind(e)
            }

            function Em(e) {
                return e.bootstrapListener.bind(e)
            }
            const km = new Kn("Router Initializer");
            class Am {}
            class Dm {}
            class Tm {
                constructor(e) {
                    this.normalizedNames = new Map, this.lazyUpdate = null, e ? this.lazyInit = "string" == typeof e ? () => {
                        this.headers = new Map, e.split("\n").forEach(e => {
                            const t = e.indexOf(":");
                            if (t > 0) {
                                const n = e.slice(0, t),
                                    r = n.toLowerCase(),
                                    s = e.slice(t + 1).trim();
                                this.maybeSetNormalizedName(n, r), this.headers.has(r) ? this.headers.get(r).push(s) : this.headers.set(r, [s])
                            }
                        })
                    } : () => {
                        this.headers = new Map, Object.keys(e).forEach(t => {
                            let n = e[t];
                            const r = t.toLowerCase();
                            "string" == typeof n && (n = [n]), n.length > 0 && (this.headers.set(r, n), this.maybeSetNormalizedName(t, r))
                        })
                    } : this.headers = new Map
                }
                has(e) {
                    return this.init(), this.headers.has(e.toLowerCase())
                }
                get(e) {
                    this.init();
                    const t = this.headers.get(e.toLowerCase());
                    return t && t.length > 0 ? t[0] : null
                }
                keys() {
                    return this.init(), Array.from(this.normalizedNames.values())
                }
                getAll(e) {
                    return this.init(), this.headers.get(e.toLowerCase()) || null
                }
                append(e, t) {
                    return this.clone({
                        name: e,
                        value: t,
                        op: "a"
                    })
                }
                set(e, t) {
                    return this.clone({
                        name: e,
                        value: t,
                        op: "s"
                    })
                }
                delete(e, t) {
                    return this.clone({
                        name: e,
                        value: t,
                        op: "d"
                    })
                }
                maybeSetNormalizedName(e, t) {
                    this.normalizedNames.has(t) || this.normalizedNames.set(t, e)
                }
                init() {
                    this.lazyInit && (this.lazyInit instanceof Tm ? this.copyFrom(this.lazyInit) : this.lazyInit(), this.lazyInit = null, this.lazyUpdate && (this.lazyUpdate.forEach(e => this.applyUpdate(e)), this.lazyUpdate = null))
                }
                copyFrom(e) {
                    e.init(), Array.from(e.headers.keys()).forEach(t => {
                        this.headers.set(t, e.headers.get(t)), this.normalizedNames.set(t, e.normalizedNames.get(t))
                    })
                }
                clone(e) {
                    const t = new Tm;
                    return t.lazyInit = this.lazyInit && this.lazyInit instanceof Tm ? this.lazyInit : this, t.lazyUpdate = (this.lazyUpdate || []).concat([e]), t
                }
                applyUpdate(e) {
                    const t = e.name.toLowerCase();
                    switch (e.op) {
                        case "a":
                        case "s":
                            let n = e.value;
                            if ("string" == typeof n && (n = [n]), 0 === n.length) return;
                            this.maybeSetNormalizedName(e.name, t);
                            const r = ("a" === e.op ? this.headers.get(t) : void 0) || [];
                            r.push(...n), this.headers.set(t, r);
                            break;
                        case "d":
                            const s = e.value;
                            if (s) {
                                let e = this.headers.get(t);
                                if (!e) return;
                                e = e.filter(e => -1 === s.indexOf(e)), 0 === e.length ? (this.headers.delete(t), this.normalizedNames.delete(t)) : this.headers.set(t, e)
                            } else this.headers.delete(t), this.normalizedNames.delete(t)
                    }
                }
                forEach(e) {
                    this.init(), Array.from(this.normalizedNames.keys()).forEach(t => e(this.normalizedNames.get(t), this.headers.get(t)))
                }
            }
            class Om {
                encodeKey(e) {
                    return Fm(e)
                }
                encodeValue(e) {
                    return Fm(e)
                }
                decodeKey(e) {
                    return decodeURIComponent(e)
                }
                decodeValue(e) {
                    return decodeURIComponent(e)
                }
            }

            function Fm(e) {
                return encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/gi, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%2B/gi, "+").replace(/%3D/gi, "=").replace(/%3F/gi, "?").replace(/%2F/gi, "/")
            }
            class Pm {
                constructor(e = {}) {
                    if (this.updates = null, this.cloneFrom = null, this.encoder = e.encoder || new Om, e.fromString) {
                        if (e.fromObject) throw new Error("Cannot specify both fromString and fromObject.");
                        this.map = function(e, t) {
                            const n = new Map;
                            return e.length > 0 && e.replace(/^\?/, "").split("&").forEach(e => {
                                const r = e.indexOf("="),
                                    [s, i] = -1 == r ? [t.decodeKey(e), ""] : [t.decodeKey(e.slice(0, r)), t.decodeValue(e.slice(r + 1))],
                                    o = n.get(s) || [];
                                o.push(i), n.set(s, o)
                            }), n
                        }(e.fromString, this.encoder)
                    } else e.fromObject ? (this.map = new Map, Object.keys(e.fromObject).forEach(t => {
                        const n = e.fromObject[t];
                        this.map.set(t, Array.isArray(n) ? n : [n])
                    })) : this.map = null
                }
                has(e) {
                    return this.init(), this.map.has(e)
                }
                get(e) {
                    this.init();
                    const t = this.map.get(e);
                    return t ? t[0] : null
                }
                getAll(e) {
                    return this.init(), this.map.get(e) || null
                }
                keys() {
                    return this.init(), Array.from(this.map.keys())
                }
                append(e, t) {
                    return this.clone({
                        param: e,
                        value: t,
                        op: "a"
                    })
                }
                appendAll(e) {
                    const t = [];
                    return Object.keys(e).forEach(n => {
                        const r = e[n];
                        Array.isArray(r) ? r.forEach(e => {
                            t.push({
                                param: n,
                                value: e,
                                op: "a"
                            })
                        }) : t.push({
                            param: n,
                            value: r,
                            op: "a"
                        })
                    }), this.clone(t)
                }
                set(e, t) {
                    return this.clone({
                        param: e,
                        value: t,
                        op: "s"
                    })
                }
                delete(e, t) {
                    return this.clone({
                        param: e,
                        value: t,
                        op: "d"
                    })
                }
                toString() {
                    return this.init(), this.keys().map(e => {
                        const t = this.encoder.encodeKey(e);
                        return this.map.get(e).map(e => t + "=" + this.encoder.encodeValue(e)).join("&")
                    }).filter(e => "" !== e).join("&")
                }
                clone(e) {
                    const t = new Pm({
                        encoder: this.encoder
                    });
                    return t.cloneFrom = this.cloneFrom || this, t.updates = (this.updates || []).concat(e), t
                }
                init() {
                    null === this.map && (this.map = new Map), null !== this.cloneFrom && (this.cloneFrom.init(), this.cloneFrom.keys().forEach(e => this.map.set(e, this.cloneFrom.map.get(e))), this.updates.forEach(e => {
                        switch (e.op) {
                            case "a":
                            case "s":
                                const t = ("a" === e.op ? this.map.get(e.param) : void 0) || [];
                                t.push(e.value), this.map.set(e.param, t);
                                break;
                            case "d":
                                if (void 0 === e.value) {
                                    this.map.delete(e.param);
                                    break
                                } {
                                    let t = this.map.get(e.param) || [];
                                    const n = t.indexOf(e.value); - 1 !== n && t.splice(n, 1), t.length > 0 ? this.map.set(e.param, t) : this.map.delete(e.param)
                                }
                        }
                    }), this.cloneFrom = this.updates = null)
                }
            }

            function Im(e) {
                return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer
            }

            function Mm(e) {
                return "undefined" != typeof Blob && e instanceof Blob
            }

            function Rm(e) {
                return "undefined" != typeof FormData && e instanceof FormData
            }
            class Nm {
                constructor(e, t, n, r) {
                    let s;
                    if (this.url = t, this.body = null, this.reportProgress = !1, this.withCredentials = !1, this.responseType = "json", this.method = e.toUpperCase(), function(e) {
                            switch (e) {
                                case "DELETE":
                                case "GET":
                                case "HEAD":
                                case "OPTIONS":
                                case "JSONP":
                                    return !1;
                                default:
                                    return !0
                            }
                        }(this.method) || r ? (this.body = void 0 !== n ? n : null, s = r) : s = n, s && (this.reportProgress = !!s.reportProgress, this.withCredentials = !!s.withCredentials, s.responseType && (this.responseType = s.responseType), s.headers && (this.headers = s.headers), s.params && (this.params = s.params)), this.headers || (this.headers = new Tm), this.params) {
                        const e = this.params.toString();
                        if (0 === e.length) this.urlWithParams = t;
                        else {
                            const n = t.indexOf("?");
                            this.urlWithParams = t + (-1 === n ? "?" : n < t.length - 1 ? "&" : "") + e
                        }
                    } else this.params = new Pm, this.urlWithParams = t
                }
                serializeBody() {
                    return null === this.body ? null : Im(this.body) || Mm(this.body) || Rm(this.body) || "string" == typeof this.body ? this.body : this.body instanceof Pm ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString()
                }
                detectContentTypeHeader() {
                    return null === this.body || Rm(this.body) ? null : Mm(this.body) ? this.body.type || null : Im(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof Pm ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || Array.isArray(this.body) ? "application/json" : null
                }
                clone(e = {}) {
                    const t = e.method || this.method,
                        n = e.url || this.url,
                        r = e.responseType || this.responseType,
                        s = void 0 !== e.body ? e.body : this.body,
                        i = void 0 !== e.withCredentials ? e.withCredentials : this.withCredentials,
                        o = void 0 !== e.reportProgress ? e.reportProgress : this.reportProgress;
                    let a = e.headers || this.headers,
                        l = e.params || this.params;
                    return void 0 !== e.setHeaders && (a = Object.keys(e.setHeaders).reduce((t, n) => t.set(n, e.setHeaders[n]), a)), e.setParams && (l = Object.keys(e.setParams).reduce((t, n) => t.set(n, e.setParams[n]), l)), new Nm(t, n, s, {
                        params: l,
                        headers: a,
                        reportProgress: o,
                        responseType: r,
                        withCredentials: i
                    })
                }
            }
            var Lm = function(e) {
                return e[e.Sent = 0] = "Sent", e[e.UploadProgress = 1] = "UploadProgress", e[e.ResponseHeader = 2] = "ResponseHeader", e[e.DownloadProgress = 3] = "DownloadProgress", e[e.Response = 4] = "Response", e[e.User = 5] = "User", e
            }({});
            class jm {
                constructor(e, t = 200, n = "OK") {
                    this.headers = e.headers || new Tm, this.status = void 0 !== e.status ? e.status : t, this.statusText = e.statusText || n, this.url = e.url || null, this.ok = this.status >= 200 && this.status < 300
                }
            }
            class Bm extends jm {
                constructor(e = {}) {
                    super(e), this.type = Lm.ResponseHeader
                }
                clone(e = {}) {
                    return new Bm({
                        headers: e.headers || this.headers,
                        status: void 0 !== e.status ? e.status : this.status,
                        statusText: e.statusText || this.statusText,
                        url: e.url || this.url || void 0
                    })
                }
            }
            class Vm extends jm {
                constructor(e = {}) {
                    super(e), this.type = Lm.Response, this.body = void 0 !== e.body ? e.body : null
                }
                clone(e = {}) {
                    return new Vm({
                        body: void 0 !== e.body ? e.body : this.body,
                        headers: e.headers || this.headers,
                        status: void 0 !== e.status ? e.status : this.status,
                        statusText: e.statusText || this.statusText,
                        url: e.url || this.url || void 0
                    })
                }
            }
            class Um extends jm {
                constructor(e) {
                    super(e, 0, "Unknown Error"), this.name = "HttpErrorResponse", this.ok = !1, this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${e.url||"(unknown url)"}` : `Http failure response for ${e.url||"(unknown url)"}: ${e.status} ${e.statusText}`, this.error = e.error || null
                }
            }

            function $m(e, t) {
                return {
                    body: t,
                    headers: e.headers,
                    observe: e.observe,
                    params: e.params,
                    reportProgress: e.reportProgress,
                    responseType: e.responseType,
                    withCredentials: e.withCredentials
                }
            }
            let Hm = (() => {
                class e {
                    constructor(e) {
                        this.handler = e
                    }
                    request(e, t, n = {}) {
                        let r;
                        if (e instanceof Nm) r = e;
                        else {
                            let s, i;
                            s = n.headers instanceof Tm ? n.headers : new Tm(n.headers), n.params && (i = n.params instanceof Pm ? n.params : new Pm({
                                fromObject: n.params
                            })), r = new Nm(e, t, void 0 !== n.body ? n.body : null, {
                                headers: s,
                                params: i,
                                reportProgress: n.reportProgress,
                                responseType: n.responseType || "json",
                                withCredentials: n.withCredentials
                            })
                        }
                        const s = Ld(r).pipe(fp(e => this.handler.handle(e)));
                        if (e instanceof Nm || "events" === n.observe) return s;
                        const i = s.pipe(lp(e => e instanceof Vm));
                        switch (n.observe || "body") {
                            case "body":
                                switch (r.responseType) {
                                    case "arraybuffer":
                                        return i.pipe(k(e => {
                                            if (null !== e.body && !(e.body instanceof ArrayBuffer)) throw new Error("Response is not an ArrayBuffer.");
                                            return e.body
                                        }));
                                    case "blob":
                                        return i.pipe(k(e => {
                                            if (null !== e.body && !(e.body instanceof Blob)) throw new Error("Response is not a Blob.");
                                            return e.body
                                        }));
                                    case "text":
                                        return i.pipe(k(e => {
                                            if (null !== e.body && "string" != typeof e.body) throw new Error("Response is not a string.");
                                            return e.body
                                        }));
                                    case "json":
                                    default:
                                        return i.pipe(k(e => e.body))
                                }
                            case "response":
                                return i;
                            default:
                                throw new Error(`Unreachable: unhandled observe type ${n.observe}}`)
                        }
                    }
                    delete(e, t = {}) {
                        return this.request("DELETE", e, t)
                    }
                    get(e, t = {}) {
                        return this.request("GET", e, t)
                    }
                    head(e, t = {}) {
                        return this.request("HEAD", e, t)
                    }
                    jsonp(e, t) {
                        return this.request("JSONP", e, {
                            params: (new Pm).append(t, "JSONP_CALLBACK"),
                            observe: "body",
                            responseType: "json"
                        })
                    }
                    options(e, t = {}) {
                        return this.request("OPTIONS", e, t)
                    }
                    patch(e, t, n = {}) {
                        return this.request("PATCH", e, $m(n, t))
                    }
                    post(e, t, n = {}) {
                        return this.request("POST", e, $m(n, t))
                    }
                    put(e, t, n = {}) {
                        return this.request("PUT", e, $m(n, t))
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Am))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            class zm {
                constructor(e, t) {
                    this.next = e, this.interceptor = t
                }
                handle(e) {
                    return this.interceptor.intercept(e, this.next)
                }
            }
            const qm = new Kn("HTTP_INTERCEPTORS");
            let Gm = (() => {
                class e {
                    intercept(e, t) {
                        return t.handle(e)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            const Wm = /^\)\]\}',?\n/;
            class Km {}
            let Zm = (() => {
                    class e {
                        constructor() {}
                        build() {
                            return new XMLHttpRequest
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                Qm = (() => {
                    class e {
                        constructor(e) {
                            this.xhrFactory = e
                        }
                        handle(e) {
                            if ("JSONP" === e.method) throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");
                            return new b(t => {
                                const n = this.xhrFactory.build();
                                if (n.open(e.method, e.urlWithParams), e.withCredentials && (n.withCredentials = !0), e.headers.forEach((e, t) => n.setRequestHeader(e, t.join(","))), e.headers.has("Accept") || n.setRequestHeader("Accept", "application/json, text/plain, */*"), !e.headers.has("Content-Type")) {
                                    const t = e.detectContentTypeHeader();
                                    null !== t && n.setRequestHeader("Content-Type", t)
                                }
                                if (e.responseType) {
                                    const t = e.responseType.toLowerCase();
                                    n.responseType = "json" !== t ? t : "text"
                                }
                                const r = e.serializeBody();
                                let s = null;
                                const i = () => {
                                        if (null !== s) return s;
                                        const t = 1223 === n.status ? 204 : n.status,
                                            r = n.statusText || "OK",
                                            i = new Tm(n.getAllResponseHeaders()),
                                            o = function(e) {
                                                return "responseURL" in e && e.responseURL ? e.responseURL : /^X-Request-URL:/m.test(e.getAllResponseHeaders()) ? e.getResponseHeader("X-Request-URL") : null
                                            }(n) || e.url;
                                        return s = new Bm({
                                            headers: i,
                                            status: t,
                                            statusText: r,
                                            url: o
                                        }), s
                                    },
                                    o = () => {
                                        let {
                                            headers: r,
                                            status: s,
                                            statusText: o,
                                            url: a
                                        } = i(), l = null;
                                        204 !== s && (l = void 0 === n.response ? n.responseText : n.response), 0 === s && (s = l ? 200 : 0);
                                        let u = s >= 200 && s < 300;
                                        if ("json" === e.responseType && "string" == typeof l) {
                                            const e = l;
                                            l = l.replace(Wm, "");
                                            try {
                                                l = "" !== l ? JSON.parse(l) : null
                                            } catch (c) {
                                                l = e, u && (u = !1, l = {
                                                    error: c,
                                                    text: l
                                                })
                                            }
                                        }
                                        u ? (t.next(new Vm({
                                            body: l,
                                            headers: r,
                                            status: s,
                                            statusText: o,
                                            url: a || void 0
                                        })), t.complete()) : t.error(new Um({
                                            error: l,
                                            headers: r,
                                            status: s,
                                            statusText: o,
                                            url: a || void 0
                                        }))
                                    },
                                    a = e => {
                                        const {
                                            url: r
                                        } = i(), s = new Um({
                                            error: e,
                                            status: n.status || 0,
                                            statusText: n.statusText || "Unknown Error",
                                            url: r || void 0
                                        });
                                        t.error(s)
                                    };
                                let l = !1;
                                const u = r => {
                                        l || (t.next(i()), l = !0);
                                        let s = {
                                            type: Lm.DownloadProgress,
                                            loaded: r.loaded
                                        };
                                        r.lengthComputable && (s.total = r.total), "text" === e.responseType && n.responseText && (s.partialText = n.responseText), t.next(s)
                                    },
                                    c = e => {
                                        let n = {
                                            type: Lm.UploadProgress,
                                            loaded: e.loaded
                                        };
                                        e.lengthComputable && (n.total = e.total), t.next(n)
                                    };
                                return n.addEventListener("load", o), n.addEventListener("error", a), n.addEventListener("timeout", a), n.addEventListener("abort", a), e.reportProgress && (n.addEventListener("progress", u), null !== r && n.upload && n.upload.addEventListener("progress", c)), n.send(r), t.next({
                                    type: Lm.Sent
                                }), () => {
                                    n.removeEventListener("error", a), n.removeEventListener("abort", a), n.removeEventListener("load", o), n.removeEventListener("timeout", a), e.reportProgress && (n.removeEventListener("progress", u), null !== r && n.upload && n.upload.removeEventListener("progress", c)), n.readyState !== n.DONE && n.abort()
                                }
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Km))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })();
            const Ym = new Kn("XSRF_COOKIE_NAME"),
                Jm = new Kn("XSRF_HEADER_NAME");
            class Xm {}
            let ey = (() => {
                    class e {
                        constructor(e, t, n) {
                            this.doc = e, this.platform = t, this.cookieName = n, this.lastCookieString = "", this.lastToken = null, this.parseCount = 0
                        }
                        getToken() {
                            if ("server" === this.platform) return null;
                            const e = this.doc.cookie || "";
                            return e !== this.lastCookieString && (this.parseCount++, this.lastToken = Fh(e, this.cookieName), this.lastCookieString = e), this.lastToken
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Ic), dr(Vu), dr(Ym))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                ty = (() => {
                    class e {
                        constructor(e, t) {
                            this.tokenService = e, this.headerName = t
                        }
                        intercept(e, t) {
                            const n = e.url.toLowerCase();
                            if ("GET" === e.method || "HEAD" === e.method || n.startsWith("http://") || n.startsWith("https://")) return t.handle(e);
                            const r = this.tokenService.getToken();
                            return null === r || e.headers.has(this.headerName) || (e = e.clone({
                                headers: e.headers.set(this.headerName, r)
                            })), t.handle(e)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Xm), dr(Jm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                ny = (() => {
                    class e {
                        constructor(e, t) {
                            this.backend = e, this.injector = t, this.chain = null
                        }
                        handle(e) {
                            if (null === this.chain) {
                                const e = this.injector.get(qm, []);
                                this.chain = e.reduceRight((e, t) => new zm(e, t), this.backend)
                            }
                            return this.chain.handle(e)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Dm), dr(go))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                ry = (() => {
                    class e {
                        static disable() {
                            return {
                                ngModule: e,
                                providers: [{
                                    provide: ty,
                                    useClass: Gm
                                }]
                            }
                        }
                        static withOptions(t = {}) {
                            return {
                                ngModule: e,
                                providers: [t.cookieName ? {
                                    provide: Ym,
                                    useValue: t.cookieName
                                } : [], t.headerName ? {
                                    provide: Jm,
                                    useValue: t.headerName
                                } : []]
                            }
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: [ty, {
                            provide: qm,
                            useExisting: ty,
                            multi: !0
                        }, {
                            provide: Xm,
                            useClass: ey
                        }, {
                            provide: Ym,
                            useValue: "XSRF-TOKEN"
                        }, {
                            provide: Jm,
                            useValue: "X-XSRF-TOKEN"
                        }]
                    }), e
                })(),
                sy = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: [Hm, {
                            provide: Am,
                            useClass: ny
                        }, Qm, {
                            provide: Dm,
                            useExisting: Qm
                        }, Zm, {
                            provide: Km,
                            useExisting: Zm
                        }],
                        imports: [
                            [ry.withOptions({
                                cookieName: "XSRF-TOKEN",
                                headerName: "X-XSRF-TOKEN"
                            })]
                        ]
                    }), e
                })();
            new Tm({
                "Content-Type": "application/json"
            });
            let oy = (() => {
                class e {
                    constructor(e) {
                        this.http = e, this.loginUrl = iy + "login/", this.signupUrl = iy + "createuser/", this.notificationsUrl = iy + "getnotifications/", this.otpUrl = iy + "sendotp", this.validateGoogleLoginUrl = iy + "validategooglelogin", this.validateGoogleSignupUrl = iy + "validategooglesignup", this.resetForgotPasswordURl = iy + "resetpassword", this.updateProfileUrl = iy + "updateprofile", this.changePasswordUrl = iy + "changepassword", this.getProfileUrl = iy + "getprofile"
                    }
                    getToken(e, t, n) {
                        let r = new FormData;
                        return r.append("username", e), r.append("password", t), r.append("token", n), this.http.post(this.loginUrl, r)
                    }
                    signUp(e, t, n, r, s, i, o) {
                        let a = new FormData;
                        return a.append("email", n), a.append("username", e), a.append("name", t), a.append("password", r), a.append("otp", s), a.append("password2", o), a.append("captchatoken", i), this.http.post(this.signupUrl, a)
                    }
                    getNotifications(e, t) {
                        return this.http.get(this.notificationsUrl + t, {
                            headers: {
                                Authorization: "Token " + e
                            }
                        })
                    }
                    sendOtp(e, t) {
                        let n = new FormData;
                        return n.append("email", t), n.append("captchatoken", e), this.http.post(this.otpUrl, n)
                    }
                    validateGoogleLogin(e, t) {
                        let n = new FormData;
                        return n.append("idToken", t), n.append("captchatoken", e), this.http.post(this.validateGoogleLoginUrl, n)
                    }
                    validateGoogleSignup(e, t) {
                        let n = new FormData;
                        return n.append("idToken", t), n.append("captchatoken", e), this.http.post(this.validateGoogleSignupUrl, n)
                    }
                    resetForgotPassword(e, t, n, r) {
                        let s = new FormData;
                        return s.append("captchatoken", e), s.append("email", t), s.append("password", n), s.append("otp", r), this.http.post(this.resetForgotPasswordURl, s)
                    }
                    getProfile(e) {
                        let t = new FormData;
                        return this.http.post(this.getProfileUrl, t, {
                            headers: {
                                Authorization: "Token " + e
                            }
                        })
                    }
                    updateProfile(e, t, n, r) {
                        let s = new FormData;
                        return s.append("name", e), s.append("phone", t), s.append("address", n), this.http.post(this.updateProfileUrl, s, {
                            headers: {
                                Authorization: "Token " + r
                            }
                        })
                    }
                    changePassword(e, t, n) {
                        let r = new FormData;
                        return r.append("oldpassword", e), r.append("newpassword", t), this.http.post(this.changePasswordUrl, r, {
                            headers: {
                                Authorization: "Token " + n
                            }
                        })
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Hm))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac,
                    providedIn: "root"
                }), e
            })();

            function ay(e, t) {
                1 & e && (jo(0, "div"), Aa(1, " No Notifications to display "), Bo())
            }

            function ly(e, t) {
                if (1 & e && (jo(0, "div", 5), Vo(1, "img", 6), jo(2, "div", 7), jo(3, "a", 8), jo(4, "h5", 9), Aa(5), Bo(), Vo(6, "strong", 10), jo(7, "div"), Aa(8), Bo(), jo(9, "small", 11), Aa(10), uu(11, "date"), Bo(), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(3), Jo("routerLink", e.url), ni(2), Ta("Notification from ", e.actor, ""), ni(3), Ta(" ", e.description, " "), ni(2), Da(hu(11, 4, e.timestamp, "short"))
                }
            }

            function uy(e, t) {
                1 & e && (jo(0, "div", 12), jo(1, "div", 13), jo(2, "span", 14), Aa(3, "Loading..."), Bo(), Bo(), Bo())
            }
            let cy = (() => {
                class e {
                    constructor(e) {
                        this.loginService = e, this.lastNotificationSno = 0, this.notifications = [], this.notificationsEnd = !1, this.showLoader = !1;
                        let t = localStorage.getItem("token");
                        if (null !== t) {
                            let e = JSON.parse(t);
                            this.accessToken = e.token, this.username = e.username
                        }
                        this.loginService.getNotifications(this.accessToken, this.lastNotificationSno).subscribe(e => {
                            this.notifications = e
                        })
                    }
                    onScroll() {
                        if (window.innerHeight + window.scrollY >= document.body.scrollHeight - 10)
                            if (console.log("Loading More Notifications..."), this.showLoader || this.notificationsEnd || 0 == this.notifications.length) console.log("All notifications already loaded or are being loaded already");
                            else {
                                this.showLoader = !0;
                                const [e] = this.notifications.slice(-1);
                                this.loginService.getNotifications(this.accessToken, e.id).subscribe(e => {
                                    0 == e.length && (this.notificationsEnd = !0), this.notifications = this.notifications.concat(e), this.showLoader = !1
                                })
                            }
                    }
                    ngOnInit() {}
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(oy))
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["app-all-notifications"]
                    ],
                    hostBindings: function(e, t) {
                        1 & e && qo("scroll", function() {
                            return t.onScroll()
                        }, !1, ps)
                    },
                    decls: 7,
                    vars: 3,
                    consts: [
                        [1, "container", "my-4", "main-container"],
                        [1, "my-3"],
                        [4, "ngIf"],
                        ["class", "media my-3", 4, "ngFor", "ngForOf"],
                        ["class", "text-center", 4, "ngIf"],
                        [1, "media", "my-3"],
                        ["src", "../../../assets/img/logo.png", "alt", "...", 1, "mr-3"],
                        [1, "media-body"],
                        [1, "pl-0", 3, "routerLink"],
                        [1, "mt-0"],
                        [1, "text-info"],
                        [1, "text-danger"],
                        [1, "text-center"],
                        ["role", "status", 1, "spinner-border", "text-danger"],
                        [1, "sr-only"]
                    ],
                    template: function(e, t) {
                        1 & e && (jo(0, "div", 0), jo(1, "h2"), Aa(2, "Your Notifications"), Bo(), jo(3, "div", 1), Io(4, ay, 2, 0, "div", 2), Io(5, ly, 12, 7, "div", 3), Io(6, uy, 4, 0, "div", 4), Bo(), Bo()), 2 & e && (ni(4), No("ngIf", 0 == t.notifications.length), ni(1), No("ngForOf", t.notifications), ni(1), No("ngIf", t.showLoader))
                    },
                    directives: [Nh, Mh, om],
                    pipes: [Wh],
                    styles: [".media[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:50px}.media-body[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#000;text-decoration:none}"]
                }), e
            })();
            new Tm({
                "Content-Type": "application/json"
            });
            let hy = (() => {
                class e {
                    constructor(e) {
                        this.http = e, this.getBlogHomeUrl = iy + "blog/getbloghome", this.getBlogUrl = iy + "blog/getblog/"
                    }
                    getBlogHome(e) {
                        return this.http.get(`${this.getBlogHomeUrl}?number=${e}`)
                    }
                    getBlog(e) {
                        return this.http.get(`${this.getBlogUrl}${e}`)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Hm))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac,
                    providedIn: "root"
                }), e
            })();

            function dy(e, t) {
                1 & e && Vo(0, "div", 10)
            }

            function py(e, t) {
                if (1 & e && (jo(0, "div", 12), jo(1, "h2"), jo(2, "a", 13), Aa(3), Bo(), Bo(), jo(4, "p"), Aa(5), Bo(), jo(6, "a", 14), Aa(7, "Read More "), Vo(8, "span", 15), Bo(), Vo(9, "hr"), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(2), Xo("routerLink", "/blogpost/", e.slug, ""), ni(1), Da(e.title), ni(2), Da(e.metaDesc), ni(1), Xo("routerLink", "/blogpost/", e.slug, "")
                }
            }

            function fy(e, t) {
                if (1 & e && (jo(0, "div"), Io(1, py, 10, 4, "div", 11), Bo()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngForOf", e.blogs)
                }
            }
            let gy = (() => {
                    class e {
                        constructor(e, t, n, r, s) {
                            this.router = e, this.route = t, this.blogService = n, this.titleService = r, this.metaService = s, this.number = 1, this.prevDisabled = !0, this.nextDisabled = !1, this.route.queryParams.subscribe(e => {
                                void 0 !== e.number && (this.number = Number(e.number), this.number <= 1 && (this.prevDisabled = !0))
                            })
                        }
                        ngOnInit() {
                            this.blogService.getBlogHome(this.number).subscribe(e => {
                                0 == e.success || 0 == e.length ? window.location.replace("./index.html") : this.blogs = e
                            }), this.titleService.setTitle("Shreesha"), this.metaService.addTags([{
                                name: "keywords",
                                content: "blog, coding blog, programming blog, shreesha's blog"
                            }, {
                                name: "description",
                                content: "visit shreesha.tk"
                            }])
                        }
                        prevClick() {
                            this.number = this.number - 1, 1 == this.number && (this.prevDisabled = !0), this.router.navigate(["."], {
                                relativeTo: this.route,
                                queryParams: {
                                    number: this.number
                                }
                            }), this.blogService.getBlogHome(this.number).subscribe(e => {
                                this.blogs = e
                            })
                        }
                        nextClick() {
                            this.number = this.number + 1, this.prevDisabled = 1 == this.number, this.blogService.getBlogHome(this.number).subscribe(e => {
                                this.blogs = e, 0 == e.length && (this.number = 1, this.blogService.getBlogHome(this.number).subscribe(e => {
                                    this.blogs = e
                                })), this.router.navigate(["."], {
                                    relativeTo: this.route,
                                    queryParams: {
                                        number: this.number
                                    }
                                })
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(im), Ro(Bf), Ro(hy), Ro(Id), Ro(Od))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-blog-home"]
                        ],
                        decls: 17,
                        vars: 4,
                        consts: [
                            [1, "main-container", "container", "my-4"],
                            [1, "row"],
                            [1, "col-lg-12"],
                            [1, "page-header"],
                            [1, "text-center"],
                            ["class", "my-4 spinner-border text-danger m-auto", "role", "status", 4, "ngIf"],
                            [1, "sr-only"],
                            [4, "ngIf"],
                            [1, "btn", "btn-danger", "float-left", 3, "disabled", "click"],
                            [1, "btn", "btn-danger", "float-right", 3, "disabled", "click"],
                            ["role", "status", 1, "my-4", "spinner-border", "text-danger", "m-auto"],
                            ["class", "blogs", 4, "ngFor", "ngForOf"],
                            [1, "blogs"],
                            [1, "text-dark", 3, "routerLink"],
                            [1, "btn", "btn-sm", "btn-outline-danger", 3, "routerLink"],
                            [1, "glyphicon", "glyphicon-chevron-right"]
                        ],
                        template: function(e, t) {
                            1 & e && (jo(0, "div", 0), jo(1, "div", 1), jo(2, "div", 2), jo(3, "h1", 3), Aa(4, " Coding Capsules "), jo(5, "small"), Aa(6, "By Code With Harry"), Bo(), Bo(), Vo(7, "hr"), jo(8, "div", 4), Io(9, dy, 1, 0, "div", 5), jo(10, "span", 6), Aa(11, "Loading..."), Bo(), Bo(), Io(12, fy, 2, 1, "div", 7), jo(13, "button", 8), qo("click", function() {
                                return t.prevClick()
                            }), Aa(14, "\u2190 Previous "), Bo(), jo(15, "button", 9), qo("click", function() {
                                return t.nextClick()
                            }), Aa(16, "Next \u2192"), Bo(), Bo(), Bo(), Bo()), 2 & e && (ni(9), No("ngIf", !t.blogs), ni(3), No("ngIf", t.blogs), ni(1), No("disabled", t.prevDisabled), ni(2), No("disabled", t.nextDisabled))
                        },
                        directives: [Nh, Mh, om],
                        styles: [""]
                    }), e
                })(),
                my = (() => {
                    class e {
                        constructor(e) {
                            this.http = e, this.getMoreCommentsUrl = iy + "blog/getcomments", this.postCommentUrl = iy + "blog/postcomment"
                        }
                        getMoreComments(e, t, n) {
                            return this.http.get(`${this.getMoreCommentsUrl}/${e}/${t}/${n}`, {
                                headers: {
                                    ignoreLoadingBar: ""
                                }
                            })
                        }
                        postComment(e, t, n, r, s) {
                            let i = new FormData;
                            return i.append("comment", e), i.append("slug", t), i.append("replyOf", n.toString()), i.append("captchatoken", s), this.http.post(`${this.postCommentUrl}`, i, {
                                headers: {
                                    ignoreLoadingBar: "",
                                    Authorization: "Token " + r
                                }
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Hm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac,
                        providedIn: "root"
                    }), e
                })();

            function yy(e, t) {
                return new b(n => {
                    const r = e.length;
                    if (0 === r) return void n.complete();
                    const s = new Array(r);
                    let i = 0,
                        o = 0;
                    for (let a = 0; a < r; a++) {
                        const l = N(e[a]);
                        let u = !1;
                        n.add(l.subscribe({
                            next: e => {
                                u || (u = !0, o++), s[a] = e
                            },
                            error: e => n.error(e),
                            complete: () => {
                                i++, i !== r && u || (o === r && n.next(t ? t.reduce((e, t, n) => (e[t] = s[n], e), {}) : s), n.complete())
                            }
                        }))
                    }
                })
            }
            class by {}
            const vy = new Kn("NgValueAccessor"),
                _y = {
                    provide: vy,
                    useExisting: se(() => wy),
                    multi: !0
                };
            let wy = (() => {
                class e extends by {
                    constructor(e, t) {
                        super(), this._renderer = e, this._elementRef = t, this.onChange = e => {}, this.onTouched = () => {}
                    }
                    writeValue(e) {
                        this._renderer.setProperty(this._elementRef.nativeElement, "checked", e)
                    }
                    registerOnChange(e) {
                        this.onChange = e
                    }
                    registerOnTouched(e) {
                        this.onTouched = e
                    }
                    setDisabledState(e) {
                        this._renderer.setProperty(this._elementRef.nativeElement, "disabled", e)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(il), Ro(nl))
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["input", "type", "checkbox", "formControlName", ""],
                        ["input", "type", "checkbox", "formControl", ""],
                        ["input", "type", "checkbox", "ngModel", ""]
                    ],
                    hostBindings: function(e, t) {
                        1 & e && qo("change", function(e) {
                            return t.onChange(e.target.checked)
                        })("blur", function() {
                            return t.onTouched()
                        })
                    },
                    features: [Za([_y]), yo]
                }), e
            })();
            const Cy = {
                    provide: vy,
                    useExisting: se(() => xy),
                    multi: !0
                },
                Sy = new Kn("CompositionEventMode");
            let xy = (() => {
                class e {
                    constructor(e, t, n) {
                        this._renderer = e, this._elementRef = t, this._compositionMode = n, this.onChange = e => {}, this.onTouched = () => {}, this._composing = !1, null == this._compositionMode && (this._compositionMode = ! function() {
                            const e = Pc() ? Pc().getUserAgent() : "";
                            return /android (\d+)/.test(e.toLowerCase())
                        }())
                    }
                    writeValue(e) {
                        this._renderer.setProperty(this._elementRef.nativeElement, "value", null == e ? "" : e)
                    }
                    registerOnChange(e) {
                        this.onChange = e
                    }
                    registerOnTouched(e) {
                        this.onTouched = e
                    }
                    setDisabledState(e) {
                        this._renderer.setProperty(this._elementRef.nativeElement, "disabled", e)
                    }
                    _handleInput(e) {
                        (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(e)
                    }
                    _compositionStart() {
                        this._composing = !0
                    }
                    _compositionEnd(e) {
                        this._composing = !1, this._compositionMode && this.onChange(e)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(il), Ro(nl), Ro(Sy, 8))
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["input", "formControlName", "", 3, "type", "checkbox"],
                        ["textarea", "formControlName", ""],
                        ["input", "formControl", "", 3, "type", "checkbox"],
                        ["textarea", "formControl", ""],
                        ["input", "ngModel", "", 3, "type", "checkbox"],
                        ["textarea", "ngModel", ""],
                        ["", "ngDefaultControl", ""]
                    ],
                    hostBindings: function(e, t) {
                        1 & e && qo("input", function(e) {
                            return t._handleInput(e.target.value)
                        })("blur", function() {
                            return t.onTouched()
                        })("compositionstart", function() {
                            return t._compositionStart()
                        })("compositionend", function(e) {
                            return t._compositionEnd(e.target.value)
                        })
                    },
                    features: [Za([Cy])]
                }), e
            })();

            function Ey(e) {
                return null == e || 0 === e.length
            }

            function ky(e) {
                return null != e && "number" == typeof e.length
            }
            const Ay = new Kn("NgValidators"),
                Dy = new Kn("NgAsyncValidators"),
                Ty = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;

            function Oy(e) {
                return null
            }

            function Fy(e) {
                return null != e
            }

            function Py(e) {
                const t = $o(e) ? N(e) : e;
                return zo(t), t
            }

            function Iy(e) {
                let t = {};
                return e.forEach(e => {
                    t = null != e ? Object.assign(Object.assign({}, t), e) : t
                }), 0 === Object.keys(t).length ? null : t
            }

            function My(e, t) {
                return t.map(t => t(e))
            }

            function Ry(e) {
                return e.map(e => function(e) {
                    return !e.validate
                }(e) ? e : t => e.validate(t))
            }

            function Ny(e) {
                return null != e ? function(e) {
                    if (!e) return null;
                    const t = e.filter(Fy);
                    return 0 == t.length ? null : function(e) {
                        return Iy(My(e, t))
                    }
                }(Ry(e)) : null
            }

            function Ly(e) {
                return null != e ? function(e) {
                    if (!e) return null;
                    const t = e.filter(Fy);
                    return 0 == t.length ? null : function(e) {
                        return function(...e) {
                            if (1 === e.length) {
                                const t = e[0];
                                if (l(t)) return yy(t, null);
                                if (u(t) && Object.getPrototypeOf(t) === Object.prototype) {
                                    const e = Object.keys(t);
                                    return yy(e.map(e => t[e]), e)
                                }
                            }
                            if ("function" == typeof e[e.length - 1]) {
                                const t = e.pop();
                                return yy(e = 1 === e.length && l(e[0]) ? e[0] : e, null).pipe(k(e => t(...e)))
                            }
                            return yy(e, null)
                        }(My(e, t).map(Py)).pipe(k(Iy))
                    }
                }(Ry(e)) : null
            }

            function jy(e, t) {
                return null === e ? [t] : Array.isArray(e) ? [...e, t] : [e, t]
            }
            let By = (() => {
                    class e {
                        constructor() {
                            this._rawValidators = [], this._rawAsyncValidators = [], this._onDestroyCallbacks = []
                        }
                        get value() {
                            return this.control ? this.control.value : null
                        }
                        get valid() {
                            return this.control ? this.control.valid : null
                        }
                        get invalid() {
                            return this.control ? this.control.invalid : null
                        }
                        get pending() {
                            return this.control ? this.control.pending : null
                        }
                        get disabled() {
                            return this.control ? this.control.disabled : null
                        }
                        get enabled() {
                            return this.control ? this.control.enabled : null
                        }
                        get errors() {
                            return this.control ? this.control.errors : null
                        }
                        get pristine() {
                            return this.control ? this.control.pristine : null
                        }
                        get dirty() {
                            return this.control ? this.control.dirty : null
                        }
                        get touched() {
                            return this.control ? this.control.touched : null
                        }
                        get status() {
                            return this.control ? this.control.status : null
                        }
                        get untouched() {
                            return this.control ? this.control.untouched : null
                        }
                        get statusChanges() {
                            return this.control ? this.control.statusChanges : null
                        }
                        get valueChanges() {
                            return this.control ? this.control.valueChanges : null
                        }
                        get path() {
                            return null
                        }
                        _setValidators(e) {
                            this._rawValidators = e || [], this._composedValidatorFn = Ny(this._rawValidators)
                        }
                        _setAsyncValidators(e) {
                            this._rawAsyncValidators = e || [], this._composedAsyncValidatorFn = Ly(this._rawAsyncValidators)
                        }
                        get validator() {
                            return this._composedValidatorFn || null
                        }
                        get asyncValidator() {
                            return this._composedAsyncValidatorFn || null
                        }
                        _registerOnDestroy(e) {
                            this._onDestroyCallbacks.push(e)
                        }
                        _invokeOnDestroyCallbacks() {
                            this._onDestroyCallbacks.forEach(e => e()), this._onDestroyCallbacks = []
                        }
                        reset(e) {
                            this.control && this.control.reset(e)
                        }
                        hasError(e, t) {
                            return !!this.control && this.control.hasError(e, t)
                        }
                        getError(e, t) {
                            return this.control ? this.control.getError(e, t) : null
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275dir = Ze({
                        type: e
                    }), e
                })(),
                Vy = (() => {
                    class e extends By {
                        get formDirective() {
                            return null
                        }
                        get path() {
                            return null
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return Uy(t || e)
                    }, e.\u0275dir = Ze({
                        type: e,
                        features: [yo]
                    }), e
                })();
            const Uy = zn(Vy);
            class $y extends By {
                constructor() {
                    super(...arguments), this._parent = null, this.name = null, this.valueAccessor = null
                }
            }
            class Hy {
                constructor(e) {
                    this._cd = e
                }
                is(e) {
                    var t, n;
                    return !!(null === (n = null === (t = this._cd) || void 0 === t ? void 0 : t.control) || void 0 === n ? void 0 : n[e])
                }
            }
            let zy = (() => {
                    class e extends Hy {
                        constructor(e) {
                            super(e)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro($y, 2))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["", "formControlName", ""],
                            ["", "ngModel", ""],
                            ["", "formControl", ""]
                        ],
                        hostVars: 14,
                        hostBindings: function(e, t) {
                            2 & e && pa("ng-untouched", t.is("untouched"))("ng-touched", t.is("touched"))("ng-pristine", t.is("pristine"))("ng-dirty", t.is("dirty"))("ng-valid", t.is("valid"))("ng-invalid", t.is("invalid"))("ng-pending", t.is("pending"))
                        },
                        features: [yo]
                    }), e
                })(),
                qy = (() => {
                    class e extends Hy {
                        constructor(e) {
                            super(e)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(Vy, 10))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["", "formGroupName", ""],
                            ["", "formArrayName", ""],
                            ["", "ngModelGroup", ""],
                            ["", "formGroup", ""],
                            ["form", 3, "ngNoForm", ""],
                            ["", "ngForm", ""]
                        ],
                        hostVars: 14,
                        hostBindings: function(e, t) {
                            2 & e && pa("ng-untouched", t.is("untouched"))("ng-touched", t.is("touched"))("ng-pristine", t.is("pristine"))("ng-dirty", t.is("dirty"))("ng-valid", t.is("valid"))("ng-invalid", t.is("invalid"))("ng-pending", t.is("pending"))
                        },
                        features: [yo]
                    }), e
                })();

            function Gy(e, t) {
                Ky(e, t, !0), t.valueAccessor.writeValue(e.value),
                    function(e, t) {
                        t.valueAccessor.registerOnChange(n => {
                            e._pendingValue = n, e._pendingChange = !0, e._pendingDirty = !0, "change" === e.updateOn && Zy(e, t)
                        })
                    }(e, t),
                    function(e, t) {
                        const n = (e, n) => {
                            t.valueAccessor.writeValue(e), n && t.viewToModelUpdate(e)
                        };
                        e.registerOnChange(n), t._registerOnDestroy(() => {
                            e._unregisterOnChange(n)
                        })
                    }(e, t),
                    function(e, t) {
                        t.valueAccessor.registerOnTouched(() => {
                            e._pendingTouched = !0, "blur" === e.updateOn && e._pendingChange && Zy(e, t), "submit" !== e.updateOn && e.markAsTouched()
                        })
                    }(e, t),
                    function(e, t) {
                        if (t.valueAccessor.setDisabledState) {
                            const n = e => {
                                t.valueAccessor.setDisabledState(e)
                            };
                            e.registerOnDisabledChange(n), t._registerOnDestroy(() => {
                                e._unregisterOnDisabledChange(n)
                            })
                        }
                    }(e, t)
            }

            function Wy(e, t) {
                e.forEach(e => {
                    e.registerOnValidatorChange && e.registerOnValidatorChange(t)
                })
            }

            function Ky(e, t, n) {
                const r = function(e) {
                    return e._rawValidators
                }(e);
                null !== t.validator ? e.setValidators(jy(r, t.validator)) : "function" == typeof r && e.setValidators([r]);
                const s = function(e) {
                    return e._rawAsyncValidators
                }(e);
                if (null !== t.asyncValidator ? e.setAsyncValidators(jy(s, t.asyncValidator)) : "function" == typeof s && e.setAsyncValidators([s]), n) {
                    const n = () => e.updateValueAndValidity();
                    Wy(t._rawValidators, n), Wy(t._rawAsyncValidators, n)
                }
            }

            function Zy(e, t) {
                e._pendingDirty && e.markAsDirty(), e.setValue(e._pendingValue, {
                    emitModelToViewChange: !1
                }), t.viewToModelUpdate(e._pendingValue), e._pendingChange = !1
            }

            function Qy(e, t) {
                const n = e.indexOf(t);
                n > -1 && e.splice(n, 1)
            }
            const Yy = "VALID",
                Jy = "INVALID",
                Xy = "PENDING",
                eb = "DISABLED";

            function tb(e) {
                return (ib(e) ? e.validators : e) || null
            }

            function nb(e) {
                return Array.isArray(e) ? Ny(e) : e || null
            }

            function rb(e, t) {
                return (ib(t) ? t.asyncValidators : e) || null
            }

            function sb(e) {
                return Array.isArray(e) ? Ly(e) : e || null
            }

            function ib(e) {
                return null != e && !Array.isArray(e) && "object" == typeof e
            }
            class ob {
                constructor(e, t) {
                    this._hasOwnPendingAsyncValidator = !1, this._onCollectionChange = () => {}, this._parent = null, this.pristine = !0, this.touched = !1, this._onDisabledChange = [], this._rawValidators = e, this._rawAsyncValidators = t, this._composedValidatorFn = nb(this._rawValidators), this._composedAsyncValidatorFn = sb(this._rawAsyncValidators)
                }
                get validator() {
                    return this._composedValidatorFn
                }
                set validator(e) {
                    this._rawValidators = this._composedValidatorFn = e
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn
                }
                set asyncValidator(e) {
                    this._rawAsyncValidators = this._composedAsyncValidatorFn = e
                }
                get parent() {
                    return this._parent
                }
                get valid() {
                    return this.status === Yy
                }
                get invalid() {
                    return this.status === Jy
                }
                get pending() {
                    return this.status == Xy
                }
                get disabled() {
                    return this.status === eb
                }
                get enabled() {
                    return this.status !== eb
                }
                get dirty() {
                    return !this.pristine
                }
                get untouched() {
                    return !this.touched
                }
                get updateOn() {
                    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change"
                }
                setValidators(e) {
                    this._rawValidators = e, this._composedValidatorFn = nb(e)
                }
                setAsyncValidators(e) {
                    this._rawAsyncValidators = e, this._composedAsyncValidatorFn = sb(e)
                }
                clearValidators() {
                    this.validator = null
                }
                clearAsyncValidators() {
                    this.asyncValidator = null
                }
                markAsTouched(e = {}) {
                    this.touched = !0, this._parent && !e.onlySelf && this._parent.markAsTouched(e)
                }
                markAllAsTouched() {
                    this.markAsTouched({
                        onlySelf: !0
                    }), this._forEachChild(e => e.markAllAsTouched())
                }
                markAsUntouched(e = {}) {
                    this.touched = !1, this._pendingTouched = !1, this._forEachChild(e => {
                        e.markAsUntouched({
                            onlySelf: !0
                        })
                    }), this._parent && !e.onlySelf && this._parent._updateTouched(e)
                }
                markAsDirty(e = {}) {
                    this.pristine = !1, this._parent && !e.onlySelf && this._parent.markAsDirty(e)
                }
                markAsPristine(e = {}) {
                    this.pristine = !0, this._pendingDirty = !1, this._forEachChild(e => {
                        e.markAsPristine({
                            onlySelf: !0
                        })
                    }), this._parent && !e.onlySelf && this._parent._updatePristine(e)
                }
                markAsPending(e = {}) {
                    this.status = Xy, !1 !== e.emitEvent && this.statusChanges.emit(this.status), this._parent && !e.onlySelf && this._parent.markAsPending(e)
                }
                disable(e = {}) {
                    const t = this._parentMarkedDirty(e.onlySelf);
                    this.status = eb, this.errors = null, this._forEachChild(t => {
                        t.disable(Object.assign(Object.assign({}, e), {
                            onlySelf: !0
                        }))
                    }), this._updateValue(), !1 !== e.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._updateAncestors(Object.assign(Object.assign({}, e), {
                        skipPristineCheck: t
                    })), this._onDisabledChange.forEach(e => e(!0))
                }
                enable(e = {}) {
                    const t = this._parentMarkedDirty(e.onlySelf);
                    this.status = Yy, this._forEachChild(t => {
                        t.enable(Object.assign(Object.assign({}, e), {
                            onlySelf: !0
                        }))
                    }), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: e.emitEvent
                    }), this._updateAncestors(Object.assign(Object.assign({}, e), {
                        skipPristineCheck: t
                    })), this._onDisabledChange.forEach(e => e(!1))
                }
                _updateAncestors(e) {
                    this._parent && !e.onlySelf && (this._parent.updateValueAndValidity(e), e.skipPristineCheck || this._parent._updatePristine(), this._parent._updateTouched())
                }
                setParent(e) {
                    this._parent = e
                }
                updateValueAndValidity(e = {}) {
                    this._setInitialStatus(), this._updateValue(), this.enabled && (this._cancelExistingSubscription(), this.errors = this._runValidator(), this.status = this._calculateStatus(), this.status !== Yy && this.status !== Xy || this._runAsyncValidator(e.emitEvent)), !1 !== e.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._parent && !e.onlySelf && this._parent.updateValueAndValidity(e)
                }
                _updateTreeValidity(e = {
                    emitEvent: !0
                }) {
                    this._forEachChild(t => t._updateTreeValidity(e)), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: e.emitEvent
                    })
                }
                _setInitialStatus() {
                    this.status = this._allControlsDisabled() ? eb : Yy
                }
                _runValidator() {
                    return this.validator ? this.validator(this) : null
                }
                _runAsyncValidator(e) {
                    if (this.asyncValidator) {
                        this.status = Xy, this._hasOwnPendingAsyncValidator = !0;
                        const t = Py(this.asyncValidator(this));
                        this._asyncValidationSubscription = t.subscribe(t => {
                            this._hasOwnPendingAsyncValidator = !1, this.setErrors(t, {
                                emitEvent: e
                            })
                        })
                    }
                }
                _cancelExistingSubscription() {
                    this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(), this._hasOwnPendingAsyncValidator = !1)
                }
                setErrors(e, t = {}) {
                    this.errors = e, this._updateControlsErrors(!1 !== t.emitEvent)
                }
                get(e) {
                    return function(e, t, n) {
                        if (null == t) return null;
                        if (Array.isArray(t) || (t = t.split(".")), Array.isArray(t) && 0 === t.length) return null;
                        let r = e;
                        return t.forEach(e => {
                            r = r instanceof lb ? r.controls.hasOwnProperty(e) ? r.controls[e] : null : r instanceof ub && r.at(e) || null
                        }), r
                    }(this, e)
                }
                getError(e, t) {
                    const n = t ? this.get(t) : this;
                    return n && n.errors ? n.errors[e] : null
                }
                hasError(e, t) {
                    return !!this.getError(e, t)
                }
                get root() {
                    let e = this;
                    for (; e._parent;) e = e._parent;
                    return e
                }
                _updateControlsErrors(e) {
                    this.status = this._calculateStatus(), e && this.statusChanges.emit(this.status), this._parent && this._parent._updateControlsErrors(e)
                }
                _initObservables() {
                    this.valueChanges = new gu, this.statusChanges = new gu
                }
                _calculateStatus() {
                    return this._allControlsDisabled() ? eb : this.errors ? Jy : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(Xy) ? Xy : this._anyControlsHaveStatus(Jy) ? Jy : Yy
                }
                _anyControlsHaveStatus(e) {
                    return this._anyControls(t => t.status === e)
                }
                _anyControlsDirty() {
                    return this._anyControls(e => e.dirty)
                }
                _anyControlsTouched() {
                    return this._anyControls(e => e.touched)
                }
                _updatePristine(e = {}) {
                    this.pristine = !this._anyControlsDirty(), this._parent && !e.onlySelf && this._parent._updatePristine(e)
                }
                _updateTouched(e = {}) {
                    this.touched = this._anyControlsTouched(), this._parent && !e.onlySelf && this._parent._updateTouched(e)
                }
                _isBoxedValue(e) {
                    return "object" == typeof e && null !== e && 2 === Object.keys(e).length && "value" in e && "disabled" in e
                }
                _registerOnCollectionChange(e) {
                    this._onCollectionChange = e
                }
                _setUpdateStrategy(e) {
                    ib(e) && null != e.updateOn && (this._updateOn = e.updateOn)
                }
                _parentMarkedDirty(e) {
                    return !e && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty()
                }
            }
            class ab extends ob {
                constructor(e = null, t, n) {
                    super(tb(t), rb(n, t)), this._onChange = [], this._applyFormState(e), this._setUpdateStrategy(t), this._initObservables(), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: !!n
                    })
                }
                setValue(e, t = {}) {
                    this.value = this._pendingValue = e, this._onChange.length && !1 !== t.emitModelToViewChange && this._onChange.forEach(e => e(this.value, !1 !== t.emitViewToModelChange)), this.updateValueAndValidity(t)
                }
                patchValue(e, t = {}) {
                    this.setValue(e, t)
                }
                reset(e = null, t = {}) {
                    this._applyFormState(e), this.markAsPristine(t), this.markAsUntouched(t), this.setValue(this.value, t), this._pendingChange = !1
                }
                _updateValue() {}
                _anyControls(e) {
                    return !1
                }
                _allControlsDisabled() {
                    return this.disabled
                }
                registerOnChange(e) {
                    this._onChange.push(e)
                }
                _unregisterOnChange(e) {
                    Qy(this._onChange, e)
                }
                registerOnDisabledChange(e) {
                    this._onDisabledChange.push(e)
                }
                _unregisterOnDisabledChange(e) {
                    Qy(this._onDisabledChange, e)
                }
                _forEachChild(e) {}
                _syncPendingControls() {
                    return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(), this._pendingTouched && this.markAsTouched(), !this._pendingChange) || (this.setValue(this._pendingValue, {
                        onlySelf: !0,
                        emitModelToViewChange: !1
                    }), 0))
                }
                _applyFormState(e) {
                    this._isBoxedValue(e) ? (this.value = this._pendingValue = e.value, e.disabled ? this.disable({
                        onlySelf: !0,
                        emitEvent: !1
                    }) : this.enable({
                        onlySelf: !0,
                        emitEvent: !1
                    })) : this.value = this._pendingValue = e
                }
            }
            class lb extends ob {
                constructor(e, t, n) {
                    super(tb(t), rb(n, t)), this.controls = e, this._initObservables(), this._setUpdateStrategy(t), this._setUpControls(), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: !!n
                    })
                }
                registerControl(e, t) {
                    return this.controls[e] ? this.controls[e] : (this.controls[e] = t, t.setParent(this), t._registerOnCollectionChange(this._onCollectionChange), t)
                }
                addControl(e, t) {
                    this.registerControl(e, t), this.updateValueAndValidity(), this._onCollectionChange()
                }
                removeControl(e) {
                    this.controls[e] && this.controls[e]._registerOnCollectionChange(() => {}), delete this.controls[e], this.updateValueAndValidity(), this._onCollectionChange()
                }
                setControl(e, t) {
                    this.controls[e] && this.controls[e]._registerOnCollectionChange(() => {}), delete this.controls[e], t && this.registerControl(e, t), this.updateValueAndValidity(), this._onCollectionChange()
                }
                contains(e) {
                    return this.controls.hasOwnProperty(e) && this.controls[e].enabled
                }
                setValue(e, t = {}) {
                    this._checkAllValuesPresent(e), Object.keys(e).forEach(n => {
                        this._throwIfControlMissing(n), this.controls[n].setValue(e[n], {
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        })
                    }), this.updateValueAndValidity(t)
                }
                patchValue(e, t = {}) {
                    null != e && (Object.keys(e).forEach(n => {
                        this.controls[n] && this.controls[n].patchValue(e[n], {
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        })
                    }), this.updateValueAndValidity(t))
                }
                reset(e = {}, t = {}) {
                    this._forEachChild((n, r) => {
                        n.reset(e[r], {
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        })
                    }), this._updatePristine(t), this._updateTouched(t), this.updateValueAndValidity(t)
                }
                getRawValue() {
                    return this._reduceChildren({}, (e, t, n) => (e[n] = t instanceof ab ? t.value : t.getRawValue(), e))
                }
                _syncPendingControls() {
                    let e = this._reduceChildren(!1, (e, t) => !!t._syncPendingControls() || e);
                    return e && this.updateValueAndValidity({
                        onlySelf: !0
                    }), e
                }
                _throwIfControlMissing(e) {
                    if (!Object.keys(this.controls).length) throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
                    if (!this.controls[e]) throw new Error(`Cannot find form control with name: ${e}.`)
                }
                _forEachChild(e) {
                    Object.keys(this.controls).forEach(t => {
                        const n = this.controls[t];
                        n && e(n, t)
                    })
                }
                _setUpControls() {
                    this._forEachChild(e => {
                        e.setParent(this), e._registerOnCollectionChange(this._onCollectionChange)
                    })
                }
                _updateValue() {
                    this.value = this._reduceValue()
                }
                _anyControls(e) {
                    for (const t of Object.keys(this.controls)) {
                        const n = this.controls[t];
                        if (this.contains(t) && e(n)) return !0
                    }
                    return !1
                }
                _reduceValue() {
                    return this._reduceChildren({}, (e, t, n) => ((t.enabled || this.disabled) && (e[n] = t.value), e))
                }
                _reduceChildren(e, t) {
                    let n = e;
                    return this._forEachChild((e, r) => {
                        n = t(n, e, r)
                    }), n
                }
                _allControlsDisabled() {
                    for (const e of Object.keys(this.controls))
                        if (this.controls[e].enabled) return !1;
                    return Object.keys(this.controls).length > 0 || this.disabled
                }
                _checkAllValuesPresent(e) {
                    this._forEachChild((t, n) => {
                        if (void 0 === e[n]) throw new Error(`Must supply a value for form control with name: '${n}'.`)
                    })
                }
            }
            class ub extends ob {
                constructor(e, t, n) {
                    super(tb(t), rb(n, t)), this.controls = e, this._initObservables(), this._setUpdateStrategy(t), this._setUpControls(), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: !!n
                    })
                }
                at(e) {
                    return this.controls[e]
                }
                push(e) {
                    this.controls.push(e), this._registerControl(e), this.updateValueAndValidity(), this._onCollectionChange()
                }
                insert(e, t) {
                    this.controls.splice(e, 0, t), this._registerControl(t), this.updateValueAndValidity()
                }
                removeAt(e) {
                    this.controls[e] && this.controls[e]._registerOnCollectionChange(() => {}), this.controls.splice(e, 1), this.updateValueAndValidity()
                }
                setControl(e, t) {
                    this.controls[e] && this.controls[e]._registerOnCollectionChange(() => {}), this.controls.splice(e, 1), t && (this.controls.splice(e, 0, t), this._registerControl(t)), this.updateValueAndValidity(), this._onCollectionChange()
                }
                get length() {
                    return this.controls.length
                }
                setValue(e, t = {}) {
                    this._checkAllValuesPresent(e), e.forEach((e, n) => {
                        this._throwIfControlMissing(n), this.at(n).setValue(e, {
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        })
                    }), this.updateValueAndValidity(t)
                }
                patchValue(e, t = {}) {
                    null != e && (e.forEach((e, n) => {
                        this.at(n) && this.at(n).patchValue(e, {
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        })
                    }), this.updateValueAndValidity(t))
                }
                reset(e = [], t = {}) {
                    this._forEachChild((n, r) => {
                        n.reset(e[r], {
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        })
                    }), this._updatePristine(t), this._updateTouched(t), this.updateValueAndValidity(t)
                }
                getRawValue() {
                    return this.controls.map(e => e instanceof ab ? e.value : e.getRawValue())
                }
                clear() {
                    this.controls.length < 1 || (this._forEachChild(e => e._registerOnCollectionChange(() => {})), this.controls.splice(0), this.updateValueAndValidity())
                }
                _syncPendingControls() {
                    let e = this.controls.reduce((e, t) => !!t._syncPendingControls() || e, !1);
                    return e && this.updateValueAndValidity({
                        onlySelf: !0
                    }), e
                }
                _throwIfControlMissing(e) {
                    if (!this.controls.length) throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");
                    if (!this.at(e)) throw new Error(`Cannot find form control at index ${e}`)
                }
                _forEachChild(e) {
                    this.controls.forEach((t, n) => {
                        e(t, n)
                    })
                }
                _updateValue() {
                    this.value = this.controls.filter(e => e.enabled || this.disabled).map(e => e.value)
                }
                _anyControls(e) {
                    return this.controls.some(t => t.enabled && e(t))
                }
                _setUpControls() {
                    this._forEachChild(e => this._registerControl(e))
                }
                _checkAllValuesPresent(e) {
                    this._forEachChild((t, n) => {
                        if (void 0 === e[n]) throw new Error(`Must supply a value for form control at index: ${n}.`)
                    })
                }
                _allControlsDisabled() {
                    for (const e of this.controls)
                        if (e.enabled) return !1;
                    return this.controls.length > 0 || this.disabled
                }
                _registerControl(e) {
                    e.setParent(this), e._registerOnCollectionChange(this._onCollectionChange)
                }
            }
            const cb = {
                    provide: Vy,
                    useExisting: se(() => db)
                },
                hb = (() => Promise.resolve(null))();
            let db = (() => {
                class e extends Vy {
                    constructor(e, t) {
                        super(), this.submitted = !1, this._directives = [], this.ngSubmit = new gu, this.form = new lb({}, Ny(e), Ly(t))
                    }
                    ngAfterViewInit() {
                        this._setUpdateStrategy()
                    }
                    get formDirective() {
                        return this
                    }
                    get control() {
                        return this.form
                    }
                    get path() {
                        return []
                    }
                    get controls() {
                        return this.form.controls
                    }
                    addControl(e) {
                        hb.then(() => {
                            const t = this._findContainer(e.path);
                            e.control = t.registerControl(e.name, e.control), Gy(e.control, e), e.control.updateValueAndValidity({
                                emitEvent: !1
                            }), this._directives.push(e)
                        })
                    }
                    getControl(e) {
                        return this.form.get(e.path)
                    }
                    removeControl(e) {
                        hb.then(() => {
                            const t = this._findContainer(e.path);
                            t && t.removeControl(e.name), Qy(this._directives, e)
                        })
                    }
                    addFormGroup(e) {
                        hb.then(() => {
                            const t = this._findContainer(e.path),
                                n = new lb({});
                            (function(e, t) {
                                Ky(e, t, !1)
                            })(n, e), t.registerControl(e.name, n), n.updateValueAndValidity({
                                emitEvent: !1
                            })
                        })
                    }
                    removeFormGroup(e) {
                        hb.then(() => {
                            const t = this._findContainer(e.path);
                            t && t.removeControl(e.name)
                        })
                    }
                    getFormGroup(e) {
                        return this.form.get(e.path)
                    }
                    updateModel(e, t) {
                        hb.then(() => {
                            this.form.get(e.path).setValue(t)
                        })
                    }
                    setValue(e) {
                        this.control.setValue(e)
                    }
                    onSubmit(e) {
                        return this.submitted = !0, t = this._directives, this.form._syncPendingControls(), t.forEach(e => {
                            const t = e.control;
                            "submit" === t.updateOn && t._pendingChange && (e.viewToModelUpdate(t._pendingValue), t._pendingChange = !1)
                        }), this.ngSubmit.emit(e), !1;
                        var t
                    }
                    onReset() {
                        this.resetForm()
                    }
                    resetForm(e) {
                        this.form.reset(e), this.submitted = !1
                    }
                    _setUpdateStrategy() {
                        this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn)
                    }
                    _findContainer(e) {
                        return e.pop(), e.length ? this.form.get(e) : this.form
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Ay, 10), Ro(Dy, 10))
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
                        ["ng-form"],
                        ["", "ngForm", ""]
                    ],
                    hostBindings: function(e, t) {
                        1 & e && qo("submit", function(e) {
                            return t.onSubmit(e)
                        })("reset", function() {
                            return t.onReset()
                        })
                    },
                    inputs: {
                        options: ["ngFormOptions", "options"]
                    },
                    outputs: {
                        ngSubmit: "ngSubmit"
                    },
                    exportAs: ["ngForm"],
                    features: [Za([cb]), yo]
                }), e
            })();
            const pb = {
                    provide: $y,
                    useExisting: se(() => gb)
                },
                fb = (() => Promise.resolve(null))();
            let gb = (() => {
                    class e extends $y {
                        constructor(e, t, n, r) {
                            super(), this.control = new ab, this._registered = !1, this.update = new gu, this._parent = e, this._setValidators(t), this._setAsyncValidators(n), this.valueAccessor = function(e, t) {
                                if (!t) return null;
                                let n, r, s;
                                return Array.isArray(t), t.forEach(e => {
                                    e.constructor === xy ? n = e : Object.getPrototypeOf(e.constructor) === by ? r = e : s = e
                                }), s || r || n || null
                            }(0, r)
                        }
                        ngOnChanges(e) {
                            this._checkForErrors(), this._registered || this._setUpControl(), "isDisabled" in e && this._updateDisabled(e),
                                function(e, t) {
                                    if (!e.hasOwnProperty("model")) return !1;
                                    const n = e.model;
                                    return !!n.isFirstChange() || !Object.is(t, n.currentValue)
                                }(e, this.viewModel) && (this._updateValue(this.model), this.viewModel = this.model)
                        }
                        ngOnDestroy() {
                            this.formDirective && this.formDirective.removeControl(this)
                        }
                        get path() {
                            return this._parent ? [...this._parent.path, this.name] : [this.name]
                        }
                        get formDirective() {
                            return this._parent ? this._parent.formDirective : null
                        }
                        viewToModelUpdate(e) {
                            this.viewModel = e, this.update.emit(e)
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(), this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this), this._registered = !0
                        }
                        _setUpdateStrategy() {
                            this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn)
                        }
                        _isStandalone() {
                            return !this._parent || !(!this.options || !this.options.standalone)
                        }
                        _setUpStandalone() {
                            Gy(this.control, this), this.control.updateValueAndValidity({
                                emitEvent: !1
                            })
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(), this._checkName()
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options && this.options.name && (this.name = this.options.name), this._isStandalone()
                        }
                        _updateValue(e) {
                            fb.then(() => {
                                this.control.setValue(e, {
                                    emitViewToModelChange: !1
                                })
                            })
                        }
                        _updateDisabled(e) {
                            const t = e.isDisabled.currentValue,
                                n = "" === t || t && "false" !== t;
                            fb.then(() => {
                                n && !this.control.disabled ? this.control.disable() : !n && this.control.disabled && this.control.enable()
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(Vy, 9), Ro(Ay, 10), Ro(Dy, 10), Ro(vy, 10))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]
                        ],
                        inputs: {
                            name: "name",
                            isDisabled: ["disabled", "isDisabled"],
                            model: ["ngModel", "model"],
                            options: ["ngModelOptions", "options"]
                        },
                        outputs: {
                            update: "ngModelChange"
                        },
                        exportAs: ["ngModel"],
                        features: [Za([pb]), yo, ut]
                    }), e
                })(),
                mb = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]
                        ],
                        hostAttrs: ["novalidate", ""]
                    }), e
                })();
            const yb = {
                provide: vy,
                useExisting: se(() => bb),
                multi: !0
            };
            let bb = (() => {
                    class e extends by {
                        constructor(e, t) {
                            super(), this._renderer = e, this._elementRef = t, this.onChange = e => {}, this.onTouched = () => {}
                        }
                        writeValue(e) {
                            this._renderer.setProperty(this._elementRef.nativeElement, "value", null == e ? "" : e)
                        }
                        registerOnChange(e) {
                            this.onChange = t => {
                                e("" == t ? null : parseFloat(t))
                            }
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        setDisabledState(e) {
                            this._renderer.setProperty(this._elementRef.nativeElement, "disabled", e)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(il), Ro(nl))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["input", "type", "number", "formControlName", ""],
                            ["input", "type", "number", "formControl", ""],
                            ["input", "type", "number", "ngModel", ""]
                        ],
                        hostBindings: function(e, t) {
                            1 & e && qo("input", function(e) {
                                return t.onChange(e.target.value)
                            })("blur", function() {
                                return t.onTouched()
                            })
                        },
                        features: [Za([yb]), yo]
                    }), e
                })(),
                vb = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({}), e
                })();
            const _b = {
                provide: vy,
                useExisting: se(() => Cb),
                multi: !0
            };

            function wb(e, t) {
                return null == e ? `${t}` : (t && "object" == typeof t && (t = "Object"), `${e}: ${t}`.slice(0, 50))
            }
            let Cb = (() => {
                    class e extends by {
                        constructor(e, t) {
                            super(), this._renderer = e, this._elementRef = t, this._optionMap = new Map, this._idCounter = 0, this.onChange = e => {}, this.onTouched = () => {}, this._compareWith = Object.is
                        }
                        set compareWith(e) {
                            this._compareWith = e
                        }
                        writeValue(e) {
                            this.value = e;
                            const t = this._getOptionId(e);
                            null == t && this._renderer.setProperty(this._elementRef.nativeElement, "selectedIndex", -1);
                            const n = wb(t, e);
                            this._renderer.setProperty(this._elementRef.nativeElement, "value", n)
                        }
                        registerOnChange(e) {
                            this.onChange = t => {
                                this.value = this._getOptionValue(t), e(this.value)
                            }
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        setDisabledState(e) {
                            this._renderer.setProperty(this._elementRef.nativeElement, "disabled", e)
                        }
                        _registerOption() {
                            return (this._idCounter++).toString()
                        }
                        _getOptionId(e) {
                            for (const t of Array.from(this._optionMap.keys()))
                                if (this._compareWith(this._optionMap.get(t), e)) return t;
                            return null
                        }
                        _getOptionValue(e) {
                            const t = function(e) {
                                return e.split(":")[0]
                            }(e);
                            return this._optionMap.has(t) ? this._optionMap.get(t) : e
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(il), Ro(nl))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["select", "formControlName", "", 3, "multiple", ""],
                            ["select", "formControl", "", 3, "multiple", ""],
                            ["select", "ngModel", "", 3, "multiple", ""]
                        ],
                        hostBindings: function(e, t) {
                            1 & e && qo("change", function(e) {
                                return t.onChange(e.target.value)
                            })("blur", function() {
                                return t.onTouched()
                            })
                        },
                        inputs: {
                            compareWith: "compareWith"
                        },
                        features: [Za([_b]), yo]
                    }), e
                })(),
                Sb = (() => {
                    class e {
                        constructor(e, t, n) {
                            this._element = e, this._renderer = t, this._select = n, this._select && (this.id = this._select._registerOption())
                        }
                        set ngValue(e) {
                            null != this._select && (this._select._optionMap.set(this.id, e), this._setElementValue(wb(this.id, e)), this._select.writeValue(this._select.value))
                        }
                        set value(e) {
                            this._setElementValue(e), this._select && this._select.writeValue(this._select.value)
                        }
                        _setElementValue(e) {
                            this._renderer.setProperty(this._element.nativeElement, "value", e)
                        }
                        ngOnDestroy() {
                            this._select && (this._select._optionMap.delete(this.id), this._select.writeValue(this._select.value))
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(nl), Ro(il), Ro(Cb, 9))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["option"]
                        ],
                        inputs: {
                            ngValue: "ngValue",
                            value: "value"
                        }
                    }), e
                })();
            const xb = {
                provide: vy,
                useExisting: se(() => kb),
                multi: !0
            };

            function Eb(e, t) {
                return null == e ? `${t}` : ("string" == typeof t && (t = `'${t}'`), t && "object" == typeof t && (t = "Object"), `${e}: ${t}`.slice(0, 50))
            }
            let kb = (() => {
                    class e extends by {
                        constructor(e, t) {
                            super(), this._renderer = e, this._elementRef = t, this._optionMap = new Map, this._idCounter = 0, this.onChange = e => {}, this.onTouched = () => {}, this._compareWith = Object.is
                        }
                        set compareWith(e) {
                            this._compareWith = e
                        }
                        writeValue(e) {
                            let t;
                            if (this.value = e, Array.isArray(e)) {
                                const n = e.map(e => this._getOptionId(e));
                                t = (e, t) => {
                                    e._setSelected(n.indexOf(t.toString()) > -1)
                                }
                            } else t = (e, t) => {
                                e._setSelected(!1)
                            };
                            this._optionMap.forEach(t)
                        }
                        registerOnChange(e) {
                            this.onChange = t => {
                                const n = [];
                                if (void 0 !== t.selectedOptions) {
                                    const e = t.selectedOptions;
                                    for (let t = 0; t < e.length; t++) {
                                        const r = e.item(t),
                                            s = this._getOptionValue(r.value);
                                        n.push(s)
                                    }
                                } else {
                                    const e = t.options;
                                    for (let t = 0; t < e.length; t++) {
                                        const r = e.item(t);
                                        if (r.selected) {
                                            const e = this._getOptionValue(r.value);
                                            n.push(e)
                                        }
                                    }
                                }
                                this.value = n, e(n)
                            }
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        setDisabledState(e) {
                            this._renderer.setProperty(this._elementRef.nativeElement, "disabled", e)
                        }
                        _registerOption(e) {
                            const t = (this._idCounter++).toString();
                            return this._optionMap.set(t, e), t
                        }
                        _getOptionId(e) {
                            for (const t of Array.from(this._optionMap.keys()))
                                if (this._compareWith(this._optionMap.get(t)._value, e)) return t;
                            return null
                        }
                        _getOptionValue(e) {
                            const t = function(e) {
                                return e.split(":")[0]
                            }(e);
                            return this._optionMap.has(t) ? this._optionMap.get(t)._value : e
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(il), Ro(nl))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["select", "multiple", "", "formControlName", ""],
                            ["select", "multiple", "", "formControl", ""],
                            ["select", "multiple", "", "ngModel", ""]
                        ],
                        hostBindings: function(e, t) {
                            1 & e && qo("change", function(e) {
                                return t.onChange(e.target)
                            })("blur", function() {
                                return t.onTouched()
                            })
                        },
                        inputs: {
                            compareWith: "compareWith"
                        },
                        features: [Za([xb]), yo]
                    }), e
                })(),
                Ab = (() => {
                    class e {
                        constructor(e, t, n) {
                            this._element = e, this._renderer = t, this._select = n, this._select && (this.id = this._select._registerOption(this))
                        }
                        set ngValue(e) {
                            null != this._select && (this._value = e, this._setElementValue(Eb(this.id, e)), this._select.writeValue(this._select.value))
                        }
                        set value(e) {
                            this._select ? (this._value = e, this._setElementValue(Eb(this.id, e)), this._select.writeValue(this._select.value)) : this._setElementValue(e)
                        }
                        _setElementValue(e) {
                            this._renderer.setProperty(this._element.nativeElement, "value", e)
                        }
                        _setSelected(e) {
                            this._renderer.setProperty(this._element.nativeElement, "selected", e)
                        }
                        ngOnDestroy() {
                            this._select && (this._select._optionMap.delete(this.id), this._select.writeValue(this._select.value))
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(nl), Ro(il), Ro(kb, 9))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["option"]
                        ],
                        inputs: {
                            ngValue: "ngValue",
                            value: "value"
                        }
                    }), e
                })();
            const Db = {
                provide: Ay,
                useExisting: se(() => Tb),
                multi: !0
            };
            let Tb = (() => {
                class e {
                    constructor() {
                        this._required = !1
                    }
                    get required() {
                        return this._required
                    }
                    set required(e) {
                        this._required = null != e && !1 !== e && "false" != `${e}`, this._onChange && this._onChange()
                    }
                    validate(e) {
                        return this.required ? function(e) {
                            return Ey(e.value) ? {
                                required: !0
                            } : null
                        }(e) : null
                    }
                    registerOnValidatorChange(e) {
                        this._onChange = e
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
                        ["", "required", "", "formControl", "", 3, "type", "checkbox"],
                        ["", "required", "", "ngModel", "", 3, "type", "checkbox"]
                    ],
                    hostVars: 1,
                    hostBindings: function(e, t) {
                        2 & e && Oo("required", t.required ? "" : null)
                    },
                    inputs: {
                        required: "required"
                    },
                    features: [Za([Db])]
                }), e
            })();
            const Ob = {
                provide: Ay,
                useExisting: se(() => Fb),
                multi: !0
            };
            let Fb = (() => {
                class e {
                    constructor() {
                        this._enabled = !1
                    }
                    set email(e) {
                        this._enabled = "" === e || !0 === e || "true" === e, this._onChange && this._onChange()
                    }
                    validate(e) {
                        return this._enabled ? function(e) {
                            return Ey(e.value) || Ty.test(e.value) ? null : {
                                email: !0
                            }
                        }(e) : null
                    }
                    registerOnValidatorChange(e) {
                        this._onChange = e
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["", "email", "", "formControlName", ""],
                        ["", "email", "", "formControl", ""],
                        ["", "email", "", "ngModel", ""]
                    ],
                    inputs: {
                        email: "email"
                    },
                    features: [Za([Ob])]
                }), e
            })();
            const Pb = {
                provide: Ay,
                useExisting: se(() => Ib),
                multi: !0
            };
            let Ib = (() => {
                class e {
                    constructor() {
                        this._validator = Oy
                    }
                    ngOnChanges(e) {
                        "minlength" in e && (this._createValidator(), this._onChange && this._onChange())
                    }
                    validate(e) {
                        return null == this.minlength ? null : this._validator(e)
                    }
                    registerOnValidatorChange(e) {
                        this._onChange = e
                    }
                    _createValidator() {
                        var e;
                        this._validator = (e = "number" == typeof this.minlength ? this.minlength : parseInt(this.minlength, 10), t => Ey(t.value) || !ky(t.value) ? null : t.value.length < e ? {
                            minlength: {
                                requiredLength: e,
                                actualLength: t.value.length
                            }
                        } : null)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["", "minlength", "", "formControlName", ""],
                        ["", "minlength", "", "formControl", ""],
                        ["", "minlength", "", "ngModel", ""]
                    ],
                    hostVars: 1,
                    hostBindings: function(e, t) {
                        2 & e && Oo("minlength", t.minlength ? t.minlength : null)
                    },
                    inputs: {
                        minlength: "minlength"
                    },
                    features: [Za([Pb]), ut]
                }), e
            })();
            const Mb = {
                provide: Ay,
                useExisting: se(() => Rb),
                multi: !0
            };
            let Rb = (() => {
                class e {
                    constructor() {
                        this._validator = Oy
                    }
                    ngOnChanges(e) {
                        "maxlength" in e && (this._createValidator(), this._onChange && this._onChange())
                    }
                    validate(e) {
                        return null != this.maxlength ? this._validator(e) : null
                    }
                    registerOnValidatorChange(e) {
                        this._onChange = e
                    }
                    _createValidator() {
                        var e;
                        this._validator = (e = "number" == typeof this.maxlength ? this.maxlength : parseInt(this.maxlength, 10), t => ky(t.value) && t.value.length > e ? {
                            maxlength: {
                                requiredLength: e,
                                actualLength: t.value.length
                            }
                        } : null)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["", "maxlength", "", "formControlName", ""],
                        ["", "maxlength", "", "formControl", ""],
                        ["", "maxlength", "", "ngModel", ""]
                    ],
                    hostVars: 1,
                    hostBindings: function(e, t) {
                        2 & e && Oo("maxlength", t.maxlength ? t.maxlength : null)
                    },
                    inputs: {
                        maxlength: "maxlength"
                    },
                    features: [Za([Mb]), ut]
                }), e
            })();
            const Nb = {
                provide: Ay,
                useExisting: se(() => Lb),
                multi: !0
            };
            let Lb = (() => {
                    class e {
                        constructor() {
                            this._validator = Oy
                        }
                        ngOnChanges(e) {
                            "pattern" in e && (this._createValidator(), this._onChange && this._onChange())
                        }
                        validate(e) {
                            return this._validator(e)
                        }
                        registerOnValidatorChange(e) {
                            this._onChange = e
                        }
                        _createValidator() {
                            this._validator = function(e) {
                                if (!e) return Oy;
                                let t, n;
                                return "string" == typeof e ? (n = "", "^" !== e.charAt(0) && (n += "^"), n += e, "$" !== e.charAt(e.length - 1) && (n += "$"), t = new RegExp(n)) : (n = e.toString(), t = e), e => {
                                    if (Ey(e.value)) return null;
                                    const r = e.value;
                                    return t.test(r) ? null : {
                                        pattern: {
                                            requiredPattern: n,
                                            actualValue: r
                                        }
                                    }
                                }
                            }(this.pattern)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["", "pattern", "", "formControlName", ""],
                            ["", "pattern", "", "formControl", ""],
                            ["", "pattern", "", "ngModel", ""]
                        ],
                        hostVars: 1,
                        hostBindings: function(e, t) {
                            2 & e && Oo("pattern", t.pattern ? t.pattern : null)
                        },
                        inputs: {
                            pattern: "pattern"
                        },
                        features: [Za([Nb]), ut]
                    }), e
                })(),
                jb = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        imports: [
                            [vb]
                        ]
                    }), e
                })(),
                Bb = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        imports: [jb]
                    }), e
                })();
            const Vb = ["captchaWrapperElem"];
            let Ub = (() => {
                    class e {
                        constructor(e) {
                            this.zone = e, this.windowGrecaptcha = "grecaptcha", this.windowOnLoadCallbackProperty = "ngx_captcha_onload_callback", this.globalDomain = "recaptcha.net", this.defaultDomain = "google.com"
                        }
                        registerCaptchaScript(e, t, n, r) {
                            if (this.grecaptchaScriptLoaded()) return void this.zone.run(() => {
                                n(window[this.windowGrecaptcha])
                            });
                            window[this.windowOnLoadCallbackProperty] = () => this.zone.run(n.bind(this, window[this.windowGrecaptcha]));
                            const s = document.createElement("script");
                            s.innerHTML = "", s.src = this.getCaptchaScriptUrl(e, t, r), s.async = !0, s.defer = !0, document.getElementsByTagName("head")[0].appendChild(s)
                        }
                        cleanup() {
                            window[this.windowOnLoadCallbackProperty] = void 0, window[this.windowGrecaptcha] = void 0
                        }
                        grecaptchaScriptLoaded() {
                            return !(!window[this.windowOnLoadCallbackProperty] || !window[this.windowGrecaptcha])
                        }
                        getLanguageParam(e) {
                            return e ? `&hl=${e}` : ""
                        }
                        getCaptchaScriptUrl(e, t, n) {
                            return `https://www.${e?this.globalDomain:this.defaultDomain}/recaptcha/api.js?onload=${this.windowOnLoadCallbackProperty}&render=${t}${this.getLanguageParam(n)}`
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(tc))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                $b = (() => {
                    class e {
                        constructor(e, t, n, r) {
                            this.renderer = e, this.zone = t, this.injector = n, this.scriptService = r, this.captchaElemPrefix = "ngx_captcha_id_", this.setupCaptcha = !0, this.useGlobalDomain = !1, this.type = "image", this.tabIndex = 0, this.success = new gu, this.load = new gu, this.reset = new gu, this.ready = new gu, this.error = new gu, this.expire = new gu, this.setupAfterLoad = !1, this.resetCaptchaAfterSuccess = !1, this.isLoaded = !1
                        }
                        ngAfterViewInit() {
                            this.control = this.injector.get($y).control
                        }
                        ngAfterViewChecked() {
                            this.setupCaptcha && (this.setupCaptcha = !1, this.setupComponent())
                        }
                        ngOnChanges(e) {
                            e && e.hl && (e.hl.firstChange || e.hl.currentValue === e.hl.previousValue || this.scriptService.cleanup()), e && e.useGlobalDomain && (e.useGlobalDomain.firstChange || e.useGlobalDomain.currentValue === e.useGlobalDomain.previousValue || this.scriptService.cleanup()), this.setupCaptcha = !0
                        }
                        getResponse() {
                            return this.reCaptchaApi.getResponse(this.captchaId)
                        }
                        getCaptchaId() {
                            return this.captchaId
                        }
                        resetCaptcha() {
                            this.zone.run(() => {
                                this.reCaptchaApi.reset(), this.onChange(void 0), this.onTouched(void 0), this.reset.next()
                            })
                        }
                        getCurrentResponse() {
                            return this.currentResponse
                        }
                        reloadCaptcha() {
                            this.setupComponent()
                        }
                        ensureCaptchaElem(e) {
                            const t = document.getElementById(e);
                            if (!t) throw Error(`Captcha element with id '${e}' was not found`);
                            this.captchaElem = t
                        }
                        renderReCaptcha() {
                            this.zone.runOutsideAngular(() => {
                                this.captchaId = this.reCaptchaApi.render(this.captchaElemId, this.getCaptchaProperties()), this.ready.next()
                            })
                        }
                        handleCallback(e) {
                            this.currentResponse = e, this.success.next(e), this.zone.run(() => {
                                this.onChange(e), this.onTouched(e)
                            }), this.resetCaptchaAfterSuccess && this.resetCaptcha()
                        }
                        getPseudoUniqueNumber() {
                            return (new Date).getUTCMilliseconds() + Math.floor(9999 * Math.random())
                        }
                        setupComponent() {
                            this.captchaSpecificSetup(), this.createAndSetCaptchaElem(), this.scriptService.registerCaptchaScript(this.useGlobalDomain, "explicit", e => {
                                this.onloadCallback(e)
                            }, this.hl)
                        }
                        onloadCallback(e) {
                            if (this.reCaptchaApi = e, !this.reCaptchaApi) throw Error("ReCaptcha Api was not initialized correctly");
                            this.isLoaded = !0, this.load.next(), this.renderReCaptcha(), this.setupAfterLoad && (this.setupAfterLoad = !1, this.setupComponent())
                        }
                        generateNewElemId() {
                            return this.captchaElemPrefix + this.getPseudoUniqueNumber()
                        }
                        createAndSetCaptchaElem() {
                            if (this.captchaElemId = this.generateNewElemId(), !this.captchaElemId) throw Error("Captcha elem Id is not set");
                            if (!this.captchaWrapperElem) throw Error("Captcha DOM element is not initialized");
                            this.captchaWrapperElem.nativeElement.innerHTML = "";
                            const e = this.renderer.createElement("div");
                            e.id = this.captchaElemId, this.renderer.appendChild(this.captchaWrapperElem.nativeElement, e), setTimeout(() => {
                                this.captchaElemId && this.ensureCaptchaElem(this.captchaElemId)
                            }, 0)
                        }
                        writeValue(e) {}
                        registerOnChange(e) {
                            this.onChange = e
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        handleErrorCallback() {
                            this.zone.run(() => {
                                this.onChange(void 0), this.onTouched(void 0)
                            }), this.error.next()
                        }
                        handleExpireCallback() {
                            this.expire.next(), this.resetCaptcha()
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(il), Ro(tc), Ro(go), Ro(Ub))
                    }, e.\u0275dir = Ze({
                        type: e,
                        inputs: {
                            useGlobalDomain: "useGlobalDomain",
                            type: "type",
                            tabIndex: "tabIndex",
                            siteKey: "siteKey",
                            hl: "hl"
                        },
                        outputs: {
                            success: "success",
                            load: "load",
                            reset: "reset",
                            ready: "ready",
                            error: "error",
                            expire: "expire"
                        },
                        features: [ut]
                    }), e
                })();
            const Hb = {
                InvisibleReCaptcha: 0,
                ReCaptcha2: 1
            };
            Hb[Hb.InvisibleReCaptcha] = "InvisibleReCaptcha", Hb[Hb.ReCaptcha2] = "ReCaptcha2";
            let zb = (() => {
                    class e extends $b {
                        constructor(e, t, n, r) {
                            super(e, t, n, r), this.renderer = e, this.zone = t, this.injector = n, this.scriptService = r, this.size = "invisible", this.theme = "light", this.badge = "bottomright", this.recaptchaType = Hb.InvisibleReCaptcha
                        }
                        ngOnChanges(e) {
                            super.ngOnChanges(e)
                        }
                        execute() {
                            this.zone.runOutsideAngular(() => this.reCaptchaApi.execute(this.captchaId))
                        }
                        captchaSpecificSetup() {}
                        getCaptchaProperties() {
                            return {
                                sitekey: this.siteKey,
                                callback: e => this.zone.run(() => this.handleCallback(e)),
                                "expired-callback": () => this.zone.run(() => this.handleExpireCallback()),
                                "error-callback": () => this.zone.run(() => this.handleErrorCallback()),
                                badge: this.badge,
                                type: this.type,
                                tabindex: this.tabIndex,
                                size: this.size,
                                theme: this.theme
                            }
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(il), Ro(tc), Ro(go), Ro(Ub))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["ngx-invisible-recaptcha"]
                        ],
                        viewQuery: function(e, t) {
                            if (1 & e && Du(Vb, 1), 2 & e) {
                                let e;
                                Au(e = Tu()) && (t.captchaWrapperElem = e.first)
                            }
                        },
                        inputs: {
                            theme: "theme",
                            badge: "badge",
                            hl: "hl"
                        },
                        features: [Za([{
                            provide: vy,
                            useExisting: se(() => e),
                            multi: !0
                        }]), yo, ut],
                        decls: 2,
                        vars: 0,
                        consts: [
                            ["captchaWrapperElem", ""]
                        ],
                        template: function(e, t) {
                            1 & e && Vo(0, "div", null, 0)
                        },
                        encapsulation: 2
                    }), e
                })(),
                qb = (() => {
                    class e {
                        constructor(e, t) {
                            this.scriptService = e, this.zone = t
                        }
                        execute(e, t, n, r, s) {
                            this.executeAsPromise(e, t, r).then(n).catch(e => s ? s(e) : console.error(e))
                        }
                        executeAsPromise(e, t, n) {
                            return new Promise((r, s) => {
                                this.scriptService.registerCaptchaScript(!(!n || !n.useGlobalDomain), e, n => {
                                    this.zone.runOutsideAngular(() => {
                                        try {
                                            n.execute(e, {
                                                action: t
                                            }).then(e => this.zone.run(() => r(e)))
                                        } catch (i) {
                                            s(i)
                                        }
                                    })
                                })
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Ub), dr(tc))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                Gb = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: [Ub, qb],
                        imports: [
                            [Kh]
                        ]
                    }), e
                })();
            n("sxGJ"), n("wZee"), n("Yhcd"), n("45FF"), n("c2Kr"), n("ZgVT"), n("QWvX"), n("ki2X"), n("bPOv"), n("PSGn"), n("XIHC"), n("eWXi"), n("hnpa"), n("gAkk"), n("huE1"), n("kfgK"), n("jpss");
            let Wb = (() => {
                class e {
                    constructor(e) {
                        this.platformId = e
                    }
                    highlightAll() {
                        Zh(this.platformId) && Prism.highlightAll()
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Vu))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();

            function Kb(e, t) {
                1 & e && (jo(0, "div", 0), Vo(1, "ins", 2), Bo())
            }

            function Zb(e, t) {
                1 & e && (jo(0, "div", 0), Vo(1, "ins", 3), Bo())
            }

            function Qb(e, t) {
                1 & e && (jo(0, "div", 0), Vo(1, "ins", 4), Bo())
            }

            function Yb(e, t) {
                1 & e && (jo(0, "div", 0), Vo(1, "ins", 5), Bo())
            }
            let Jb = (() => {
                class e {
                    constructor() {}
                    ngOnInit() {}
                    ngAfterContentInit() {
                        setTimeout(() => {
                            (window.adsbygoogle = window.adsbygoogle || []).push({})
                        }, 0)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["app-adsense"]
                    ],
                    inputs: {
                        adType: "adType"
                    },
                    decls: 5,
                    vars: 4,
                    consts: [
                        [1, "text-center"],
                        ["class", "text-center", 4, "ngIf"],
                        ["data-ad-client", "ca-pub-9655830461045889", "data-ad-slot", "7409118598", 1, "adsbygoogle", 2, "display", "inline-block", "width", "250px", "height", "200px"],
                        ["data-ad-client", "ca-pub-9655830461045889", "data-ad-slot", "7409118598", "data-ad-format", "auto", "data-full-width-responsive", "true", 1, "adsbygoogle", 2, "display", "block"],
                        ["data-ad-layout", "in-article", "data-ad-format", "fluid", "data-ad-client", "ca-pub-9655830461045889", "data-ad-slot", "6621930351", 1, "adsbygoogle", 2, "display", "block", "text-align", "center"],
                        ["data-ad-client", "ca-pub-9655830461045889", "data-ad-slot", "8999979664", "data-ad-format", "auto", "data-full-width-responsive", "true", 1, "adsbygoogle", 2, "display", "block"]
                    ],
                    template: function(e, t) {
                        1 & e && (jo(0, "div", 0), Io(1, Kb, 2, 0, "div", 1), Io(2, Zb, 2, 0, "div", 1), Io(3, Qb, 2, 0, "div", 1), Io(4, Yb, 2, 0, "div", 1), Bo()), 2 & e && (ni(1), No("ngIf", "ad" === t.adType), ni(1), No("ngIf", "adsq" === t.adType), ni(1), No("ngIf", "adia" === t.adType), ni(1), No("ngIf", "advh" === t.adType))
                    },
                    directives: [Nh],
                    styles: [""]
                }), e
            })();

            function Xb(e, t) {
                1 & e && Vo(0, "img", 19)
            }

            function ev(e, t) {
                1 & e && Vo(0, "div", 20)
            }

            function tv(e, t) {
                if (1 & e && (jo(0, "div"), Vo(1, "div", 9), Vo(2, "app-adsense", 21), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(1), No("innerHTML", e, rs)
                }
            }

            function nv(e, t) {
                if (1 & e && (jo(0, "div"), Vo(1, "div", 9), Vo(2, "app-adsense", 2), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(1), No("innerHTML", e, rs)
                }
            }

            function rv(e, t) {
                if (1 & e && (jo(0, "div"), Vo(1, "div", 9), Vo(2, "app-adsense", 22), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(1), No("innerHTML", e, rs)
                }
            }

            function sv(e, t) {
                1 & e && (jo(0, "div", 31), Aa(1, " Enter at least 4 characters"), Bo())
            }

            function iv(e, t) {
                1 & e && (jo(0, "div", 31), Aa(1, "You are posting too quickly, Please try again after sometime"), Bo())
            }

            function ov(e, t) {
                1 & e && Vo(0, "span", 32)
            }

            function av(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "form", 23, 24), qo("ngSubmit", function() {
                        Rt(e);
                        const t = Mo(1);
                        return Ko().onPostComment(t)
                    }), jo(2, "div", 25), jo(3, "h2"), jo(4, "label", 26), Aa(5, "Post a Comment"), Bo(), Bo(), jo(6, "textarea", 27), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().commentText = t
                    }), Bo(), Bo(), Io(7, sv, 2, 0, "div", 28), Io(8, iv, 2, 0, "div", 28), jo(9, "button", 29), Io(10, ov, 1, 0, "span", 30), Aa(11, " Post"), Bo(), Bo()
                }
                if (2 & e) {
                    const e = Mo(1),
                        t = Ko();
                    ni(6), No("ngModel", t.commentText), ni(1), No("ngIf", !e.valid && e.touched), ni(1), No("ngIf", t.commentCount > t.noOfCommentsAllowed && e.touched), ni(1), No("disabled", !e.valid || t.commentCount > t.noOfCommentsAllowed || t.postingComment), ni(1), No("ngIf", t.postingComment)
                }
            }

            function lv(e, t) {
                if (1 & e && (jo(0, "button", 50), Aa(1, " Add Reply "), Bo()), 2 & e) {
                    const e = Ko().$implicit;
                    Xo("aria-controls", "openReply", e.sno, ""), Oo("data-target", "#openReply" + e.sno)
                }
            }

            function uv(e, t) {
                1 & e && (jo(0, "div", 31), Aa(1, "You are posting too quickly. Please try again after sometime"), Bo())
            }

            function cv(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "div", 51), qo("click", function() {
                        Rt(e);
                        const t = Ko().$implicit;
                        return Ko(2).showReplies(t.sno)
                    }), Aa(1), Bo()
                }
                if (2 & e) {
                    const e = Ko().$implicit;
                    ni(1), Ta("Show ", e.replycount, " replies")
                }
            }

            function hv(e, t) {
                if (1 & e && (jo(0, "div", 52), jo(1, "div", 53), jo(2, "div", 36), Vo(3, "img", 54), Bo(), jo(4, "div", 55), jo(5, "div", 39), jo(6, "b"), Aa(7), Bo(), jo(8, "span", 40), Aa(9), uu(10, "date"), Bo(), Vo(11, "br"), jo(12, "div", 41), Aa(13), Bo(), Vo(14, "div", 56), Bo(), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(7), Ta("", e.username, " "), ni(2), Ta(" ", cu(10, 3, e.time), " "), ni(4), Da(e.comment)
                }
            }

            function dv(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "div", 34), jo(1, "div", 35), jo(2, "div", 36), Vo(3, "img", 37), Bo(), jo(4, "div", 38), jo(5, "div", 39), jo(6, "b"), Aa(7), Bo(), jo(8, "span", 40), Aa(9), uu(10, "date"), Bo(), Vo(11, "br"), jo(12, "div", 41), Aa(13), Bo(), Bo(), Io(14, lv, 2, 2, "button", 42), jo(15, "div", 43), jo(16, "form", 44, 45), qo("ngSubmit", function() {
                        Rt(e);
                        const n = t.$implicit,
                            r = t.index,
                            s = Mo(17);
                        return Ko(2).onPostReply(n.sno, s, r)
                    }), jo(18, "textarea", 46), qo("ngModelChange", function(t) {
                        return Rt(e), Ko(2).replyText = t
                    }), Bo(), jo(19, "button", 47), Aa(20, "Reply"), Bo(), Io(21, uv, 2, 0, "div", 28), Bo(), Bo(), Io(22, cv, 2, 1, "div", 48), Io(23, hv, 15, 5, "div", 49), Bo(), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit,
                        n = Ko(2);
                    ni(7), Ta("", e.username, " "), ni(2), Da(cu(10, 10, e.time)), ni(4), Da(e.comment), ni(1), No("ngIf", n.loggedin), ni(1), Xo("id", "openReply", e.sno, ""), ni(3), No("ngModel", n.replyText), ni(1), No("disabled", n.commentCount > n.noOfRepliesAllowed || n.postingReply || n.replyText.length < 5), ni(2), No("ngIf", n.commentCount > n.noOfRepliesAllowed), ni(1), No("ngIf", e.replycount > 0), ni(1), No("ngForOf", n.replies[e.sno])
                }
            }

            function pv(e, t) {
                if (1 & e && (jo(0, "div"), Io(1, dv, 24, 12, "div", 33), Bo()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngForOf", e.comments)
                }
            }

            function fv(e, t) {
                1 & e && (jo(0, "p", 57), Aa(1, " No comments to display. Be the first person to post a comment! "), Bo())
            }

            function gv(e, t) {
                1 & e && (jo(0, "div", 58), jo(1, "h2"), Aa(2, "You need to be logged in to post a comment!"), Bo(), Bo())
            }

            function mv(e, t) {
                1 & e && (jo(0, "div", 5), jo(1, "div", 59), jo(2, "span", 7), Aa(3, "Loading..."), Bo(), Bo(), Bo())
            }
            let yv = (() => {
                    class e {
                        constructor(e, t, n, r, s, i, o, a, l) {
                            this.route = e, this.blogService = t, this.titleService = n, this.metaService = r, this.blogCommentService = s, this.reCaptchaV3Service = i, this.highlightService = o, this.scriptService = a, this.platformId = l, this.comments = [], this.replies = {}, this.showCommentLoader = !1, this.loggedin = !1, this.commentEnd = !1, this.highlighted = !1, this.commentCount = 0, this.postingComment = !1, this.postingReply = !1, this.noOfCommentsAllowed = 1, this.noOfRepliesAllowed = 2, this.replyText = "", this.innerHtmlsAd = [], this.innerHtmlsAdia = [], this.innerHtmlsAdsq = [], this.siteKey = "6Lf8EMkaAAAAAMDraR1vekR1rPpYJQ3vmiRP57Di", this.action = "home", this.route.params.subscribe(e => {
                                this.slug = e.slug
                            })
                        }
                        onScroll() {
                            if (window.innerHeight + window.scrollY >= document.body.scrollHeight - 500 && !this.showCommentLoader && !this.commentEnd) {
                                let e;
                                this.showCommentLoader = !0, 0 == this.comments.length ? e = {
                                    sno: 999999
                                } : [e] = this.comments.slice(-1), this.blogCommentService.getMoreComments(this.slug, 0, e.sno).subscribe(e => {
                                    0 == e.length && (this.commentEnd = !0), this.comments = this.comments.concat(e);
                                    for (const t of e) this.replies[t.sno] = [];
                                    this.showCommentLoader = !1
                                })
                            }
                        }
                        ngOnInit() {
                            this.blogService.getBlog(this.slug).subscribe(e => {
                                null == e.success || e.success || window.location.replace("./index"), this.title = e.title, this.content = e.content, this.content.split("&lt;|AD").forEach(e => {
                                    e.startsWith("|&gt;") ? (e = e.replace("|&gt;", ""), this.innerHtmlsAd.push(e)) : e.startsWith("IA|&gt;") ? (e = e.replace("IA|&gt;", ""), this.innerHtmlsAdia.push(e)) : e.startsWith("SQ|&gt;") ? (e = e.replace("SQ|&gt;", ""), this.innerHtmlsAdsq.push(e)) : this.innerHtml = e
                                }), this.titleService.setTitle(this.title + " - shreesha"), this.metaService.addTags([{
                                    name: "keywords",
                                    content: e.metaTags
                                }, {
                                    name: "description",
                                    content: e.metaDesc
                                }])
                            })
                        }
                        ngAfterViewChecked() {
                            Zh(this.platformId) && setTimeout(() => {
                                this.content && !this.highlighted && (this.highlightService.highlightAll(), this.highlighted = !0);
                                let e = localStorage.getItem("token");
                                if (null !== e) {
                                    this.loggedin = !0;
                                    let t = JSON.parse(e);
                                    this.accessToken = t.token, this.username = t.username, this.is_staff = t.is_staff
                                } else this.loggedin = !1
                            }, 0)
                        }
                        onPostComment(e) {
                            this.commentCount++, this.postingComment = !0, this.scriptService.cleanup();
                            let t = this.commentText;
                            this.reCaptchaV3Service.execute(this.siteKey, "comment", e => {
                                this.blogCommentService.postComment(t, this.slug, -1, this.accessToken, e).subscribe(e => {
                                    let n = {
                                        comment: t,
                                        username: this.username,
                                        sno: e.sno,
                                        time: new Date,
                                        replycount: 0
                                    };
                                    this.comments.unshift(n), this.replies[n.sno] = [], this.postingComment = !1, this.commentText = ""
                                })
                            }), e.reset()
                        }
                        onPostReply(e, t, n) {
                            this.commentCount++, this.postingReply = !0, this.scriptService.cleanup();
                            let r = {
                                comment: t.form.value.reply,
                                username: this.username,
                                sno: e,
                                time: new Date
                            };
                            0 != this.replies[e].length && this.replies[r.sno].push(r), this.reCaptchaV3Service.execute(this.siteKey, "comment", r => {
                                this.blogCommentService.postComment(t.form.value.reply, this.slug, e, this.accessToken, r).subscribe(e => {
                                    this.comments[n].replycount = this.comments[n].replycount + 1, this.postingReply = !1, this.replyText = ""
                                })
                            })
                        }
                        showReplies(e) {
                            0 == this.replies[e].length && this.blogCommentService.getMoreComments(this.slug, e, 999999).subscribe(t => {
                                this.replies[e] = t
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(Bf), Ro(hy), Ro(Id), Ro(Od), Ro(my), Ro(qb), Ro(Wb), Ro(Ub), Ro(Vu))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-blog-page"]
                        ],
                        hostBindings: function(e, t) {
                            1 & e && qo("scroll", function() {
                                return t.onScroll()
                            }, !1, ps)
                        },
                        decls: 30,
                        vars: 13,
                        consts: [
                            [1, "wrapper", "container", "main-container", "my-4"],
                            ["id", "content"],
                            ["adType", "adia"],
                            ["target", "_blank", 3, "href"],
                            ["src", "../../../assets/img/pencil.png", "alt", "edit", "width", "20px", "height", "20px", 4, "ngIf"],
                            [1, "text-center"],
                            ["class", "my-4 spinner-border text-danger m-auto", "role", "status", 4, "ngIf"],
                            [1, "sr-only"],
                            [1, "contentBox"],
                            [3, "innerHTML"],
                            [4, "ngFor", "ngForOf"],
                            [1, "container", "my-4"],
                            ["id", "comments", 1, "container", "px-0"],
                            ["class", "mb-3", 3, "ngSubmit", 4, "ngIf", "ngIfElse"],
                            [4, "ngIf", "ngIfElse"],
                            ["elseBlock", ""],
                            ["commentElse", ""],
                            [1, "container", "my-4", "px-0"],
                            ["class", "text-center", 4, "ngIf"],
                            ["src", "../../../assets/img/pencil.png", "alt", "edit", "width", "20px", "height", "20px"],
                            ["role", "status", 1, "my-4", "spinner-border", "text-danger", "m-auto"],
                            ["adType", "ad"],
                            ["adType", "adsq"],
                            [1, "mb-3", 3, "ngSubmit"],
                            ["commentForm", "ngForm"],
                            [1, "form-group"],
                            ["for", "inputAddress"],
                            ["type", "text", "maxlength", "500", "id", "comment", "placeholder", "Write a comment...", "name", "comment", "minlength", "5", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["class", "commentError text-danger text-small", 4, "ngIf"],
                            ["type", "submit", 1, "btn", "btn-danger", 3, "disabled"],
                            ["class", "spinner-border spinner-border-sm", "role", "status", "aria-hidden", "true", 4, "ngIf"],
                            [1, "commentError", "text-danger", "text-small"],
                            ["role", "status", "aria-hidden", "true", 1, "spinner-border", "spinner-border-sm"],
                            ["class", "comments", 4, "ngFor", "ngForOf"],
                            [1, "comments"],
                            [1, "row", "mt-4"],
                            [1, "col-sm-3", "col-lg-1", "col-xl-1"],
                            ["src", "../../../assets/img/comment.png", 1, "w-100", "commentImg", "d-block", "mx-auto", "rounded-circle"],
                            [1, "col-md-8", "col-lg-10", "col-xl-10", "commentContainer"],
                            [1, "my-2", "mx-2"],
                            [1, "badge", "badge-secondary"],
                            [1, "commentPre"],
                            ["class", "btn btn-danger btn-sm", "type", "button", "data-toggle", "collapse", "aria-expanded", "false", 3, "aria-controls", 4, "ngIf"],
                            [1, "collapse", 3, "id"],
                            [3, "ngSubmit"],
                            ["replyForm", "ngForm"],
                            ["type", "text", "maxlength", "500", "placeholder", "Write a reply...", "name", "reply", "minlength", "4", "required", "", 1, "form-control", "my-2", 3, "ngModel", "ngModelChange"],
                            ["type", "submit", 1, "btn", "btn-sm", "btn-danger", 3, "disabled"],
                            ["class", "showReplies", 3, "click", 4, "ngIf"],
                            ["class", "commentReplies", 4, "ngFor", "ngForOf"],
                            ["type", "button", "data-toggle", "collapse", "aria-expanded", "false", 1, "btn", "btn-danger", "btn-sm", 3, "aria-controls"],
                            [1, "showReplies", 3, "click"],
                            [1, "commentReplies"],
                            [1, "row", "my-3"],
                            ["src", "../../../assets/img/comment.png", 1, "w-100", "commentImg", "rounded-circle"],
                            [1, "col-md-8", "col-lg-10", "col-xl-10"],
                            [1, "my-2"],
                            [1, "mx-1"],
                            [1, "commentContainerMain"],
                            ["role", "status", 1, "spinner-border", "text-danger"]
                        ],
                        template: function(e, t) {
                            if (1 & e && (jo(0, "div", 0), jo(1, "div", 1), Vo(2, "app-adsense", 2), jo(3, "h1"), Aa(4), jo(5, "a", 3), Io(6, Xb, 1, 0, "img", 4), Bo(), Bo(), jo(7, "div", 5), Io(8, ev, 1, 0, "div", 6), jo(9, "span", 7), Aa(10, "Loading..."), Bo(), Bo(), jo(11, "div", 8), Vo(12, "div", 9), Io(13, tv, 3, 1, "div", 10), Io(14, nv, 3, 1, "div", 10), Io(15, rv, 3, 1, "div", 10), Bo(), Vo(16, "app-adsense", 2), Vo(17, "hr"), jo(18, "div", 11), jo(19, "div", 12), Io(20, av, 12, 5, "form", 13), jo(21, "h2"), Aa(22, "Comments"), Bo(), Io(23, pv, 2, 1, "div", 14), Io(24, fv, 2, 0, "ng-template", null, 15, Iu), Bo(), Io(26, gv, 3, 0, "ng-template", null, 16, Iu), jo(28, "div", 17), Io(29, mv, 4, 0, "div", 18), Bo(), Bo(), Bo(), Bo()), 2 & e) {
                                const e = Mo(25),
                                    n = Mo(27);
                                ni(4), Ta("", t.title, " "), ni(1), Xo("href", "/dashboard/blogs/", t.slug, "", ss), ni(1), No("ngIf", t.is_staff), ni(2), No("ngIf", !t.content), ni(4), No("innerHTML", t.innerHtml, rs), ni(1), No("ngForOf", t.innerHtmlsAd), ni(1), No("ngForOf", t.innerHtmlsAdia), ni(1), No("ngForOf", t.innerHtmlsAdsq), ni(5), No("ngIf", t.loggedin)("ngIfElse", n), ni(3), No("ngIf", 0 !== t.comments.length)("ngIfElse", e), ni(6), No("ngIf", t.showCommentLoader)
                            }
                        },
                        directives: [Jb, Nh, Mh, mb, qy, db, xy, Rb, Ib, Tb, zy, gb],
                        pipes: [Wh],
                        styles: ["div.code-toolbar{position:relative}div.code-toolbar>.toolbar{position:absolute;top:.3em;right:.2em;transition:opacity .3s ease-in-out;opacity:0}div.code-toolbar:focus-within>.toolbar,div.code-toolbar:hover>.toolbar{opacity:1}div.code-toolbar>.toolbar .toolbar-item{display:inline-block}div.code-toolbar>.toolbar a{cursor:pointer}div.code-toolbar>.toolbar button{background:none;border:0;color:inherit;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}div.code-toolbar>.toolbar a,div.code-toolbar>.toolbar button,div.code-toolbar>.toolbar span{color:#bbb;font-size:.8em;padding:0 .5em;background:#f5f2f0;background:hsla(0,0%,87.8%,.2);box-shadow:0 2px 0 0 rgba(0,0,0,.2);border-radius:.5em}div.code-toolbar>.toolbar a:focus,div.code-toolbar>.toolbar a:hover,div.code-toolbar>.toolbar button:focus,div.code-toolbar>.toolbar button:hover,div.code-toolbar>.toolbar span:focus,div.code-toolbar>.toolbar span:hover{color:inherit;text-decoration:none}code[class*=language-],pre[class*=language-]{color:#f8f8f2;background:none;text-shadow:0 1px rgba(0,0,0,.3);font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;tab-size:4;-webkit-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#272822}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#8292a2}.token.punctuation{color:#f8f8f2}.token.namespace{opacity:.7}.token.constant,.token.deleted,.token.property,.token.symbol,.token.tag{color:#f92672}.token.boolean,.token.number{color:#ae81ff}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#a6e22e}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f8f8f2}.token.atrule,.token.attr-value,.token.class-name,.token.function{color:#e6db74}.token.keyword{color:#66d9ef}.token.important,.token.regex{color:#fd971f}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.showReplies{color:#00f;cursor:pointer;font-size:14px;padding:8px 16px}pre{display:block;color:#212529;font-family:Inter}.commentContainerMain{margin:33px 0}#content p{font-family:helvetica;margin:17px 0}#content p,.contentBox{font-size:15pt}.commentContainer{font-size:14pt;font-family:helvetica}.commentError{font-size:10pt;margin:8px}@media screen and (max-width:768px){.commentImg{display:none!important}div.toolbar-item button{margin-right:0}#video-box2 pre code{font-size:10px}pre[class*=language-]{font-size:6pt}img{max-width:100%;height:auto}.contentBox{word-wrap:break-word}#content h1{font-size:27px}}.contentBox img{border:2px solid #e6e6e6;padding:7px;border-radius:12px}h2,h3,h4,h5,h6{margin:25px 0 9px}.commentPre{overflow-x:auto;white-space:pre-wrap;white-space:-moz-pre-wrap;white-space:-pre-wrap;white-space:-o-pre-wrap;word-wrap:break-word}"],
                        encapsulation: 2
                    }), e
                })(),
                bv = (() => {
                    class e {
                        constructor(e) {
                            this.http = e, this.contactUrl = iy + "addcontact/"
                        }
                        addContact(e, t, n, r, s) {
                            let i = new FormData;
                            return i.append("name", e), i.append("email", t), i.append("phone", n), i.append("message", r), i.append("captchatoken", s), this.http.post(this.contactUrl, i)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Hm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac,
                        providedIn: "root"
                    }), e
                })();

            function vv(e, t) {
                if (1 & e && (jo(0, "div", 17), jo(1, "strong"), Aa(2), uu(3, "titlecase"), Bo(), Aa(4), jo(5, "button", 18), jo(6, "span", 19), Aa(7, "\xd7"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    Fa("alert alert-", e[0], " alert-dismissible fade show"), ni(2), Ta(" ", cu(3, 5, n.getAlertHead[e[0]]), ":"), ni(2), Ta(" ", e[1], " ")
                }
            }

            function _v(e, t) {
                1 & e && Vo(0, "span", 20)
            }
            let wv = (() => {
                    class e {
                        constructor(e, t, n, r, s) {
                            this.contactService = e, this.titleService = t, this.metaService = n, this.reCaptchaV3Service = r, this.scriptService = s, this.getAlertHead = {
                                success: "Success",
                                danger: "Error"
                            }, this.siteKey = "6Lf8EMkaAAAAAMDraR1vekR1rPpYJQ3vmiRP57Di", this.action = "home", this.alerts = [], this.sendingForm = !1
                        }
                        ngOnInit() {
                            this.titleService.setTitle(""), this.metaService.addTags([{
                                name: "keywords",
                                content: ""
                            }, {
                                name: "description",
                                content: ""
                            }])
                        }
                        setAlert(e, t) {
                            this.alerts = [], this.alerts.push([e, t])
                        }
                        onSubmit(e) {
                            this.sendingForm = !0, this.scriptService.cleanup();
                            let t = e.form.value;
                            this.reCaptchaV3Service.execute(this.siteKey, "home", e => {
                                this.contactService.addContact(t.name, t.email, t.phone, t.message, e).subscribe(e => {
                                    this.setAlert("success", "Contact form has been submitted successfully"), this.sendingForm = !1
                                }, e => {
                                    this.setAlert("danger", "Error Sending Form"), this.sendingForm = !1
                                })
                            }), e.form.reset()
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(bv), Ro(Id), Ro(Od), Ro(qb), Ro(Ub))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-contactpage"]
                        ],
                        decls: 28,
                        vars: 3,
                        consts: [
                            ["role", "alert", 3, "class", 4, "ngFor", "ngForOf"],
                            [1, "main-container", "container", "my-4"],
                            [1, "row"],
                            [1, "col-lg-12"],
                            [3, "ngSubmit"],
                            ["form", "ngForm"],
                            [1, "form-group"],
                            ["for", "name"],
                            ["type", "name", "id", "name", "placeholder", "Enter your Name", "required", "", "name", "name", "ngModel", "", 1, "form-control"],
                            ["for", "email"],
                            ["type", "email", "id", "email", "placeholder", "Enter your Email", "required", "", "name", "email", "ngModel", "", 1, "form-control"],
                            ["for", "phone"],
                            ["type", "number", "id", "phone", "placeholder", "Enter your Phone Number", "minlength", "10", "maxlength", "10", "required", "", "name", "phone", "ngModel", "", 1, "form-control"],
                            ["for", "description"],
                            ["type", "text", "id", "message", "placeholder", "Your message", "required", "", "name", "message", "ngModel", "", 1, "form-control"],
                            ["type", "submit", 1, "btn", "btn-danger", "mt-2", 3, "disabled"],
                            ["class", "spinner-border spinner-border-sm", "role", "status", "aria-hidden", "true", 4, "ngIf"],
                            ["role", "alert"],
                            ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close"],
                            ["aria-hidden", "true"],
                            ["role", "status", "aria-hidden", "true", 1, "spinner-border", "spinner-border-sm"]
                        ],
                        template: function(e, t) {
                            if (1 & e) {
                                const e = Uo();
                                Io(0, vv, 8, 7, "div", 0), jo(1, "div", 1), jo(2, "div", 2), jo(3, "div", 3), jo(4, "h2"), Aa(5, "Contact me!"), Bo(), jo(6, "form", 4, 5), qo("ngSubmit", function() {
                                    Rt(e);
                                    const n = Mo(7);
                                    return t.onSubmit(n)
                                }), jo(8, "div", 6), jo(9, "label", 7), Aa(10, "Your Name"), Bo(), Vo(11, "input", 8), Bo(), jo(12, "div", 6), jo(13, "label", 9), Aa(14, "Your Email"), Bo(), Vo(15, "input", 10), Bo(), jo(16, "div", 6), jo(17, "label", 11), Aa(18, "Your Phone Number"), Bo(), Vo(19, "input", 12), Bo(), jo(20, "div", 6), jo(21, "label", 13), Aa(22, "Describe what you want to contact me for here"), Bo(), Vo(23, "textarea", 14), Bo(), jo(24, "button", 15), Io(25, _v, 1, 0, "span", 16), Aa(26, " Submit"), Bo(), Bo(), Bo(), Vo(27, "hr"), Bo(), Bo()
                            }
                            if (2 & e) {
                                const e = Mo(7);
                                No("ngForOf", t.alerts), ni(24), No("disabled", !e.valid), ni(1), No("ngIf", t.sendingForm)
                            }
                        },
                        directives: [Mh, mb, qy, db, xy, Tb, zy, gb, bb, Ib, Rb, Nh],
                        pipes: [Gh],
                        styles: [""]
                    }), e
                })(),
                Cv = (() => {
                    class e {
                        constructor(e) {
                            this.http = e, this.getVideoUrl = iy + "dashboard/getvideo/", this.putVideoUrl = iy + "dashboard/updatevideo/", this.addVideoUrl = iy + "dashboard/addvideo/", this.addFileUrl = iy + "dashboard/addfile/", this.getAllFilesUrl = iy + "dashboard/getallfiles/", this.getCoursesUrl = iy + "video/getcourses", this.getBlogUrl = iy + "dashboard/getblog/", this.putBlogUrl = iy + "dashboard/updateblog/", this.addBlogUrl = iy + "dashboard/addblog/", this.addFileBlogUrl = iy + "dashboard/addblogfile/", this.getAllFilesBlogUrl = iy + "dashboard/getallblogfiles/"
                        }
                        getVideo(e, t) {
                            return this.http.get(`${this.getVideoUrl}${e}`, {
                                headers: {
                                    Authorization: "Token " + t
                                }
                            })
                        }
                        updateVideo(e, t, n) {
                            return this.http.put(`${this.putVideoUrl}${e}`, t, {
                                headers: {
                                    Authorization: "Token " + n
                                }
                            })
                        }
                        addVideo(e, t, n) {
                            return this.http.put(`${this.addVideoUrl}${e}`, t, {
                                headers: {
                                    Authorization: "Token " + n
                                }
                            })
                        }
                        addFile(e, t, n) {
                            return this.http.put(`${this.addFileUrl}${t}`, e, {
                                headers: {
                                    Authorization: "Token " + n
                                }
                            })
                        }
                        getAllFiles(e, t) {
                            let n = new FormData;
                            return this.http.post(`${this.getAllFilesUrl}${e}`, n, {
                                headers: {
                                    Authorization: "Token " + t
                                }
                            })
                        }
                        getCourses() {
                            return this.http.get(this.getCoursesUrl)
                        }
                        getBlog(e, t) {
                            return this.http.get(`${this.getBlogUrl}${e}`, {
                                headers: {
                                    Authorization: "Token " + t
                                }
                            })
                        }
                        updateBlog(e, t, n) {
                            return this.http.put(`${this.putBlogUrl}${e}`, t, {
                                headers: {
                                    Authorization: "Token " + n
                                }
                            })
                        }
                        addBlog(e, t, n) {
                            return this.http.put(`${this.addBlogUrl}${e}`, t, {
                                headers: {
                                    Authorization: "Token " + n
                                }
                            })
                        }
                        addFileBlog(e, t, n) {
                            return this.http.put(`${this.addFileBlogUrl}${t}`, e, {
                                headers: {
                                    Authorization: "Token " + n
                                }
                            })
                        }
                        getAllFilesBlog(e, t) {
                            let n = new FormData;
                            return this.http.post(`${this.getAllFilesBlogUrl}${e}`, n, {
                                headers: {
                                    Authorization: "Token " + t
                                }
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Hm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac,
                        providedIn: "root"
                    }), e
                })();

            function Sv(e, t) {}
            const xv = () => {
                const e = "undefined" != typeof window ? window : void 0;
                return e && e.tinymce ? e.tinymce : null
            };
            let Ev = (() => {
                class e {
                    constructor() {
                        this.onBeforePaste = new gu, this.onBlur = new gu, this.onClick = new gu, this.onContextMenu = new gu, this.onCopy = new gu, this.onCut = new gu, this.onDblclick = new gu, this.onDrag = new gu, this.onDragDrop = new gu, this.onDragEnd = new gu, this.onDragGesture = new gu, this.onDragOver = new gu, this.onDrop = new gu, this.onFocus = new gu, this.onFocusIn = new gu, this.onFocusOut = new gu, this.onKeyDown = new gu, this.onKeyPress = new gu, this.onKeyUp = new gu, this.onMouseDown = new gu, this.onMouseEnter = new gu, this.onMouseLeave = new gu, this.onMouseMove = new gu, this.onMouseOut = new gu, this.onMouseOver = new gu, this.onMouseUp = new gu, this.onPaste = new gu, this.onSelectionChange = new gu, this.onActivate = new gu, this.onAddUndo = new gu, this.onBeforeAddUndo = new gu, this.onBeforeExecCommand = new gu, this.onBeforeGetContent = new gu, this.onBeforeRenderUI = new gu, this.onBeforeSetContent = new gu, this.onChange = new gu, this.onClearUndos = new gu, this.onDeactivate = new gu, this.onDirty = new gu, this.onExecCommand = new gu, this.onGetContent = new gu, this.onHide = new gu, this.onInit = new gu, this.onLoadContent = new gu, this.onNodeChange = new gu, this.onPostProcess = new gu, this.onPostRender = new gu, this.onPreInit = new gu, this.onPreProcess = new gu, this.onProgressState = new gu, this.onRedo = new gu, this.onRemove = new gu, this.onReset = new gu, this.onSaveContent = new gu, this.onSetAttrib = new gu, this.onObjectResizeStart = new gu, this.onObjectResized = new gu, this.onObjectSelected = new gu, this.onSetContent = new gu, this.onShow = new gu, this.onSubmit = new gu, this.onUndo = new gu, this.onVisualAid = new gu
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275dir = Ze({
                    type: e,
                    outputs: {
                        onBeforePaste: "onBeforePaste",
                        onBlur: "onBlur",
                        onClick: "onClick",
                        onContextMenu: "onContextMenu",
                        onCopy: "onCopy",
                        onCut: "onCut",
                        onDblclick: "onDblclick",
                        onDrag: "onDrag",
                        onDragDrop: "onDragDrop",
                        onDragEnd: "onDragEnd",
                        onDragGesture: "onDragGesture",
                        onDragOver: "onDragOver",
                        onDrop: "onDrop",
                        onFocus: "onFocus",
                        onFocusIn: "onFocusIn",
                        onFocusOut: "onFocusOut",
                        onKeyDown: "onKeyDown",
                        onKeyPress: "onKeyPress",
                        onKeyUp: "onKeyUp",
                        onMouseDown: "onMouseDown",
                        onMouseEnter: "onMouseEnter",
                        onMouseLeave: "onMouseLeave",
                        onMouseMove: "onMouseMove",
                        onMouseOut: "onMouseOut",
                        onMouseOver: "onMouseOver",
                        onMouseUp: "onMouseUp",
                        onPaste: "onPaste",
                        onSelectionChange: "onSelectionChange",
                        onActivate: "onActivate",
                        onAddUndo: "onAddUndo",
                        onBeforeAddUndo: "onBeforeAddUndo",
                        onBeforeExecCommand: "onBeforeExecCommand",
                        onBeforeGetContent: "onBeforeGetContent",
                        onBeforeRenderUI: "onBeforeRenderUI",
                        onBeforeSetContent: "onBeforeSetContent",
                        onChange: "onChange",
                        onClearUndos: "onClearUndos",
                        onDeactivate: "onDeactivate",
                        onDirty: "onDirty",
                        onExecCommand: "onExecCommand",
                        onGetContent: "onGetContent",
                        onHide: "onHide",
                        onInit: "onInit",
                        onLoadContent: "onLoadContent",
                        onNodeChange: "onNodeChange",
                        onPostProcess: "onPostProcess",
                        onPostRender: "onPostRender",
                        onPreInit: "onPreInit",
                        onPreProcess: "onPreProcess",
                        onProgressState: "onProgressState",
                        onRedo: "onRedo",
                        onRemove: "onRemove",
                        onReset: "onReset",
                        onSaveContent: "onSaveContent",
                        onSetAttrib: "onSetAttrib",
                        onObjectResizeStart: "onObjectResizeStart",
                        onObjectResized: "onObjectResized",
                        onObjectSelected: "onObjectSelected",
                        onSetContent: "onSetContent",
                        onShow: "onShow",
                        onSubmit: "onSubmit",
                        onUndo: "onUndo",
                        onVisualAid: "onVisualAid"
                    }
                }), e
            })();
            const kv = ["onActivate", "onAddUndo", "onBeforeAddUndo", "onBeforeExecCommand", "onBeforeGetContent", "onBeforeRenderUI", "onBeforeSetContent", "onBeforePaste", "onBlur", "onChange", "onClearUndos", "onClick", "onContextMenu", "onCopy", "onCut", "onDblclick", "onDeactivate", "onDirty", "onDrag", "onDragDrop", "onDragEnd", "onDragGesture", "onDragOver", "onDrop", "onExecCommand", "onFocus", "onFocusIn", "onFocusOut", "onGetContent", "onHide", "onInit", "onKeyDown", "onKeyPress", "onKeyUp", "onLoadContent", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseOut", "onMouseOver", "onMouseUp", "onNodeChange", "onObjectResizeStart", "onObjectResized", "onObjectSelected", "onPaste", "onPostProcess", "onPostRender", "onPreProcess", "onProgressState", "onRedo", "onRemove", "onReset", "onSaveContent", "onSelectionChange", "onSetAttrib", "onSetContent", "onShow", "onSubmit", "onUndo", "onVisualAid"];
            let Av = 0;
            const Dv = e => {
                    const t = (new Date).getTime(),
                        n = Math.floor(1e9 * Math.random());
                    return Av++, e + "_" + n + Av + String(t)
                },
                Tv = e => void 0 !== e && "textarea" === e.tagName.toLowerCase(),
                Ov = e => void 0 === e || "" === e ? [] : Array.isArray(e) ? e : e.split(" "),
                Fv = () => {},
                Pv = e => null == e,
                Iv = () => ({
                    listeners: [],
                    scriptId: Dv("tiny-script"),
                    scriptLoaded: !1
                }),
                Mv = (() => {
                    let e = Iv();
                    return {
                        load: (t, n, r) => {
                            e.scriptLoaded ? r() : (e.listeners.push(r), t.getElementById(e.scriptId) || ((t, n, r, s) => {
                                const i = n.createElement("script");
                                i.referrerPolicy = "origin", i.type = "application/javascript", i.id = t, i.src = r;
                                const o = () => {
                                    i.removeEventListener("load", o), e.listeners.forEach(e => e()), e.scriptLoaded = !0
                                };
                                i.addEventListener("load", o), n.head && n.head.appendChild(i)
                            })(e.scriptId, t, n))
                        },
                        reinitialize: () => {
                            e = Iv()
                        }
                    }
                })(),
                Rv = new Kn("TINYMCE_SCRIPT_SRC"),
                Nv = {
                    provide: vy,
                    useExisting: se(() => Lv),
                    multi: !0
                };
            let Lv = (() => {
                    class e extends Ev {
                        constructor(e, t, n, r) {
                            super(), this.platformId = n, this.tinymceScriptSrc = r, this.cloudChannel = "5", this.apiKey = "no-api-key", this.id = "", this.modelEvents = "change keyup undo redo", this.onTouchedCallback = Fv, this.onChangeCallback = Fv, this._elementRef = e, this.ngZone = t, this.initialise = this.initialise.bind(this)
                        }
                        set disabled(e) {
                            this._disabled = e, this._editor && this._editor.initialized && this._editor.setMode(e ? "readonly" : "design")
                        }
                        get disabled() {
                            return this._disabled
                        }
                        get editor() {
                            return this._editor
                        }
                        writeValue(e) {
                            this._editor && this._editor.initialized ? this._editor.setContent(Pv(e) ? "" : e) : this.initialValue = null === e ? void 0 : e
                        }
                        registerOnChange(e) {
                            this.onChangeCallback = e
                        }
                        registerOnTouched(e) {
                            this.onTouchedCallback = e
                        }
                        setDisabledState(e) {
                            this._editor ? this._editor.setMode(e ? "readonly" : "design") : e && (this.init = Object.assign(Object.assign({}, this.init), {
                                readonly: !0
                            }))
                        }
                        ngAfterViewInit() {
                            Zh(this.platformId) && (this.id = this.id || Dv("tiny-angular"), this.inline = void 0 !== this.inline ? "boolean" != typeof this.inline || this.inline : this.init && this.init.inline, this.createElement(), null !== xv() ? this.initialise() : this._element && this._element.ownerDocument && Mv.load(this._element.ownerDocument, this.getScriptSrc(), this.initialise))
                        }
                        ngOnDestroy() {
                            null !== xv() && xv().remove(this._editor)
                        }
                        createElement() {
                            this._element = document.createElement(this.inline ? "string" == typeof this.tagName ? this.tagName : "div" : "textarea"), this._element && (this._element.id = this.id, Tv(this._element) && (this._element.style.visibility = "hidden"), this._elementRef.nativeElement.appendChild(this._element))
                        }
                        initialise() {
                            const e = Object.assign(Object.assign({}, this.init), {
                                target: this._element,
                                inline: this.inline,
                                readonly: this.disabled,
                                plugins: (t = this.init && this.init.plugins, n = this.plugins, Ov(t).concat(Ov(n))),
                                toolbar: this.toolbar || this.init && this.init.toolbar,
                                setup: e => {
                                    this._editor = e, e.on("init", t => {
                                        this.initEditor(e)
                                    }), ((e, t) => {
                                        kv.forEach(n => {
                                            const r = e[n];
                                            t.on(n.substring(2), n => e.ngZone.run(() => r.emit({
                                                event: n,
                                                editor: t
                                            })))
                                        })
                                    })(this, e), this.init && "function" == typeof this.init.setup && this.init.setup(e)
                                }
                            });
                            var t, n;
                            Tv(this._element) && (this._element.style.visibility = ""), this.ngZone.runOutsideAngular(() => {
                                xv().init(e)
                            })
                        }
                        getScriptSrc() {
                            return Pv(this.tinymceScriptSrc) ? `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` : this.tinymceScriptSrc
                        }
                        initEditor(e) {
                            e.on("blur", () => this.ngZone.run(() => this.onTouchedCallback())), e.on(this.modelEvents, () => {
                                this.ngZone.run(() => this.onChangeCallback(e.getContent({
                                    format: this.outputFormat
                                })))
                            }), "string" == typeof this.initialValue && this.ngZone.run(() => {
                                e.setContent(this.initialValue), this.onChangeCallback(e.getContent({
                                    format: this.outputFormat
                                }))
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(nl), Ro(tc), Ro(Vu), Ro(Rv, 8))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["editor"]
                        ],
                        inputs: {
                            cloudChannel: "cloudChannel",
                            apiKey: "apiKey",
                            id: "id",
                            modelEvents: "modelEvents",
                            disabled: "disabled",
                            initialValue: "initialValue",
                            init: "init",
                            inline: "inline",
                            outputFormat: "outputFormat",
                            tagName: "tagName",
                            plugins: "plugins",
                            toolbar: "toolbar"
                        },
                        features: [Za([Nv]), yo],
                        decls: 1,
                        vars: 0,
                        template: function(e, t) {
                            1 & e && Io(0, Sv, 0, 0, "ng-template")
                        },
                        styles: ["[_nghost-%COMP%] { display: block; }"]
                    }), e
                })(),
                jv = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        imports: [
                            [Kh, Bb]
                        ]
                    }), e
                })();

            function Bv(e, t, n, r) {
                var s, i = arguments.length,
                    o = i < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, n, r);
                else
                    for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, n, o) : s(t, n)) || o);
                return i > 3 && o && Object.defineProperty(t, n, o), o
            }

            function Vv(e, t) {
                return function(n, r) {
                    t(n, r, e)
                }
            }

            function Uv(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function $v(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "ngx-dropzone-remove-badge", 1), qo("click", function(t) {
                        return Rt(e), Ko()._remove(t)
                    }), Bo()
                }
            }
            const Hv = [
                    [
                        ["ngx-dropzone-label"]
                    ]
                ],
                zv = ["ngx-dropzone-label"],
                qv = ["fileInput"];

            function Gv(e, t) {
                1 & e && Yo(0, 2, ["*ngIf", "!_hasPreviews"])
            }
            const Wv = [
                    [
                        ["ngx-dropzone-preview"]
                    ], "*", [
                        ["ngx-dropzone-label"]
                    ]
                ],
                Kv = ["ngx-dropzone-preview", "*", "ngx-dropzone-label"];
            let Zv = (() => {
                class e {}
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275dir = Ze({
                    type: e,
                    selectors: [
                        ["ngx-dropzone-label"]
                    ]
                }), e
            })();

            function Qv(e) {
                return null != e && "false" != `${e}`
            }
            var Yv = function(e) {
                return e[e.BACKSPACE = 8] = "BACKSPACE", e[e.DELETE = 46] = "DELETE", e
            }({});
            let Jv = (() => {
                    class e {
                        constructor(e) {
                            this.sanitizer = e, this._removable = !1, this.removed = new gu, this.tabIndex = 0
                        }
                        set file(e) {
                            this._file = e
                        }
                        get file() {
                            return this._file
                        }
                        get removable() {
                            return this._removable
                        }
                        set removable(e) {
                            this._removable = Qv(e)
                        }
                        keyEvent(e) {
                            switch (e.keyCode) {
                                case Yv.BACKSPACE:
                                case Yv.DELETE:
                                    this.remove()
                            }
                        }
                        get hostStyle() {
                            return this.sanitizer.bypassSecurityTrustStyle("\n\t\t\tdisplay: flex;\n\t\t\theight: 140px;\n\t\t\tmin-height: 140px;\n\t\t\tmin-width: 180px;\n\t\t\tmax-width: 180px;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tpadding: 0 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder-radius: 5px;\n\t\t\tposition: relative;\n\t\t")
                        }
                        _remove(e) {
                            e.stopPropagation(), this.remove()
                        }
                        remove() {
                            this._removable && this.removed.next(this.file)
                        }
                        readFile() {
                            return e = this, void 0, n = function*() {
                                return new Promise((e, t) => {
                                    const n = new FileReader;
                                    if (n.onload = t => {
                                            e(t.target.result)
                                        }, n.onerror = e => {
                                            console.error(`FileReader failed on file ${this.file.name}.`), t(e)
                                        }, !this.file) return t("No file to read. Please provide a file using the [file] Input property.");
                                    n.readAsDataURL(this.file)
                                })
                            }, new((t = void 0) || (t = Promise))(function(r, s) {
                                function i(e) {
                                    try {
                                        a(n.next(e))
                                    } catch (t) {
                                        s(t)
                                    }
                                }

                                function o(e) {
                                    try {
                                        a(n.throw(e))
                                    } catch (t) {
                                        s(t)
                                    }
                                }

                                function a(e) {
                                    var n;
                                    e.done ? r(e.value) : (n = e.value, n instanceof t ? n : new t(function(e) {
                                        e(n)
                                    })).then(i, o)
                                }
                                a((n = n.apply(e, [])).next())
                            });
                            var e, t, n
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(xd))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["ngx-dropzone-preview"]
                        ],
                        hostVars: 3,
                        hostBindings: function(e, t) {
                            1 & e && qo("keyup", function(e) {
                                return t.keyEvent(e)
                            }), 2 & e && (Pa("tabindex", t.tabIndex), ya(Ca, fa, t.hostStyle, !1))
                        },
                        inputs: {
                            file: "file",
                            removable: "removable"
                        },
                        outputs: {
                            removed: "removed"
                        },
                        ngContentSelectors: zv,
                        decls: 2,
                        vars: 1,
                        consts: [
                            [3, "click", 4, "ngIf"],
                            [3, "click"]
                        ],
                        template: function(e, t) {
                            1 & e && (Qo(Hv), Yo(0), Io(1, $v, 1, 0, "ngx-dropzone-remove-badge", 0)), 2 & e && (ni(1), No("ngIf", t.removable))
                        },
                        directives: function() {
                            return [Nh, t_]
                        },
                        styles: ["[_nghost-%COMP%]{background-image:linear-gradient(0deg,#ededed,#efefef,#f1f1f1,#f4f4f4,#f6f6f6)}[_nghost-%COMP%]:focus, [_nghost-%COMP%]:hover{background-image:linear-gradient(0deg,#e3e3e3,#ebeaea,#e8e7e7,#ebeaea,#f4f4f4);outline:0}[_nghost-%COMP%]:focus   ngx-dropzone-remove-badge[_ngcontent-%COMP%], [_nghost-%COMP%]:hover   ngx-dropzone-remove-badge[_ngcontent-%COMP%]{opacity:1}[_nghost-%COMP%]   ngx-dropzone-remove-badge[_ngcontent-%COMP%]{opacity:0}[_nghost-%COMP%]     ngx-dropzone-label{overflow-wrap:break-word}"]
                    }), e
                })(),
                Xv = (() => {
                    class e {
                        parseFileList(e, t, n, r) {
                            const s = [],
                                i = [];
                            for (let o = 0; o < e.length; o++) {
                                const a = e.item(o);
                                this.isAccepted(a, t) ? n && a.size > n ? this.rejectFile(i, a, "size") : !r && s.length >= 1 ? this.rejectFile(i, a, "no_multiple") : s.push(a) : this.rejectFile(i, a, "type")
                            }
                            return {
                                addedFiles: s,
                                rejectedFiles: i
                            }
                        }
                        isAccepted(e, t) {
                            if ("*" === t) return !0;
                            const n = t.split(",").map(e => e.toLowerCase().trim()),
                                r = e.type.toLowerCase(),
                                s = e.name.toLowerCase();
                            return !!n.find(e => e.endsWith("/*") ? r.split("/")[0] === e.split("/")[0] : e.startsWith(".") ? s.endsWith(e) : e == r)
                        }
                        rejectFile(e, t, n) {
                            const r = t;
                            r.reason = n, e.push(r)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                e_ = (() => {
                    class e {
                        constructor(e) {
                            this.service = e, this.change = new gu, this.accept = "*", this._disabled = !1, this._multiple = !0, this._maxFileSize = void 0, this._expandable = !1, this._disableClick = !1, this._isHovered = !1
                        }
                        get _hasPreviews() {
                            return !!this._previewChildren.length
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = Qv(e), this._isHovered && (this._isHovered = !1)
                        }
                        get multiple() {
                            return this._multiple
                        }
                        set multiple(e) {
                            this._multiple = Qv(e)
                        }
                        get maxFileSize() {
                            return this._maxFileSize
                        }
                        set maxFileSize(e) {
                            this._maxFileSize = function(e) {
                                return isNaN(parseFloat(e)) || isNaN(Number(e)) ? null : Number(e)
                            }(e)
                        }
                        get expandable() {
                            return this._expandable
                        }
                        set expandable(e) {
                            this._expandable = Qv(e)
                        }
                        get disableClick() {
                            return this._disableClick
                        }
                        set disableClick(e) {
                            this._disableClick = Qv(e)
                        }
                        _onClick() {
                            this.disableClick || this.showFileSelector()
                        }
                        _onDragOver(e) {
                            this.disabled || (this.preventDefault(e), this._isHovered = !0)
                        }
                        _onDragLeave() {
                            this._isHovered = !1
                        }
                        _onDrop(e) {
                            this.disabled || (this.preventDefault(e), this._isHovered = !1, this.handleFileDrop(e.dataTransfer.files))
                        }
                        showFileSelector() {
                            this.disabled || this._fileInput.nativeElement.click()
                        }
                        _onFilesSelected(e) {
                            this.handleFileDrop(e.target.files), this._fileInput.nativeElement.value = "", this.preventDefault(e)
                        }
                        handleFileDrop(e) {
                            const t = this.service.parseFileList(e, this.accept, this.maxFileSize, this.multiple);
                            this.change.next({
                                addedFiles: t.addedFiles,
                                rejectedFiles: t.rejectedFiles,
                                source: this
                            })
                        }
                        preventDefault(e) {
                            e.preventDefault(), e.stopPropagation()
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(Xv, 2))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["ngx-dropzone"],
                            ["", "ngx-dropzone", ""]
                        ],
                        contentQueries: function(e, t, n) {
                            if (1 & e && function(e, t, n, r) {
                                    const s = Mt();
                                    if (s.firstCreatePass) {
                                        const n = Nt();
                                        Fu(s, new _u(t, 1, void 0), n.index),
                                            function(e, t) {
                                                const n = e.contentQueries || (e.contentQueries = []);
                                                t !== (n.length ? n[n.length - 1] : -1) && n.push(e.queries.length - 1, t)
                                            }(s, e)
                                    }
                                    Ou(s, It(), 1)
                                }(n, Jv), 2 & e) {
                                let e;
                                Au(e = Tu()) && (t._previewChildren = e)
                            }
                        },
                        viewQuery: function(e, t) {
                            if (1 & e && Du(qv, 3), 2 & e) {
                                let e;
                                Au(e = Tu()) && (t._fileInput = e.first)
                            }
                        },
                        hostVars: 8,
                        hostBindings: function(e, t) {
                            1 & e && qo("click", function() {
                                return t._onClick()
                            })("dragover", function(e) {
                                return t._onDragOver(e)
                            })("dragleave", function() {
                                return t._onDragLeave()
                            })("drop", function(e) {
                                return t._onDrop(e)
                            }), 2 & e && pa("ngx-dz-hovered", t._isHovered)("ngx-dz-disabled", t.disabled)("expandable", t.expandable)("unclickable", t.disableClick)
                        },
                        inputs: {
                            accept: "accept",
                            disabled: "disabled",
                            multiple: "multiple",
                            maxFileSize: "maxFileSize",
                            expandable: "expandable",
                            disableClick: "disableClick",
                            id: "id",
                            ariaLabel: ["aria-label", "ariaLabel"],
                            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                            ariaDescribedBy: ["aria-describedby", "ariaDescribedBy"]
                        },
                        outputs: {
                            change: "change"
                        },
                        features: [Za([Xv])],
                        ngContentSelectors: Kv,
                        decls: 5,
                        vars: 8,
                        consts: [
                            ["type", "file", 3, "id", "multiple", "accept", "disabled", "change"],
                            ["fileInput", ""],
                            [4, "ngIf"]
                        ],
                        template: function(e, t) {
                            1 & e && (Qo(Wv), jo(0, "input", 0, 1), qo("change", function(e) {
                                return t._onFilesSelected(e)
                            }), Bo(), Io(2, Gv, 1, 0, "ng-content", 2), Yo(3), Yo(4, 1)), 2 & e && (No("id", t.id)("multiple", t.multiple)("accept", t.accept)("disabled", t.disabled), Oo("aria-label", t.ariaLabel)("aria-labelledby", t.ariaLabelledby)("aria-describedby", t.ariaDescribedBy), ni(2), No("ngIf", !t._hasPreviews))
                        },
                        directives: [Nh],
                        styles: ["[_nghost-%COMP%]{align-items:center;background:#fff;border:2px dashed #717386;border-radius:5px;color:#717386;cursor:pointer;display:flex;font-size:16px;height:180px;overflow-x:auto}.ngx-dz-hovered[_nghost-%COMP%]{border-style:solid}.ngx-dz-disabled[_nghost-%COMP%]{cursor:no-drop;opacity:.5;pointer-events:none}.expandable[_nghost-%COMP%]{flex-wrap:wrap;height:unset;min-height:180px;overflow:hidden}.unclickable[_nghost-%COMP%]{cursor:default}[_nghost-%COMP%]     ngx-dropzone-label{margin:10px auto;text-align:center;z-index:10}[_nghost-%COMP%]   input[_ngcontent-%COMP%]{height:.1px;opacity:0;overflow:hidden;position:absolute;width:.1px;z-index:-1}[_nghost-%COMP%]   input[_ngcontent-%COMP%]:focus +   ngx-dropzone-label{outline:1px dotted #000;outline:5px auto -webkit-focus-ring-color}"]
                    }), e
                })(),
                t_ = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["ngx-dropzone-remove-badge"]
                        ],
                        decls: 3,
                        vars: 0,
                        consts: [
                            ["x1", "0", "y1", "0", "x2", "10", "y2", "10"],
                            ["x1", "0", "y1", "10", "x2", "10", "y2", "0"]
                        ],
                        template: function(e, t) {
                            1 & e && (Ft.lFrame.currentNamespace = ft, jo(0, "svg"), Vo(1, "line", 0), Vo(2, "line", 1), Bo())
                        },
                        styles: ["[_nghost-%COMP%]{align-items:center;background:#bbb;border-radius:50%;color:#333;cursor:pointer;display:flex;height:22px;justify-content:center;position:absolute;right:5px;top:5px;width:22px}[_nghost-%COMP%]:hover{background:#aeaeae}[_nghost-%COMP%] > svg[_ngcontent-%COMP%]{height:10px;width:10px}[_nghost-%COMP%] > svg[_ngcontent-%COMP%] > line[_ngcontent-%COMP%]{stroke:#fff;stroke-width:2px}"]
                    }), e
                })(),
                n_ = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        imports: [
                            [Kh]
                        ]
                    }), e
                })();

            function r_(e, t) {
                if (1 & e && (jo(0, "div", 40), jo(1, "strong"), Aa(2), uu(3, "titlecase"), Bo(), Aa(4), jo(5, "button", 41), jo(6, "span", 42), Aa(7, "\xd7"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    Fa("alert alert-", e[0], " alert-dismissible fade show"), ni(2), Ta(" ", cu(3, 5, n.getAlertHead[e[0]]), ":"), ni(2), Ta(" ", e[1], " ")
                }
            }

            function s_(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "ngx-dropzone-preview", 43), qo("removed", function() {
                        Rt(e);
                        const n = t.$implicit;
                        return Ko().onRemoveUpload(n)
                    }), jo(1, "ngx-dropzone-label"), Aa(2), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit;
                    No("removable", !0), ni(2), Oa("", e.name, " (", e.type, ")")
                }
            }

            function i_(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "tr"), jo(1, "th", 44), Aa(2), Bo(), jo(3, "td"), Aa(4), Bo(), jo(5, "td"), jo(6, "button", 45), qo("click", function() {
                        Rt(e);
                        const n = t.$implicit;
                        return Ko().copyMessage("" + n.file)
                    }), Aa(7, "Copy"), Bo(), jo(8, "button", 45), qo("click", function() {
                        return Rt(e), Ko().window.alert("coming soon")
                    }), Aa(9, "Delete"), Bo(), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit,
                        n = t.index;
                    ni(2), Da(n + 1), ni(2), Da(e.friendly_name)
                }
            }
            const o_ = function() {
                    return ["spellchecker print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons"]
                },
                a_ = function() {
                    return {
                        text: "HTML/XML",
                        value: "markup"
                    }
                },
                l_ = function() {
                    return {
                        text: "JavaScript",
                        value: "javascript"
                    }
                },
                u_ = function() {
                    return {
                        text: "CSS",
                        value: "css"
                    }
                },
                c_ = function() {
                    return {
                        text: "PHP",
                        value: "php"
                    }
                },
                h_ = function() {
                    return {
                        text: "Ruby",
                        value: "ruby"
                    }
                },
                d_ = function() {
                    return {
                        text: "Python",
                        value: "python"
                    }
                },
                p_ = function() {
                    return {
                        text: "Java",
                        value: "java"
                    }
                },
                f_ = function() {
                    return {
                        text: "C",
                        value: "c"
                    }
                },
                g_ = function() {
                    return {
                        text: "C#",
                        value: "csharp"
                    }
                },
                m_ = function() {
                    return {
                        text: "C++",
                        value: "cpp"
                    }
                },
                y_ = function() {
                    return {
                        text: "Bash",
                        value: "bash"
                    }
                },
                b_ = function(e, t, n, r, s, i, o, a, l, u, c) {
                    return [e, t, n, r, s, i, o, a, l, u, c]
                },
                v_ = function(e, t) {
                    return {
                        height: 500,
                        init_instance_callback: void 0,
                        plugins: e,
                        default_link_target: "_blank",
                        codesample_languages: t,
                        toolbar: "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl"
                    }
                };
            let __ = (() => {
                class e {
                    constructor(e, t) {
                        this.dashboardService = e, this.router = t, this.getAlertHead = {
                            success: "Success",
                            danger: "Error"
                        }, this.files_upload = [], this.allFiles = {
                            content: []
                        }, this.alerts = [];
                        let n = this.router.url.split("/");
                        this.slug = n[n.length - 1];
                        let r = localStorage.getItem("token");
                        if (null !== r) {
                            let e = JSON.parse(r);
                            this.accessToken = e.token, this.username = e.username
                        } else window.location.replace("");
                        this.dashboardService.getBlog(this.slug, this.accessToken).subscribe(e => {
                            console.log(e), e.success ? (this.content = e.content, this.title = e.title, this.metaTags = e.metaTags, this.metaDescription = e.metaDesc, this.isPublished = e.is_published, this.isProofread = e.is_proofread, this.content = e.content) : (console.log("Redirecting..."), window.location.replace(""))
                        })
                    }
                    ngOnInit() {
                        this.getAllFiles()
                    }
                    setAlert(e, t) {
                        this.alerts = [], this.alerts.push([e, t])
                    }
                    submit() {
                        let e = new FormData;
                        e.append("title", this.title), e.append("slug", this.slug), e.append("metaTags", this.metaTags), e.append("metaDesc", this.metaDescription), e.append("is_published", this.isPublished), e.append("is_proofread", this.isProofread), e.append("content", this.content), this.dashboardService.updateBlog(this.slug, e, this.accessToken).subscribe(e => {
                            e.success || this.setAlert("danger", "Some Error occurred"), this.setAlert("success", "Saved successfully")
                        })
                    }
                    onSelectUpload(e) {
                        this.files_upload.push(...e.addedFiles)
                    }
                    onRemoveUpload(e) {
                        this.files_upload.splice(this.files_upload.indexOf(e), 1)
                    }
                    uploadImgFiles() {
                        console.log("Uploading image files..."), this.files_upload.forEach(e => {
                            let t = new FormData;
                            t.append("file", e), t.append("type", "content"), this.dashboardService.addFileBlog(t, this.slug, this.accessToken).subscribe(e => {
                                this.getAllFiles()
                            })
                        }), this.files_upload = []
                    }
                    getAllFiles() {
                        console.log("Getting all files"), this.dashboardService.getAllFilesBlog(this.slug, this.accessToken).subscribe(e => {
                            this.allFiles = e.response
                        }), this.files_upload = []
                    }
                    copyMessage(e) {
                        const t = document.createElement("textarea");
                        t.style.position = "fixed", t.style.left = "0", t.style.top = "0", t.style.opacity = "0", t.value = e, document.body.appendChild(t), t.focus(), t.select(), document.execCommand("copy"), document.body.removeChild(t)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Cv), Ro(im))
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["app-dashboard-blog-page"]
                    ],
                    decls: 71,
                    vars: 39,
                    consts: [
                        ["role", "alert", 3, "class", 4, "ngFor", "ngForOf"],
                        [1, "main-container"],
                        [1, "container", "my-4"],
                        [1, "buttons"],
                        ["routerLink", "/dashboard/blogs"],
                        [1, "btn", "btn-danger", "mr-2"],
                        ["routerLink", "/dashboard"],
                        [1, "btn", "btn-danger", "mx-2"],
                        [1, "my-3"],
                        ["method", "post", 3, "ngSubmit"],
                        [1, "form-group"],
                        ["for", "title"],
                        ["type", "text", "name", "title", "aria-describedby", "title", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["for", "announcements"],
                        ["type", "text", "name", "slug", "aria-describedby", "slug", 1, "form-control", 3, "ngModel", "disabled", "ngModelChange"],
                        ["for", "metaTags"],
                        ["type", "text", "name", "metaTags", "aria-describedby", "metaTags", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["type", "text", "name", "metaDescription", "aria-describedby", "metaDescription", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        [1, "form-group", "form-check"],
                        ["type", "checkbox", "name", "isPublished", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                        ["for", "isPublished", 1, "isPublished"],
                        ["type", "checkbox", "name", "isProofread", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                        ["for", "isProofread", 1, "isProofread"],
                        ["name", "content", "apiKey", "g1e96t3jfxgw0fofjmlxso7hfhj65mdbv1h0llkjm0g8wxsp", 3, "ngModel", "init", "ngModelChange"],
                        [1, "d-flex", "justify-content-end", "my-3"],
                        ["type", "submit", 1, "btn", "btn-danger", "submitBtn"],
                        [1, "container"],
                        ["accept", "*", 3, "change"],
                        [3, "removable", "removed", 4, "ngFor", "ngForOf"],
                        [1, "btn", "btn-danger", "my-3", 3, "click"],
                        ["id", "accordionExample", 1, "accordion"],
                        [1, "card"],
                        ["id", "headingOne", 1, "card-header"],
                        [1, "mb-0"],
                        ["type", "button", "data-toggle", "collapse", "data-target", "#collapseOne", "aria-expanded", "true", "aria-controls", "collapseOne", 1, "btn", "btn-link", "btn-block", "text-left"],
                        ["id", "collapseOne", "aria-labelledby", "headingOne", "data-parent", "#accordionExample", 1, "collapse"],
                        [1, "card-body"],
                        [1, "table"],
                        ["scope", "col"],
                        [4, "ngFor", "ngForOf"],
                        ["role", "alert"],
                        ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close"],
                        ["aria-hidden", "true"],
                        [3, "removable", "removed"],
                        ["scope", "row"],
                        [1, "btn-sm", "btn-danger", "mx-2", 3, "click"]
                    ],
                    template: function(e, t) {
                        1 & e && (Io(0, r_, 8, 7, "div", 0), jo(1, "div", 1), jo(2, "div", 2), jo(3, "div", 3), jo(4, "a", 4), jo(5, "button", 5), Aa(6, "\u2190 Go Back"), Bo(), Bo(), jo(7, "a", 6), jo(8, "button", 7), Aa(9, "Dashboard Home"), Bo(), Bo(), Bo(), jo(10, "h2", 8), Aa(11, "Update Video"), Bo(), jo(12, "form", 9), qo("ngSubmit", function() {
                            return t.submit()
                        }), jo(13, "div", 10), jo(14, "label", 11), Aa(15, "Title"), Bo(), jo(16, "input", 12), qo("ngModelChange", function(e) {
                            return t.title = e
                        }), Bo(), Bo(), jo(17, "div", 10), jo(18, "label", 13), Aa(19, "Slug"), Bo(), jo(20, "input", 14), qo("ngModelChange", function(e) {
                            return t.slug = e
                        }), Bo(), Bo(), jo(21, "div", 10), jo(22, "label", 15), Aa(23, "Meta Tags"), Bo(), jo(24, "input", 16), qo("ngModelChange", function(e) {
                            return t.metaTags = e
                        }), Bo(), Bo(), jo(25, "div", 10), jo(26, "label", 15), Aa(27, "Meta Description"), Bo(), jo(28, "input", 17), qo("ngModelChange", function(e) {
                            return t.metaDescription = e
                        }), Bo(), Bo(), jo(29, "div", 18), jo(30, "input", 19), qo("ngModelChange", function(e) {
                            return t.isPublished = e
                        }), Bo(), jo(31, "label", 20), Aa(32, "Is Published?"), Bo(), Bo(), jo(33, "div", 18), jo(34, "input", 21), qo("ngModelChange", function(e) {
                            return t.isProofread = e
                        }), Bo(), jo(35, "label", 22), Aa(36, "Is Proofread?"), Bo(), Bo(), jo(37, "editor", 23), qo("ngModelChange", function(e) {
                            return t.content = e
                        }), Bo(), jo(38, "div", 24), jo(39, "button", 25), Aa(40, "Submit"), Bo(), Bo(), Bo(), Vo(41, "hr"), Bo(), jo(42, "div", 26), jo(43, "h2", 8), Aa(44, "Upload a file which will appear in the content"), Bo(), jo(45, "ngx-dropzone", 27), qo("change", function(e) {
                            return t.onSelectUpload(e)
                        }), jo(46, "ngx-dropzone-label"), Aa(47, "Click or drop single/multiple files here!"), Bo(), Io(48, s_, 3, 3, "ngx-dropzone-preview", 28), Bo(), jo(49, "div", 24), jo(50, "button", 29), qo("click", function() {
                            return t.uploadImgFiles()
                        }), Aa(51, "Upload Files"), Bo(), Bo(), jo(52, "div", 30), jo(53, "div", 31), jo(54, "div", 32), jo(55, "h2", 33), jo(56, "button", 34), Aa(57, " View Uploaded Files "), Bo(), Bo(), Bo(), jo(58, "div", 35), jo(59, "div", 36), jo(60, "table", 37), jo(61, "thead"), jo(62, "tr"), jo(63, "th", 38), Aa(64, "#"), Bo(), jo(65, "th", 38), Aa(66, "Filename"), Bo(), jo(67, "th", 38), Aa(68, "Actions"), Bo(), Bo(), Bo(), jo(69, "tbody"), Io(70, i_, 10, 2, "tr", 39), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), Bo()), 2 & e && (No("ngForOf", t.alerts), ni(16), No("ngModel", t.title), ni(4), No("ngModel", t.slug)("disabled", !0), ni(4), No("ngModel", t.metaTags), ni(4), No("ngModel", t.metaDescription), ni(2), No("ngModel", t.isPublished), ni(4), No("ngModel", t.isProofread), ni(3), No("ngModel", t.content)("init", su(36, v_, nu(12, o_), iu(24, b_, [nu(13, a_), nu(14, l_), nu(15, u_), nu(16, c_), nu(17, h_), nu(18, d_), nu(19, p_), nu(20, f_), nu(21, g_), nu(22, m_), nu(23, y_)]))), ni(11), No("ngForOf", t.files_upload), ni(22), No("ngForOf", t.allFiles.content))
                    },
                    directives: [Mh, om, mb, qy, db, xy, zy, gb, wy, Lv, e_, Zv, Jv],
                    pipes: [Gh],
                    styles: ["#accordionExample[_ngcontent-%COMP%]{margin-bottom:122px}"]
                }), e
            })();
            var w_ = function() {
                    function e(e, t, n) {
                        this.el = e, this.vcr = t, this.renderer = n, this.dtOptions = {}
                    }
                    return e.prototype.ngOnInit = function() {
                        var e = this;
                        this.dtTrigger ? this.dtTrigger.subscribe(function() {
                            e.displayTable()
                        }) : this.displayTable()
                    }, e.prototype.ngOnDestroy = function() {
                        this.dtTrigger && this.dtTrigger.unsubscribe(), this.dt && this.dt.destroy(!0)
                    }, e.prototype.displayTable = function() {
                        var e = this,
                            t = this;
                        this.dtInstance = new Promise(function(n, r) {
                            Promise.resolve(e.dtOptions).then(function(r) {
                                setTimeout(function() {
                                    var s = {
                                        rowCallback: function(n, s, i) {
                                            if (r.columns) {
                                                var o = r.columns;
                                                o.filter(function(e) {
                                                    return e.ngPipeInstance && !e.ngTemplateRef
                                                }).forEach(function(e) {
                                                    var t = e.ngPipeInstance,
                                                        r = o.findIndex(function(t) {
                                                            return t.data == e.data
                                                        }),
                                                        s = n.childNodes.item(r),
                                                        i = $(s).text(),
                                                        a = t.transform(i);
                                                    $(s).text(a)
                                                }), o.filter(function(e) {
                                                    return e.ngTemplateRef && !e.ngPipeInstance
                                                }).forEach(function(e) {
                                                    var r = e.ngTemplateRef,
                                                        i = r.ref,
                                                        a = r.context,
                                                        l = o.findIndex(function(t) {
                                                            return t.data == e.data
                                                        }),
                                                        u = n.childNodes.item(l),
                                                        c = Object.assign({}, a, null == a ? void 0 : a.userData, {
                                                            adtData: s
                                                        }),
                                                        h = t.vcr.createEmbeddedView(i, c);
                                                    t.renderer.appendChild(u, h.rootNodes[0])
                                                })
                                            }
                                            e.dtOptions.rowCallback && e.dtOptions.rowCallback(n, s, i)
                                        }
                                    };
                                    s = Object.assign({}, r, s), e.dt = $(e.el.nativeElement).DataTable(s), n(e.dt)
                                })
                            })
                        })
                    }, e.\u0275fac = function(t) {
                        return new(t || e)(Ro(nl), Ro(Ul), Ro(il))
                    }, e.\u0275dir = Ze({
                        type: e,
                        selectors: [
                            ["", "datatable", ""]
                        ],
                        inputs: {
                            dtOptions: "dtOptions",
                            dtTrigger: "dtTrigger"
                        }
                    }), e
                }(),
                C_ = function() {
                    function e() {}
                    return e.forRoot = function() {
                        return {
                            ngModule: e
                        }
                    }, e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        imports: [
                            [Kh]
                        ]
                    }), e
                }();

            function S_(e, t) {
                if (1 & e && (jo(0, "div", 30), jo(1, "strong"), Aa(2), uu(3, "titlecase"), Bo(), Aa(4), jo(5, "button", 31), jo(6, "span", 32), Aa(7, "\xd7"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    Fa("alert alert-", e[0], " alert-dismissible fade show"), ni(2), Ta(" ", cu(3, 5, n.getAlertHead[e[0]]), ":"), ni(2), Ta(" ", e[1], " ")
                }
            }

            function x_(e, t) {
                if (1 & e && (jo(0, "tr"), jo(1, "td"), jo(2, "a", 34), Aa(3), Bo(), Bo(), jo(4, "td"), jo(5, "a", 34), Aa(6), Bo(), Bo(), jo(7, "td"), jo(8, "a", 34), Aa(9), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = t.index;
                    ni(2), Xo("routerLink", "/dashboard/blogs/", e.slug, ""), ni(1), Da(n), ni(2), Xo("routerLink", "/dashboard/blogs/", e.slug, ""), ni(1), Da(e.title), ni(2), Xo("routerLink", "/dashboard/blogs/", e.slug, ""), ni(1), Da(e.slug)
                }
            }

            function E_(e, t) {
                if (1 & e && (jo(0, "tbody"), Io(1, x_, 10, 6, "tr", 33), Bo()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngForOf", e.blogs)
                }
            }

            function k_(e, t) {
                1 & e && (jo(0, "tbody"), jo(1, "tr"), jo(2, "td", 35), Aa(3, "No data!"), Bo(), Bo(), Bo())
            }
            const A_ = function() {
                    return ["spellchecker print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons"]
                },
                D_ = function() {
                    return {
                        text: "HTML/XML",
                        value: "markup"
                    }
                },
                T_ = function() {
                    return {
                        text: "JavaScript",
                        value: "javascript"
                    }
                },
                O_ = function() {
                    return {
                        text: "CSS",
                        value: "css"
                    }
                },
                F_ = function() {
                    return {
                        text: "PHP",
                        value: "php"
                    }
                },
                P_ = function() {
                    return {
                        text: "Ruby",
                        value: "ruby"
                    }
                },
                I_ = function() {
                    return {
                        text: "Python",
                        value: "python"
                    }
                },
                M_ = function() {
                    return {
                        text: "Java",
                        value: "java"
                    }
                },
                R_ = function() {
                    return {
                        text: "C",
                        value: "c"
                    }
                },
                N_ = function() {
                    return {
                        text: "C#",
                        value: "csharp"
                    }
                },
                L_ = function() {
                    return {
                        text: "C++",
                        value: "cpp"
                    }
                },
                j_ = function() {
                    return {
                        text: "Bash",
                        value: "bash"
                    }
                },
                B_ = function(e, t, n, r, s, i, o, a, l, u, c) {
                    return [e, t, n, r, s, i, o, a, l, u, c]
                },
                V_ = function(e, t) {
                    return {
                        height: 500,
                        init_instance_callback: void 0,
                        plugins: e,
                        codesample_languages: t,
                        default_link_target: "_blank",
                        toolbar: "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl"
                    }
                };
            let U_ = (() => {
                    class e {
                        constructor(e, t) {
                            this.http = e, this.dashboardService = t, this.getAlertHead = {
                                success: "Success",
                                danger: "Error"
                            }, this.dtOptions = {}, this.isPublished = !1, this.isProofread = !1, this.alerts = [];
                            let n = localStorage.getItem("token");
                            if (null !== n) {
                                let e = JSON.parse(n);
                                this.accessToken = e.token, this.username = e.username
                            } else window.location.replace(" ")
                        }
                        ngOnInit() {
                            this.host = iy, this.blogUrl = this.host + "dashboard/getblogs";
                            const e = this;
                            this.dtOptions = {
                                pagingType: "full_numbers",
                                pageLength: 10,
                                serverSide: !0,
                                processing: !0,
                                ajax: (t, n) => {
                                    e.http.post(this.blogUrl, t, {
                                        headers: {
                                            Authorization: "Token " + e.accessToken
                                        }
                                    }).subscribe(t => {
                                        e.blogs = t.data, n({
                                            recordsTotal: t.recordsTotal,
                                            recordsFiltered: t.recordsFiltered,
                                            data: []
                                        })
                                    })
                                },
                                columns: [{
                                    data: "slug"
                                }, {
                                    data: "title"
                                }, {
                                    data: "getSeries"
                                }]
                            }
                        }
                        submit(e) {
                            let t = new FormData;
                            t.append("title", this.title), t.append("content", this.content), t.append("slug", this.slug), t.append("metaTags", this.metaTags), t.append("metaDesc", this.metaDescription), t.append("is_published", new Boolean(this.isPublished).toString()), t.append("is_proofread", new Boolean(this.isProofread).toString()), this.dashboardService.addBlog(this.slug, t, this.accessToken).subscribe(t => {
                                t.success ? this.setAlert("success", "Added a new blog successfully") : this.setAlert("danger", "Some Error occurred"), e.reset()
                            })
                        }
                        setAlert(e, t) {
                            this.alerts = [], this.alerts.push([e, t])
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(Hm), Ro(Cv))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-dashboard-blogs"]
                        ],
                        decls: 57,
                        vars: 39,
                        consts: [
                            ["role", "alert", 3, "class", 4, "ngFor", "ngForOf"],
                            [1, "container", "my-3"],
                            [1, "mt-3", "py-3"],
                            ["type", "button", "data-toggle", "collapse", "data-target", "#collapseExample", "aria-expanded", "false", "aria-controls", "collapseExample", 1, "btn", "btn-primary", "mb-3"],
                            ["routerLink", "/dashboard"],
                            [1, "btn", "btn-danger", "mx-2", "mb-3"],
                            ["id", "collapseExample", 1, "collapse"],
                            [1, "card", "card-body"],
                            [1, "my-3", "py-3"],
                            ["method", "post", 3, "ngSubmit"],
                            ["myForm", "ngForm"],
                            [1, "form-group"],
                            ["for", "title"],
                            ["type", "text", "name", "title", "aria-describedby", "title", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["for", "announcements"],
                            ["type", "text", "name", "slug", "aria-describedby", "slug", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["for", "metaTags"],
                            ["type", "text", "name", "metaTags", "aria-describedby", "metaTags", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["type", "text", "name", "metaDescription", "aria-describedby", "metaDescription", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            [1, "form-group", "form-check"],
                            ["type", "checkbox", "name", "isPublished", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                            ["for", "isPublished", 1, "isPublished"],
                            ["type", "checkbox", "name", "isProofread", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                            ["for", "isProofread", 1, "isProofread"],
                            ["name", "content", "apiKey", "g1e96t3jfxgw0fofjmlxso7hfhj65mdbv1h0llkjm0g8wxsp", 3, "ngModel", "init", "ngModelChange"],
                            [1, "d-flex", "justify-content-end", "my-3"],
                            ["type", "submit", 1, "btn", "btn-primary", "submitBtn", "mx-2"],
                            [1, "existing"],
                            ["datatable", "", 1, "row-border", "hover", "table", 3, "dtOptions"],
                            [4, "ngIf"],
                            ["role", "alert"],
                            ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close"],
                            ["aria-hidden", "true"],
                            [4, "ngFor", "ngForOf"],
                            [3, "routerLink"],
                            ["colspan", "3", 1, "no-data-available"]
                        ],
                        template: function(e, t) {
                            if (1 & e) {
                                const e = Uo();
                                Io(0, S_, 8, 7, "div", 0), jo(1, "div", 1), jo(2, "h2", 2), Aa(3, "Edit Blog Content"), Bo(), jo(4, "button", 3), Aa(5, " + Add a new blog "), Bo(), jo(6, "a", 4), jo(7, "button", 5), Aa(8, "Dashboard Home"), Bo(), Bo(), jo(9, "div", 6), jo(10, "div", 7), jo(11, "h3", 8), Aa(12, "Add a new Blog"), Bo(), jo(13, "form", 9, 10), qo("ngSubmit", function() {
                                    Rt(e);
                                    const n = Mo(14);
                                    return t.submit(n)
                                }), jo(15, "div", 11), jo(16, "label", 12), Aa(17, "Title"), Bo(), jo(18, "input", 13), qo("ngModelChange", function(e) {
                                    return t.title = e
                                }), Bo(), Bo(), jo(19, "div", 11), jo(20, "label", 14), Aa(21, "Slug"), Bo(), jo(22, "input", 15), qo("ngModelChange", function(e) {
                                    return t.slug = e
                                }), Bo(), Bo(), jo(23, "div", 11), jo(24, "label", 16), Aa(25, "Meta Tags"), Bo(), jo(26, "input", 17), qo("ngModelChange", function(e) {
                                    return t.metaTags = e
                                }), Bo(), Bo(), jo(27, "div", 11), jo(28, "label", 16), Aa(29, "Meta Description"), Bo(), jo(30, "input", 18), qo("ngModelChange", function(e) {
                                    return t.metaDescription = e
                                }), Bo(), Bo(), jo(31, "div", 19), jo(32, "input", 20), qo("ngModelChange", function(e) {
                                    return t.isPublished = e
                                }), Bo(), jo(33, "label", 21), Aa(34, "Is Published?"), Bo(), Bo(), jo(35, "div", 19), jo(36, "input", 22), qo("ngModelChange", function(e) {
                                    return t.isProofread = e
                                }), Bo(), jo(37, "label", 23), Aa(38, "Is Proofread?"), Bo(), Bo(), jo(39, "editor", 24), qo("ngModelChange", function(e) {
                                    return t.content = e
                                }), Bo(), jo(40, "div", 25), jo(41, "button", 26), Aa(42, "Add Blog"), Bo(), Bo(), Bo(), Bo(), Bo(), jo(43, "div", 27), jo(44, "h3", 8), Aa(45, "Alter Existing Blogs"), Bo(), jo(46, "table", 28), jo(47, "thead"), jo(48, "tr"), jo(49, "th"), Aa(50, "Sno"), Bo(), jo(51, "th"), Aa(52, "Title"), Bo(), jo(53, "th"), Aa(54, "Slug"), Bo(), Bo(), Bo(), Io(55, E_, 2, 1, "tbody", 29), Io(56, k_, 4, 0, "tbody", 29), Bo(), Bo(), Bo()
                            }
                            2 & e && (No("ngForOf", t.alerts), ni(18), No("ngModel", t.title), ni(4), No("ngModel", t.slug), ni(4), No("ngModel", t.metaTags), ni(4), No("ngModel", t.metaDescription), ni(2), No("ngModel", t.isPublished), ni(4), No("ngModel", t.isProofread), ni(3), No("ngModel", t.content)("init", su(36, V_, nu(12, A_), iu(24, B_, [nu(13, D_), nu(14, T_), nu(15, O_), nu(16, F_), nu(17, P_), nu(18, I_), nu(19, M_), nu(20, R_), nu(21, N_), nu(22, L_), nu(23, j_)]))), ni(7), No("dtOptions", t.dtOptions), ni(9), No("ngIf", 0 != (null == t.blogs ? null : t.blogs.length)), ni(1), No("ngIf", 0 == (null == t.blogs ? null : t.blogs.length)))
                        },
                        directives: [Mh, om, mb, qy, db, xy, zy, gb, wy, Lv, w_, Nh],
                        pipes: [Gh],
                        styles: ["table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{cursor:pointer;text-decoration:none;color:#000;font-weight:500}table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-size:18px}.existing[_ngcontent-%COMP%]{margin-bottom:133px}"]
                    }), e
                })(),
                $_ = (() => {
                    class e {
                        constructor() {
                            let e = localStorage.getItem("token");
                            if (null !== e) {
                                let t = JSON.parse(e);
                                this.accessToken = t.token, this.username = t.username
                            } else window.location.replace(" ")
                        }
                        ngOnInit() {}
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-dashboard-home"]
                        ],
                        decls: 36,
                        vars: 0,
                        consts: [
                            [1, "container", "my-3"],
                            [1, "text-center", "my-3", "py-3"],
                            [1, "row"],
                            [1, "col-md-6", "col-lg-4", "text-center", "my-3"],
                            ["src", "https://./index.html/media/videoSeriesTiles/java.png", "width", "140", "height", "140", 1, "rounded-circle"],
                            [1, "mt-2"],
                            ["routerLink", "/dashboard/videos"],
                            [1, "btn", "btn-sm", "btn-success", "my-2"],
                            ["src", "https://./index.html/media/videoSeriesTiles/Python-logo.jpg", "width", "140", "height", "140", 1, "rounded-circle"],
                            ["routerLink", "/dashboard/blogs"],
                            [1, "btn", "btn-sm", "btn-danger", "my-2"],
                            ["src", "https://./index.html/media/videoSeriesTiles/discuss.png", "width", "140", "height", "140", 1, "rounded-circle"],
                            ["src", "https://www. .com/assets/img/logo.png", "width", "140", "height", "140", 1, "rounded-circle"],
                            [1, "btn", "btn-sm", "btn-primary", "my-2"]
                        ],
                        template: function(e, t) {
                            1 & e && (jo(0, "div", 0), jo(1, "h2", 1), Aa(2, "Welcome to   Dashboard"), Bo(), jo(3, "div", 2), jo(4, "div", 3), Vo(5, "img", 4), jo(6, "h4", 5), Aa(7, "Videos"), Bo(), jo(8, "p"), jo(9, "a", 6), jo(10, "button", 7), Aa(11, "Add/Change Videos"), Bo(), Bo(), Bo(), Bo(), jo(12, "div", 3), Vo(13, "img", 8), jo(14, "h4", 5), Aa(15, "Blog"), Bo(), jo(16, "p"), jo(17, "a", 9), jo(18, "button", 10), Aa(19, "Add/Change Blogs"), Bo(), Bo(), Bo(), Bo(), jo(20, "div", 3), Vo(21, "img", 11), jo(22, "h4", 5), Aa(23, "Comments"), Bo(), jo(24, "p"), jo(25, "a", 6), jo(26, "button", 7), Aa(27, "Reply to Comments"), Bo(), Bo(), Bo(), Bo(), jo(28, "div", 3), Vo(29, "img", 12), jo(30, "h4", 5), Aa(31, "Contact"), Bo(), jo(32, "p"), jo(33, "a", 6), jo(34, "button", 13), Aa(35, "Contact"), Bo(), Bo(), Bo(), Bo(), Bo(), Bo())
                        },
                        directives: [om],
                        styles: [".dashboard-item[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:133px;width:133px;border:2px solid red;margin:13px;cursor:ponter}"]
                    }), e
                })();

            function H_(e, t) {
                if (1 & e && (jo(0, "div", 48), jo(1, "strong"), Aa(2), uu(3, "titlecase"), Bo(), Aa(4), jo(5, "button", 49), jo(6, "span", 50), Aa(7, "\xd7"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    Fa("alert alert-", e[0], " alert-dismissible fade show"), ni(2), Ta(" ", cu(3, 5, n.getAlertHead[e[0]]), ":"), ni(2), Ta(" ", e[1], " ")
                }
            }

            function z_(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "ngx-dropzone-preview", 51), qo("removed", function() {
                        Rt(e);
                        const n = t.$implicit;
                        return Ko().onRemoveUpload(n)
                    }), jo(1, "ngx-dropzone-label"), Aa(2), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit;
                    No("removable", !0), ni(2), Oa("", e.name, " (", e.type, ")")
                }
            }

            function q_(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "tr"), jo(1, "th", 52), Aa(2), Bo(), jo(3, "td"), Aa(4), Bo(), jo(5, "td"), jo(6, "button", 53), qo("click", function() {
                        Rt(e);
                        const n = t.$implicit;
                        return Ko().copyMessage("https://./index.html" + n.file)
                    }), Aa(7, "Copy"), Bo(), jo(8, "button", 53), qo("click", function() {
                        return Rt(e), Ko().window.alert("coming soon")
                    }), Aa(9, "Delete"), Bo(), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit,
                        n = t.index;
                    ni(2), Da(n + 1), ni(2), Da(e.friendly_name)
                }
            }

            function G_(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "ngx-dropzone-preview", 51), qo("removed", function() {
                        Rt(e);
                        const n = t.$implicit;
                        return Ko().onRemoveResource(n)
                    }), jo(1, "ngx-dropzone-label"), Aa(2), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit;
                    No("removable", !0), ni(2), Oa("", e.name, " (", e.type, ")")
                }
            }

            function W_(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "tr"), jo(1, "th", 52), Aa(2), Bo(), jo(3, "td"), Aa(4), Bo(), jo(5, "td"), jo(6, "button", 53), qo("click", function() {
                        Rt(e);
                        const n = t.$implicit;
                        return Ko().copyMessage("https://./index.html" + n.file)
                    }), Aa(7, "Copy"), Bo(), jo(8, "button", 53), qo("click", function() {
                        return Rt(e), Ko().window.alert("coming soon")
                    }), Aa(9, "Delete"), Bo(), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit,
                        n = t.index;
                    ni(2), Da(n + 1), ni(2), Da(e.friendly_name)
                }
            }
            const K_ = function() {
                    return ["spellchecker print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons"]
                },
                Z_ = function() {
                    return {
                        text: "HTML/XML",
                        value: "markup"
                    }
                },
                Q_ = function() {
                    return {
                        text: "JavaScript",
                        value: "javascript"
                    }
                },
                Y_ = function() {
                    return {
                        text: "CSS",
                        value: "css"
                    }
                },
                J_ = function() {
                    return {
                        text: "PHP",
                        value: "php"
                    }
                },
                X_ = function() {
                    return {
                        text: "Ruby",
                        value: "ruby"
                    }
                },
                ew = function() {
                    return {
                        text: "Python",
                        value: "python"
                    }
                },
                tw = function() {
                    return {
                        text: "Java",
                        value: "java"
                    }
                },
                nw = function() {
                    return {
                        text: "C",
                        value: "c"
                    }
                },
                rw = function() {
                    return {
                        text: "C#",
                        value: "csharp"
                    }
                },
                sw = function() {
                    return {
                        text: "C++",
                        value: "cpp"
                    }
                },
                iw = function() {
                    return {
                        text: "Bash",
                        value: "bash"
                    }
                },
                ow = function(e, t, n, r, s, i, o, a, l, u, c) {
                    return [e, t, n, r, s, i, o, a, l, u, c]
                },
                aw = function(e, t) {
                    return {
                        height: 500,
                        init_instance_callback: void 0,
                        plugins: e,
                        default_link_target: "_blank",
                        codesample_languages: t,
                        toolbar: "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl"
                    }
                };
            let lw = (() => {
                class e {
                    constructor(e, t) {
                        this.dashboardService = e, this.router = t, this.getAlertHead = {
                            success: "Success",
                            danger: "Error"
                        }, this.files_upload = [], this.files_resource = [], this.allFiles = {
                            resource: [],
                            content: []
                        }, this.alerts = [];
                        let n = this.router.url.split("/");
                        this.slug = n[n.length - 1];
                        let r = localStorage.getItem("token");
                        if (null !== r) {
                            let e = JSON.parse(r);
                            this.accessToken = e.token, this.username = e.username
                        } else window.location.replace(" ");
                        this.dashboardService.getVideo(this.slug, this.accessToken).subscribe(e => {
                            e.success ? (this.content = e.content, this.title = e.title, this.series = e.series, this.announcements = e.announcements, this.duration = e.duration, this.metaTags = e.metaTags, this.metaDescription = e.metaDesc, this.isPublished = e.is_published, this.isProofread = e.is_proofread, this.content = e.content, this.videoId = e.videoId) : (console.log("Redirecting..."), window.location.replace(" "))
                        })
                    }
                    ngOnInit() {
                        this.getAllFiles()
                    }
                    setAlert(e, t) {
                        this.alerts = [], this.alerts.push([e, t])
                    }
                    submit() {
                        let e = new FormData;
                        e.append("title", this.title), e.append("announcements", this.announcements), e.append("duration", this.duration), e.append("slug", this.slug), e.append("metaTags", this.metaTags), e.append("metaDesc", this.metaDescription), e.append("series", this.series), e.append("is_published", this.isPublished), e.append("is_proofread", this.isProofread), e.append("content", this.content), e.append("videoId", this.videoId), this.dashboardService.updateVideo(this.slug, e, this.accessToken).subscribe(e => {
                            e.success || this.setAlert("danger", "Some Error occurred"), this.setAlert("success", "Saved successfully")
                        })
                    }
                    onSelectUpload(e) {
                        this.files_upload.push(...e.addedFiles)
                    }
                    onRemoveUpload(e) {
                        this.files_upload.splice(this.files_upload.indexOf(e), 1)
                    }
                    uploadImgFiles() {
                        console.log("Uploading image files..."), this.files_upload.forEach(e => {
                            let t = new FormData;
                            t.append("file", e), t.append("type", "content"), this.dashboardService.addFile(t, this.slug, this.accessToken).subscribe(e => {
                                this.getAllFiles()
                            })
                        }), this.files_upload = []
                    }
                    onSelectResource(e) {
                        this.files_resource.push(...e.addedFiles)
                    }
                    onRemoveResource(e) {
                        this.files_resource.splice(this.files_resource.indexOf(e), 1)
                    }
                    uploadResourceFiles() {
                        console.log("Uploading resource files..."), this.files_resource.forEach(e => {
                            let t = new FormData;
                            t.append("file", e), t.append("type", "resource"), this.dashboardService.addFile(t, this.slug, this.accessToken).subscribe(e => {
                                this.getAllFiles()
                            })
                        }), this.files_resource = []
                    }
                    getAllFiles() {
                        console.log("Getting all files"), this.dashboardService.getAllFiles(this.slug, this.accessToken).subscribe(e => {
                            this.allFiles = e.response
                        }), this.files_resource = []
                    }
                    copyMessage(e) {
                        const t = document.createElement("textarea");
                        t.style.position = "fixed", t.style.left = "0", t.style.top = "0", t.style.opacity = "0", t.value = e, document.body.appendChild(t), t.focus(), t.select(), document.execCommand("copy"), document.body.removeChild(t)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Cv), Ro(im))
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["app-dashboard-video-page"]
                    ],
                    decls: 113,
                    vars: 44,
                    consts: [
                        ["role", "alert", 3, "class", 4, "ngFor", "ngForOf"],
                        [1, "main-container"],
                        [1, "container", "my-4"],
                        [1, "buttons"],
                        ["routerLink", "/dashboard/videos"],
                        [1, "btn", "btn-danger", "mr-2"],
                        ["routerLink", "/dashboard"],
                        [1, "btn", "btn-danger", "mx-2"],
                        [1, "my-3"],
                        ["method", "post", 3, "ngSubmit"],
                        [1, "form-group"],
                        ["for", "title"],
                        ["type", "text", "name", "title", "aria-describedby", "title", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["for", "announcements"],
                        ["type", "text", "name", "announcements", "aria-describedby", "announcements", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["type", "text", "name", "duration", "aria-describedby", "duration", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["type", "text", "name", "slug", "aria-describedby", "slug", 1, "form-control", 3, "ngModel", "disabled", "ngModelChange"],
                        ["type", "text", "name", "videoId", "aria-describedby", "videoId", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["for", "metaTags"],
                        ["type", "text", "name", "metaTags", "aria-describedby", "metaTags", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["type", "text", "name", "metaDescription", "aria-describedby", "metaDescription", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        [1, "form-group", "form-check"],
                        ["type", "checkbox", "name", "isPublished", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                        ["for", "isPublished", 1, "isPublished"],
                        ["type", "checkbox", "name", "isProofread", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                        ["for", "isProofread", 1, "isProofread"],
                        ["name", "content", "apiKey", "g1e96t3jfxgw0fofjmlxso7hfhj65mdbv1h0llkjm0g8wxsp", 3, "ngModel", "init", "ngModelChange"],
                        [1, "d-flex", "justify-content-end", "my-3"],
                        ["type", "submit", 1, "btn", "btn-danger", "submitBtn"],
                        [1, "container"],
                        ["accept", "*", 3, "change"],
                        [3, "removable", "removed", 4, "ngFor", "ngForOf"],
                        [1, "btn", "btn-danger", "my-3", 3, "click"],
                        ["id", "accordionExample", 1, "accordion"],
                        [1, "card"],
                        ["id", "headingOne", 1, "card-header"],
                        [1, "mb-0"],
                        ["type", "button", "data-toggle", "collapse", "data-target", "#collapseOne", "aria-expanded", "true", "aria-controls", "collapseOne", 1, "btn", "btn-link", "btn-block", "text-left"],
                        ["id", "collapseOne", "aria-labelledby", "headingOne", "data-parent", "#accordionExample", 1, "collapse"],
                        [1, "card-body"],
                        [1, "table"],
                        ["scope", "col"],
                        [4, "ngFor", "ngForOf"],
                        ["accept", "image/jpeg,image/jpg,image/png,image/gif", 3, "change"],
                        ["id", "accordionExample2", 1, "accordion2"],
                        ["id", "headingOne2", 1, "card-header"],
                        ["type", "button", "data-toggle", "collapse", "data-target", "#collapseOne2", "aria-expanded", "true", "aria-controls", "collapseOne2", 1, "btn", "btn-link", "btn-block", "text-left"],
                        ["id", "collapseOne2", "aria-labelledby", "headingOne2", "data-parent", "#accordionExample2", 1, "collapse"],
                        ["role", "alert"],
                        ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close"],
                        ["aria-hidden", "true"],
                        [3, "removable", "removed"],
                        ["scope", "row"],
                        [1, "btn-sm", "btn-danger", "mx-2", 3, "click"]
                    ],
                    template: function(e, t) {
                        1 & e && (Io(0, H_, 8, 7, "div", 0), jo(1, "div", 1), jo(2, "div", 2), jo(3, "div", 3), jo(4, "a", 4), jo(5, "button", 5), Aa(6, "\u2190 Go Back"), Bo(), Bo(), jo(7, "a", 6), jo(8, "button", 7), Aa(9, "Dashboard Home"), Bo(), Bo(), Bo(), jo(10, "h2", 8), Aa(11, "Update Video"), Bo(), jo(12, "form", 9), qo("ngSubmit", function() {
                            return t.submit()
                        }), jo(13, "div", 10), jo(14, "label", 11), Aa(15, "Title"), Bo(), jo(16, "input", 12), qo("ngModelChange", function(e) {
                            return t.title = e
                        }), Bo(), Bo(), jo(17, "div", 10), jo(18, "label", 13), Aa(19, "Announcements"), Bo(), jo(20, "input", 14), qo("ngModelChange", function(e) {
                            return t.announcements = e
                        }), Bo(), Bo(), jo(21, "div", 10), jo(22, "label", 13), Aa(23, "Duration"), Bo(), jo(24, "input", 15), qo("ngModelChange", function(e) {
                            return t.duration = e
                        }), Bo(), Bo(), jo(25, "div", 10), jo(26, "label", 13), Aa(27, "Slug"), Bo(), jo(28, "input", 16), qo("ngModelChange", function(e) {
                            return t.slug = e
                        }), Bo(), Bo(), jo(29, "div", 10), jo(30, "label", 13), Aa(31, "Video Id"), Bo(), jo(32, "input", 17), qo("ngModelChange", function(e) {
                            return t.videoId = e
                        }), Bo(), Bo(), jo(33, "div", 10), jo(34, "label", 18), Aa(35, "Meta Tags"), Bo(), jo(36, "input", 19), qo("ngModelChange", function(e) {
                            return t.metaTags = e
                        }), Bo(), Bo(), jo(37, "div", 10), jo(38, "label", 18), Aa(39, "Meta Description"), Bo(), jo(40, "input", 20), qo("ngModelChange", function(e) {
                            return t.metaDescription = e
                        }), Bo(), Bo(), jo(41, "div", 21), jo(42, "input", 22), qo("ngModelChange", function(e) {
                            return t.isPublished = e
                        }), Bo(), jo(43, "label", 23), Aa(44, "Is Published?"), Bo(), Bo(), jo(45, "div", 21), jo(46, "input", 24), qo("ngModelChange", function(e) {
                            return t.isProofread = e
                        }), Bo(), jo(47, "label", 25), Aa(48, "Is Proofread?"), Bo(), Bo(), jo(49, "editor", 26), qo("ngModelChange", function(e) {
                            return t.content = e
                        }), Bo(), jo(50, "div", 27), jo(51, "button", 28), Aa(52, "Submit"), Bo(), Bo(), Bo(), Vo(53, "hr"), Bo(), jo(54, "div", 29), jo(55, "h2", 8), Aa(56, "Upload a file which will appear in the content"), Bo(), jo(57, "ngx-dropzone", 30), qo("change", function(e) {
                            return t.onSelectUpload(e)
                        }), jo(58, "ngx-dropzone-label"), Aa(59, "Click or drop single/multiple files here!"), Bo(), Io(60, z_, 3, 3, "ngx-dropzone-preview", 31), Bo(), jo(61, "div", 27), jo(62, "button", 32), qo("click", function() {
                            return t.uploadImgFiles()
                        }), Aa(63, "Upload Files"), Bo(), Bo(), jo(64, "div", 33), jo(65, "div", 34), jo(66, "div", 35), jo(67, "h2", 36), jo(68, "button", 37), Aa(69, " View Uploaded Files "), Bo(), Bo(), Bo(), jo(70, "div", 38), jo(71, "div", 39), jo(72, "table", 40), jo(73, "thead"), jo(74, "tr"), jo(75, "th", 41), Aa(76, "#"), Bo(), jo(77, "th", 41), Aa(78, "Filename"), Bo(), jo(79, "th", 41), Aa(80, "Actions"), Bo(), Bo(), Bo(), jo(81, "tbody"), Io(82, q_, 10, 2, "tr", 42), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), jo(83, "div", 29), Vo(84, "hr"), jo(85, "h2", 8), Aa(86, 'Upload a file strictly to be appeared in "Resources" section of the website'), Bo(), jo(87, "ngx-dropzone", 43), qo("change", function(e) {
                            return t.onSelectResource(e)
                        }), jo(88, "ngx-dropzone-label"), Aa(89, "Click or drop single/multiple files here! Dont drop blog images here"), Bo(), Io(90, G_, 3, 3, "ngx-dropzone-preview", 31), Bo(), jo(91, "div", 27), jo(92, "button", 32), qo("click", function() {
                            return t.uploadResourceFiles()
                        }), Aa(93, "Upload Files"), Bo(), Bo(), jo(94, "div", 44), jo(95, "div", 34), jo(96, "div", 45), jo(97, "h2", 36), jo(98, "button", 46), Aa(99, " View Resource Files (Avoid adding blog images) "), Bo(), Bo(), Bo(), jo(100, "div", 47), jo(101, "div", 39), jo(102, "table", 40), jo(103, "thead"), jo(104, "tr"), jo(105, "th", 41), Aa(106, "#"), Bo(), jo(107, "th", 41), Aa(108, "Filename"), Bo(), jo(109, "th", 41), Aa(110, "Actions"), Bo(), Bo(), Bo(), jo(111, "tbody"), Io(112, W_, 10, 2, "tr", 42), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), Bo()), 2 & e && (No("ngForOf", t.alerts), ni(16), No("ngModel", t.title), ni(4), No("ngModel", t.announcements), ni(4), No("ngModel", t.duration), ni(4), No("ngModel", t.slug)("disabled", !0), ni(4), No("ngModel", t.videoId), ni(4), No("ngModel", t.metaTags), ni(4), No("ngModel", t.metaDescription), ni(2), No("ngModel", t.isPublished), ni(4), No("ngModel", t.isProofread), ni(3), No("ngModel", t.content)("init", su(41, aw, nu(17, K_), iu(29, ow, [nu(18, Z_), nu(19, Q_), nu(20, Y_), nu(21, J_), nu(22, X_), nu(23, ew), nu(24, tw), nu(25, nw), nu(26, rw), nu(27, sw), nu(28, iw)]))), ni(11), No("ngForOf", t.files_upload), ni(22), No("ngForOf", t.allFiles.content), ni(8), No("ngForOf", t.files_resource), ni(22), No("ngForOf", t.allFiles.resource))
                    },
                    directives: [Mh, om, mb, qy, db, xy, zy, gb, wy, Lv, e_, Zv, Jv],
                    pipes: [Gh],
                    styles: [".submitBtn[_ngcontent-%COMP%]{margin-top:45px}.main-container[_ngcontent-%COMP%]{margin-bottom:133px}"]
                }), e
            })();

            function uw(e, t) {
                if (1 & e && (jo(0, "div", 36), jo(1, "strong"), Aa(2), uu(3, "titlecase"), Bo(), Aa(4), jo(5, "button", 37), jo(6, "span", 38), Aa(7, "\xd7"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    Fa("alert alert-", e[0], " alert-dismissible fade show"), ni(2), Ta(" ", cu(3, 5, n.getAlertHead[e[0]]), ":"), ni(2), Ta(" ", e[1], " ")
                }
            }

            function cw(e, t) {
                if (1 & e && (jo(0, "option", 39), Aa(1), Bo()), 2 & e) {
                    const e = t.$implicit;
                    No("ngValue", e.sno), ni(1), Da(e.seriesTitle)
                }
            }

            function hw(e, t) {
                if (1 & e && (jo(0, "tr"), jo(1, "td"), jo(2, "a", 41), Aa(3), Bo(), Bo(), jo(4, "td"), jo(5, "a", 41), Aa(6), Bo(), Bo(), jo(7, "td"), jo(8, "a", 41), Aa(9), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(2), Xo("routerLink", "/dashboard/videos/", e.slug, ""), ni(1), Da(e.getSeries), ni(2), Xo("routerLink", "/dashboard/videos/", e.slug, ""), ni(1), Da(e.title), ni(2), Xo("routerLink", "/dashboard/videos/", e.slug, ""), ni(1), Da(e.slug)
                }
            }

            function dw(e, t) {
                if (1 & e && (jo(0, "tbody"), Io(1, hw, 10, 6, "tr", 40), Bo()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngForOf", e.persons)
                }
            }

            function pw(e, t) {
                1 & e && (jo(0, "tbody"), jo(1, "tr"), jo(2, "td", 42), Aa(3, "No data!"), Bo(), Bo(), Bo())
            }
            const fw = function() {
                    return ["spellchecker print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons"]
                },
                gw = function(e) {
                    return {
                        height: 500,
                        init_instance_callback: void 0,
                        plugins: e,
                        default_link_target: "_blank",
                        toolbar: "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl"
                    }
                };
            let mw = (() => {
                class e {
                    constructor(e, t) {
                        this.http = e, this.dashboardService = t, this.getAlertHead = {
                            success: "Success",
                            danger: "Error"
                        }, this.dtOptions = {}, this.isPublished = !1, this.isProofread = !1, this.alerts = [];
                        let n = localStorage.getItem("token");
                        if (null !== n) {
                            let e = JSON.parse(n);
                            this.accessToken = e.token, this.username = e.username
                        } else window.location.replace(" ")
                    }
                    ngOnInit() {
                        this.host = iy, this.videoUrl = this.host + "dashboard/getvideos", this.dashboardService.getCourses().subscribe(e => {
                            this.seriesOptions = e
                        });
                        const e = this;
                        this.dtOptions = {
                            pagingType: "full_numbers",
                            pageLength: 10,
                            serverSide: !0,
                            processing: !0,
                            ajax: (t, n) => {
                                e.http.post(this.videoUrl, t, {
                                    headers: {
                                        Authorization: "Token " + e.accessToken
                                    }
                                }).subscribe(t => {
                                    e.persons = t.data, n({
                                        recordsTotal: t.recordsTotal,
                                        recordsFiltered: t.recordsFiltered,
                                        data: []
                                    })
                                })
                            },
                            columns: [{
                                data: "slug"
                            }, {
                                data: "title"
                            }, {
                                data: "getSeries"
                            }]
                        }
                    }
                    submit() {
                        let e = new FormData;
                        e.append("title", this.title), e.append("announcements", this.announcements), e.append("duration", this.duration), e.append("slug", this.slug), e.append("metaTags", this.metaTags), e.append("metaDesc", this.metaDescription), e.append("is_published", new Boolean(this.isPublished).toString()), e.append("is_proofread", new Boolean(this.isProofread).toString()), e.append("content", this.content), e.append("series", this.seriesSelected), e.append("videoId", this.videoId), this.dashboardService.addVideo(this.slug, e, this.accessToken).subscribe(e => {
                            e.success ? this.setAlert("success", "Added a new video successfully") : this.setAlert("danger", "Some Error occurred")
                        })
                    }
                    setAlert(e, t) {
                        this.alerts = [], this.alerts.push([e, t])
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Hm), Ro(Cv))
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["app-dashboard-videos"]
                    ],
                    decls: 75,
                    vars: 20,
                    consts: [
                        ["role", "alert", 3, "class", 4, "ngFor", "ngForOf"],
                        [1, "container", "my-3"],
                        [1, "mt-3", "py-3"],
                        ["type", "button", "data-toggle", "collapse", "data-target", "#collapseExample", "aria-expanded", "false", "aria-controls", "collapseExample", 1, "btn", "btn-primary", "mb-3"],
                        ["routerLink", "/dashboard"],
                        [1, "btn", "btn-danger", "mx-2", "mb-3"],
                        ["id", "collapseExample", 1, "collapse"],
                        [1, "card", "card-body"],
                        [1, "my-3", "py-3"],
                        ["method", "post", 3, "ngSubmit"],
                        [1, "form-group"],
                        ["for", "title"],
                        ["type", "text", "name", "title", "aria-describedby", "title", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["for", "announcements"],
                        ["type", "text", "name", "announcements", "aria-describedby", "announcements", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["for", "videoSeries"],
                        ["name", "videoSeries", 1, "custom-select", 3, "ngModel", "ngModelChange"],
                        ["selected", "selected", "disabled", ""],
                        [3, "ngValue", 4, "ngFor", "ngForOf"],
                        ["type", "text", "name", "duration", "aria-describedby", "duration", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["type", "text", "name", "slug", "aria-describedby", "slug", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["type", "text", "name", "videoId", "aria-describedby", "videoId", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["for", "metaTags"],
                        ["type", "text", "name", "metaTags", "aria-describedby", "metaTags", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        ["type", "text", "name", "metaDescription", "aria-describedby", "metaDescription", 1, "form-control", 3, "ngModel", "ngModelChange"],
                        [1, "form-group", "form-check"],
                        ["type", "checkbox", "name", "isPublished", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                        ["for", "isPublished", 1, "isPublished"],
                        ["type", "checkbox", "name", "isProofread", 1, "form-check-input", 3, "ngModel", "ngModelChange"],
                        ["for", "isProofread", 1, "isProofread"],
                        ["name", "content", "apiKey", "g1e96t3jfxgw0fofjmlxso7hfhj65mdbv1h0llkjm0g8wxsp", 3, "ngModel", "init", "ngModelChange"],
                        [1, "d-flex", "justify-content-end", "my-3"],
                        ["type", "submit", 1, "btn", "btn-primary", "submitBtn", "mx-2"],
                        [1, "existing"],
                        ["datatable", "", 1, "row-border", "hover", "table", 3, "dtOptions"],
                        [4, "ngIf"],
                        ["role", "alert"],
                        ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close"],
                        ["aria-hidden", "true"],
                        [3, "ngValue"],
                        [4, "ngFor", "ngForOf"],
                        [3, "routerLink"],
                        ["colspan", "3", 1, "no-data-available"]
                    ],
                    template: function(e, t) {
                        1 & e && (Io(0, uw, 8, 7, "div", 0), jo(1, "div", 1), jo(2, "h2", 2), Aa(3, "Edit Video Content"), Bo(), jo(4, "button", 3), Aa(5, " + Add a new video "), Bo(), jo(6, "a", 4), jo(7, "button", 5), Aa(8, "Dashboard Home"), Bo(), Bo(), jo(9, "div", 6), jo(10, "div", 7), jo(11, "h3", 8), Aa(12, "Add a new Video"), Bo(), jo(13, "form", 9), qo("ngSubmit", function() {
                            return t.submit()
                        }), jo(14, "div", 10), jo(15, "label", 11), Aa(16, "Title"), Bo(), jo(17, "input", 12), qo("ngModelChange", function(e) {
                            return t.title = e
                        }), Bo(), Bo(), jo(18, "div", 10), jo(19, "label", 13), Aa(20, "Announcements"), Bo(), jo(21, "input", 14), qo("ngModelChange", function(e) {
                            return t.announcements = e
                        }), Bo(), Bo(), jo(22, "div", 10), jo(23, "label", 15), Aa(24, "Video Series"), Bo(), jo(25, "select", 16), qo("ngModelChange", function(e) {
                            return t.seriesSelected = e
                        }), jo(26, "option", 17), Aa(27, "Plan..."), Bo(), Io(28, cw, 2, 2, "option", 18), Bo(), Bo(), jo(29, "div", 10), jo(30, "label", 13), Aa(31, "Duration"), Bo(), jo(32, "input", 19), qo("ngModelChange", function(e) {
                            return t.duration = e
                        }), Bo(), Bo(), jo(33, "div", 10), jo(34, "label", 13), Aa(35, "Slug"), Bo(), jo(36, "input", 20), qo("ngModelChange", function(e) {
                            return t.slug = e
                        }), Bo(), Bo(), jo(37, "div", 10), jo(38, "label", 13), Aa(39, "Video Id"), Bo(), jo(40, "input", 21), qo("ngModelChange", function(e) {
                            return t.videoId = e
                        }), Bo(), Bo(), jo(41, "div", 10), jo(42, "label", 22), Aa(43, "Meta Tags"), Bo(), jo(44, "input", 23), qo("ngModelChange", function(e) {
                            return t.metaTags = e
                        }), Bo(), Bo(), jo(45, "div", 10), jo(46, "label", 22), Aa(47, "Meta Description"), Bo(), jo(48, "input", 24), qo("ngModelChange", function(e) {
                            return t.metaDescription = e
                        }), Bo(), Bo(), jo(49, "div", 25), jo(50, "input", 26), qo("ngModelChange", function(e) {
                            return t.isPublished = e
                        }), Bo(), jo(51, "label", 27), Aa(52, "Is Published?"), Bo(), Bo(), jo(53, "div", 25), jo(54, "input", 28), qo("ngModelChange", function(e) {
                            return t.isProofread = e
                        }), Bo(), jo(55, "label", 29), Aa(56, "Is Proofread?"), Bo(), Bo(), jo(57, "editor", 30), qo("ngModelChange", function(e) {
                            return t.content = e
                        }), Bo(), jo(58, "div", 31), jo(59, "button", 32), Aa(60, "Add Video"), Bo(), Bo(), Bo(), Bo(), Bo(), jo(61, "div", 33), jo(62, "h3", 8), Aa(63, "Alter Existing Videos"), Bo(), jo(64, "table", 34), jo(65, "thead"), jo(66, "tr"), jo(67, "th"), Aa(68, "Series"), Bo(), jo(69, "th"), Aa(70, "Title"), Bo(), jo(71, "th"), Aa(72, "Slug"), Bo(), Bo(), Bo(), Io(73, dw, 2, 1, "tbody", 35), Io(74, pw, 4, 0, "tbody", 35), Bo(), Bo(), Bo()), 2 & e && (No("ngForOf", t.alerts), ni(17), No("ngModel", t.title), ni(4), No("ngModel", t.announcements), ni(4), No("ngModel", t.seriesSelected), ni(3), No("ngForOf", t.seriesOptions), ni(4), No("ngModel", t.duration), ni(4), No("ngModel", t.slug), ni(4), No("ngModel", t.videoId), ni(4), No("ngModel", t.metaTags), ni(4), No("ngModel", t.metaDescription), ni(2), No("ngModel", t.isPublished), ni(4), No("ngModel", t.isProofread), ni(3), No("ngModel", t.content)("init", ru(18, gw, nu(17, fw))), ni(7), No("dtOptions", t.dtOptions), ni(9), No("ngIf", 0 != (null == t.persons ? null : t.persons.length)), ni(1), No("ngIf", 0 == (null == t.persons ? null : t.persons.length)))
                    },
                    directives: [Mh, om, mb, qy, db, xy, zy, gb, Cb, Sb, Ab, wy, Lv, w_, Nh],
                    pipes: [Gh],
                    styles: ["table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{cursor:pointer;text-decoration:none;color:#000;font-weight:500}table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-size:18px}.existing[_ngcontent-%COMP%]{margin-bottom:133px}"]
                }), e
            })();
            var yw = n("ELNm"),
                bw = n.n(yw);
            let vw = (() => {
                class e {
                    constructor(e, t, n) {
                        this.titleService = e, this.metaService = t, this.platformId = n, this.titleService.setTitle("Home -  "), this.metaService.addTags([{
                            name: "description",
                            content: "Code With Harry is my attempt to teach basics and those coding techniques to people in short time which took me ages to learn. At Code With Harry, I provide a quick and to the point demo along with resources of anything and everything I teach. Source code and other resources are hosted on my website  .com. I provide source code(if any) in the description of every video."
                        }])
                    }
                    ngOnInit() {
                        Zh(this.platformId) && new bw.a("#typed", {
                            strings: ["Welcome to  ", "Learn Python", "Web development", "Data Science", "Machine Learning", "and other awesome programming concepts with me :)"],
                            backSpeed: 15,
                            smartBackspace: !0,
                            backDelay: 1200,
                            startDelay: 1e3,
                            typeSpeed: 25,
                            loop: !0
                        })
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Id), Ro(Od), Ro(Vu))
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["app-homepage"]
                    ],
                    decls: 45,
                    vars: 0,
                    consts: [
                        [1, "jumbotron", "text-center"],
                        [1, "container"],
                        ["src", "../../../assets/img/logo.png", "alt", "logo", "width", "120"],
                        [1, "jumbotron-heading"],
                        ["id", "typed"],
                        [1, "lead", "text-muted"],
                        ["routerLink", "/blog", 1, "btn", "btn-danger", "my-2"],
                        ["routerLink", "/videos", 1, "btn", "btn-success", "my-2"],
                        ["routerLink", "/contact", 1, "btn", "btn-primary", "my-2"],
                        [1, "row"],
                        [1, "card", "mx-auto", "my-2", "p-2", "align-items-center", 2, "width", "18rem"],
                        ["src", "../../../assets/img/home-img-1.jpg", "alt", "...", 1, "padded", "card-img-top"],
                        [1, "card-body"],
                        [1, "card-title", "text-center"],
                        [1, "card-text", "text-center"],
                        ["routerLink", "/videos", 1, "btn", "btn-primary", "d-block"],
                        ["src", "../../../assets/img/home-img-2.jpg", "alt", "...", 1, "padded", "card-img-top"],
                        ["routerLink", "/blog", 1, "btn", "btn-primary", "d-block"],
                        ["src", "../../../assets/img/home-img-3.jpg", "alt", "...", 1, "padded", "card-img-top"],
                        ["routerLink", "/contact", 1, "btn", "btn-primary", "d-block"]
                    ],
                    template: function(e, t) {
                        1 & e && (jo(0, "section", 0), jo(1, "div", 1), Vo(2, "img", 2), jo(3, "h1", 3), Vo(4, "span", 4), Bo(), jo(5, "p", 5), Aa(6, "Confused on which course to take? I have got you covered. Browse courses and find out the best course for you. Its free!"), Vo(7, "br"), Aa(8, "Code With Harry is my attempt to teach basics and those coding techniques to people in short time which took me ages to learn."), Bo(), jo(9, "p"), jo(10, "a", 6), Aa(11, "Browse Blog"), Bo(), jo(12, "a", 7), Aa(13, "Browse Video Tutorials"), Bo(), jo(14, "a", 8), Aa(15, "Contact Me"), Bo(), Bo(), Bo(), Bo(), jo(16, "div", 1), jo(17, "div", 9), jo(18, "div", 10), Vo(19, "img", 11), jo(20, "div", 12), jo(21, "h5", 13), Aa(22, "Free Video Courses"), Bo(), jo(23, "p", 14), Aa(24, "Get your programming career started with these free video courses. Source code is available with all the videos for amazing learning experience"), Bo(), jo(25, "a", 15), Aa(26, "Browse Video Courses"), Bo(), Bo(), Bo(), jo(27, "div", 10), Vo(28, "img", 16), jo(29, "div", 12), jo(30, "h5", 13), Aa(31, "Coding Articles"), Bo(), jo(32, "p", 14), Aa(33, "Some of the latest coding information compiled in the form of coding articles. Keep your programming knowledge up to date with these articles."), Bo(), jo(34, "a", 17), Aa(35, "Go to Blog"), Bo(), Bo(), Bo(), jo(36, "div", 10), Vo(37, "img", 18), jo(38, "div", 12), jo(39, "h5", 13), Aa(40, "Contact Me"), Bo(), jo(41, "p", 14), Aa(42, "Learn programming from these free courses. Examples are available with these tutorials. You can contact me for any doubt and I will get back to you!"), Bo(), jo(43, "a", 19), Aa(44, "Contact Me"), Bo(), Bo(), Bo(), Bo(), Bo())
                    },
                    directives: [om],
                    styles: [".btn[_ngcontent-%COMP%]{margin:0 3px}"]
                }), e
            })();

            function _w(e, t) {
                if (1 & e && (jo(0, "div", 25), jo(1, "strong"), Aa(2), uu(3, "titlecase"), Bo(), Aa(4), jo(5, "button", 26), jo(6, "span", 27), Aa(7, "\xd7"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    Fa("alert alert-", e[0], " alert-dismissible fade show my-0"), ni(2), Ta(" ", cu(3, 5, n.getAlertHead[e[0]]), ":"), ni(2), Ta(" ", e[1], " ")
                }
            }
            let ww = (() => {
                    class e {
                        constructor(e, t, n) {
                            this.router = e, this.route = t, this.loginService = n, this.getAlertHead = {
                                success: "Success",
                                danger: "Error"
                            }, this.alerts = [];
                            let r = localStorage.getItem("token");
                            if (null === r) this.router.navigate(["/"], {
                                relativeTo: this.route
                            });
                            else {
                                let e = JSON.parse(r);
                                this.accessToken = e.token, this.username = e.username
                            }
                        }
                        ngOnInit() {
                            this.loginService.getProfile(this.accessToken).subscribe(e => {
                                this.name = e.name, this.address = e.address, this.phone = e.phone
                            })
                        }
                        ngAfterViewChecked() {
                            setTimeout(() => {
                                let e = localStorage.getItem("token");
                                if (null !== e) {
                                    let t = JSON.parse(e);
                                    this.accessToken = t.token, this.username = t.username
                                } else this.router.navigate([""], {
                                    relativeTo: this.route,
                                    queryParams: {}
                                })
                            }, 0)
                        }
                        setAlert(e, t) {
                            this.alerts = [], this.alerts.push([e, t])
                        }
                        onUpdateProfile(e) {
                            this.loginService.updateProfile(e.form.value.userName, e.form.value.userPhone, e.form.value.userAddress, this.accessToken).subscribe(e => {
                                e.success ? (this.alerts = [], this.setAlert("success", "Profile Updated Successfully")) : this.setAlert("success", e.response)
                            })
                        }
                        onPasswordChange(e) {
                            this.loginService.changePassword(e.form.value.oldpassword, e.form.value.newpassword, this.accessToken).subscribe(e => {
                                e.success ? (this.alerts = [], this.setAlert("success", "Password Updated Successfully")) : this.setAlert("danger", e.response)
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(im), Ro(Bf), Ro(oy))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-myaccount"]
                        ],
                        decls: 44,
                        vars: 6,
                        consts: [
                            ["role", "alert", 3, "class", 4, "ngFor", "ngForOf"],
                            [1, "container"],
                            [1, "col-lg-12", "my-4", "mx-2"],
                            ["method", "post", "method", "post", 3, "ngSubmit"],
                            ["updateForm", "ngForm"],
                            ["type", "hidden", "name", "formType", "value", "changeProfile"],
                            [1, "form-row"],
                            [1, "form-group", "col-md-6"],
                            ["for", "userName"],
                            ["type", "name", "name", "userName", "id", "userName", "placeholder", "Your Name", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            [1, "form-group"],
                            ["for", "userPhone"],
                            ["type", "phone", "name", "userPhone", "id", "UserPhone", "placeholder", "Your Phone", "pattern", "[0-9+ ]*", "minlength", "4", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["for", "userAddress"],
                            ["type", "text", "name", "userAddress", "id", "userAddress", "placeholder", "Address", "ngModel", "", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["type", "submit", 1, "btn", "btn-danger", 3, "disabled"],
                            ["method", "post", 1, "mb-3", 3, "ngSubmit"],
                            ["passwordForm", "ngForm"],
                            [1, "form-group", "col-md-12"],
                            ["for", "oldpassword"],
                            ["type", "password", "id", "oldpassword", "name", "oldpassword", "placeholder", "Your Password", "ngModel", "", "required", "", 1, "form-control"],
                            ["for", "newpassword"],
                            ["type", "password", "id", "newpassword", "name", "newpassword", "placeholder", "New Password", "ngModel", "", "required", "", 1, "form-control"],
                            ["for", "newpassword2"],
                            ["type", "password", "id", "newpassword2", "name", "newpassword2", "placeholder", "Confirm New Password", "ngModel", "", "required", "", 1, "form-control"],
                            ["role", "alert"],
                            ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close"],
                            ["aria-hidden", "true"]
                        ],
                        template: function(e, t) {
                            if (1 & e) {
                                const e = Uo();
                                Io(0, _w, 8, 7, "div", 0), jo(1, "div", 1), jo(2, "div", 2), jo(3, "h2"), Aa(4, "Update Profile"), Bo(), jo(5, "form", 3, 4), qo("ngSubmit", function() {
                                    Rt(e);
                                    const n = Mo(6);
                                    return t.onUpdateProfile(n)
                                }), Vo(7, "input", 5), jo(8, "div", 6), jo(9, "div", 7), jo(10, "label", 8), Aa(11, "Name"), Bo(), jo(12, "input", 9), qo("ngModelChange", function(e) {
                                    return t.name = e
                                }), Bo(), Bo(), Bo(), jo(13, "div", 10), jo(14, "label", 11), Aa(15, "Your Phone"), Bo(), jo(16, "input", 12), qo("ngModelChange", function(e) {
                                    return t.phone = e
                                }), Bo(), Bo(), jo(17, "div", 10), jo(18, "label", 13), Aa(19, "Mailing Address"), Bo(), jo(20, "input", 14), qo("ngModelChange", function(e) {
                                    return t.address = e
                                }), Bo(), Bo(), jo(21, "button", 15), Aa(22, "Update"), Bo(), Bo(), Bo(), jo(23, "div", 2), jo(24, "h2"), Aa(25, "Change your password"), Bo(), jo(26, "form", 16, 17), qo("ngSubmit", function() {
                                    Rt(e);
                                    const n = Mo(27);
                                    return t.onPasswordChange(n)
                                }), jo(28, "div", 6), jo(29, "div", 18), jo(30, "label", 19), Aa(31, "Your Password"), Bo(), Vo(32, "input", 20), Bo(), Bo(), jo(33, "div", 6), jo(34, "div", 7), jo(35, "label", 21), Aa(36, "New Password"), Bo(), Vo(37, "input", 22), Bo(), jo(38, "div", 7), jo(39, "label", 23), Aa(40, "Confirm New Password"), Bo(), Vo(41, "input", 24), Bo(), Bo(), jo(42, "button", 15), Aa(43, "Update"), Bo(), Bo(), Bo(), Bo()
                            }
                            if (2 & e) {
                                const e = Mo(6),
                                    n = Mo(27);
                                No("ngForOf", t.alerts), ni(12), No("ngModel", t.name), ni(4), No("ngModel", t.phone), ni(4), No("ngModel", t.address), ni(1), No("disabled", !e.valid), ni(21), No("disabled", !n.valid)
                            }
                        },
                        directives: [Mh, mb, qy, db, xy, Tb, zy, gb, Lb, Ib],
                        pipes: [Gh],
                        styles: [""]
                    }), e
                })(),
                Cw = (() => {
                    class e {
                        constructor() {}
                        ngOnInit() {}
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-page-not-found"]
                        ],
                        decls: 18,
                        vars: 0,
                        consts: [
                            [1, "container", "my-4"],
                            [1, "row"],
                            [1, "col-md-12"],
                            [1, "error-template"],
                            [1, "error-details", "text-center"],
                            [1, "error-actions", "text-center"],
                            ["routerLink", "/", 1, "btn", "btn-primary", "btn-sm", "my-2", "mx-1"],
                            ["routerLink", "/videos", 1, "btn", "btn-success", "btn-sm", "my-2", "mx-1"],
                            ["routerLink", "/blog", 1, "btn", "btn-danger", "btn-sm", "my-2", "mx-1"]
                        ],
                        template: function(e, t) {
                            1 & e && (jo(0, "div", 0), jo(1, "div", 1), jo(2, "div", 2), jo(3, "div", 3), jo(4, "h1"), Aa(5, " Oops!"), Bo(), jo(6, "h2"), Aa(7, " 404 Not Found"), Bo(), jo(8, "div", 4), Aa(9, " Sorry, The requested page not found! "), Bo(), jo(10, "div", 5), jo(11, "p"), jo(12, "a", 6), Aa(13, "Go to Home"), Bo(), jo(14, "a", 7), Aa(15, "Browse Video Tutorials"), Bo(), jo(16, "a", 8), Aa(17, "Browse Blog"), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), Bo())
                        },
                        directives: [om],
                        styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{text-align:center}"]
                    }), e
                })(),
                Sw = (() => {
                    class e {
                        constructor(e) {
                            this.http = e, this.getSearchResultsUrl = iy + "getsearchresults/"
                        }
                        getSearchResults(e, t) {
                            return this.http.get(`${this.getSearchResultsUrl}?query=${e}&number=${t}`)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Hm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac,
                        providedIn: "root"
                    }), e
                })();

            function xw(e, t) {
                1 & e && (jo(0, "div"), jo(1, "div", 7), jo(2, "div", 8), jo(3, "span", 9), Aa(4, "Loading..."), Bo(), Bo(), Bo(), Bo())
            }

            function Ew(e, t) {
                if (1 & e && (jo(0, "div"), jo(1, "h2"), jo(2, "a", 14), Aa(3), Bo(), Bo(), jo(4, "p"), Aa(5), Bo(), jo(6, "a", 15), Aa(7, "Read More "), Vo(8, "span", 16), Bo(), Vo(9, "hr"), Bo()), 2 & e) {
                    const e = Ko().$implicit;
                    ni(2), Xo("routerLink", "/blogpost/", e.slug, ""), ni(1), Da(e.title), ni(2), Da(e.metaDesc), ni(1), Xo("routerLink", "/blogpost/", e.slug, "")
                }
            }

            function kw(e, t) {
                if (1 & e && (jo(0, "h2"), jo(1, "a", 14), Aa(2), Bo(), Bo(), jo(3, "p"), Aa(4), Bo(), jo(5, "a", 15), Aa(6, "Read More "), Vo(7, "span", 16), Bo(), Vo(8, "hr")), 2 & e) {
                    const e = Ko().$implicit;
                    ni(1), Xo("routerLink", "/videos/", e.slug, ""), ni(1), Da(e.title), ni(2), Da(e.metaDesc), ni(1), Xo("routerLink", "/videos/", e.slug, "")
                }
            }

            function Aw(e, t) {
                if (1 & e && (jo(0, "div", 11), Io(1, Ew, 10, 4, "div", 12), Io(2, kw, 9, 4, "ng-template", null, 13, Iu), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Mo(3);
                    ni(1), No("ngIf", "blog" == e.type)("ngIfElse", n)
                }
            }

            function Dw(e, t) {
                if (1 & e && (jo(0, "div"), Io(1, Aw, 4, 2, "div", 10), Bo()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngForOf", e.results)
                }
            }

            function Tw(e, t) {
                if (1 & e && (jo(0, "div"), jo(1, "h2"), Aa(2), Vo(3, "br"), Aa(4, "Try again with another specific search term"), Bo(), Vo(5, "hr"), Bo()), 2 & e) {
                    const e = Ko();
                    ni(2), Ta("Sorry we have 0 search results for '", e.query, "'.")
                }
            }
            let Ow = (() => {
                    class e {
                        constructor(e, t, n, r, s) {
                            this.router = e, this.route = t, this.searchService = n, this.titleService = r, this.metaService = s, this.number = 1, this.prevDisabled = !0, this.nextDisabled = !1, this.loadingResults = !0
                        }
                        ngOnInit() {
                            this.route.queryParams.subscribe(e => {
                                this.loadingResults = !0, void 0 !== e.number ? (this.number = Number(e.number), this.prevDisabled = 1 == this.number) : (this.number = 1, this.prevDisabled = !0), void 0 !== e.query ? this.query = e.query : this.router.navigate([""], {
                                    relativeTo: this.route,
                                    queryParams: {}
                                }), this.searchService.getSearchResults(this.query, this.number).subscribe(e => {
                                    this.results = e, console.log(this.number, "these are initial results", this.results), this.loadingResults = !1
                                })
                            }), this.titleService.setTitle(this.query + " -  "), this.metaService.addTags([{
                                name: "keywords",
                                content: "blog, coding blog, programming blog,   blog"
                            }, {
                                name: "description",
                                content: "Read through the variety of programming articles from  ..."
                            }])
                        }
                        prevClick() {
                            this.loadingResults = !0, this.number = this.number - 1, 1 == this.number && (this.prevDisabled = !0), this.router.navigate(["/search"], {
                                relativeTo: this.route,
                                queryParams: {
                                    query: this.query,
                                    number: this.number
                                }
                            }), this.searchService.getSearchResults(this.query, this.number).subscribe(e => {
                                this.results = e, this.loadingResults = !1
                            })
                        }
                        nextClick() {
                            this.loadingResults = !0, this.number = this.number + 1, this.prevDisabled = 1 == this.number, this.searchService.getSearchResults(this.query, this.number).subscribe(e => {
                                0 == e.length ? (this.number = 1, this.prevDisabled = !0, this.searchService.getSearchResults(this.query, this.number).subscribe(e => {
                                    this.results = e, this.loadingResults = !1
                                })) : this.loadingResults = !1, this.results = e, this.router.navigate(["/search"], {
                                    relativeTo: this.route,
                                    queryParams: {
                                        query: this.query,
                                        number: this.number
                                    }
                                })
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(im), Ro(Bf), Ro(Sw), Ro(Id), Ro(Od))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-search"]
                        ],
                        decls: 15,
                        vars: 6,
                        consts: [
                            [1, "main-container", "container", "my-4"],
                            [1, "row"],
                            [1, "col-lg-12"],
                            [1, "page-header"],
                            [4, "ngIf"],
                            [1, "btn", "btn-danger", "float-left", 3, "disabled", "click"],
                            [1, "btn", "btn-danger", "float-right", 3, "disabled", "click"],
                            [1, "text-center"],
                            ["role", "status", 1, "spinner-border", "text-danger"],
                            [1, "sr-only"],
                            ["class", "blogs", 4, "ngFor", "ngForOf"],
                            [1, "blogs"],
                            [4, "ngIf", "ngIfElse"],
                            ["elseBlock", ""],
                            [1, "text-dark", 3, "routerLink"],
                            [1, "btn", "btn-sm", "btn-outline-danger", 3, "routerLink"],
                            [1, "glyphicon", "glyphicon-chevron-right"]
                        ],
                        template: function(e, t) {
                            1 & e && (jo(0, "div", 0), jo(1, "div", 1), jo(2, "div", 2), jo(3, "h1", 3), Aa(4, " Search Results "), jo(5, "small"), Aa(6), Bo(), Bo(), Vo(7, "hr"), Io(8, xw, 5, 0, "div", 4), Io(9, Dw, 2, 1, "div", 4), Io(10, Tw, 6, 1, "div", 4), jo(11, "button", 5), qo("click", function() {
                                return t.prevClick()
                            }), Aa(12, "\u2190 Previous"), Bo(), jo(13, "button", 6), qo("click", function() {
                                return t.nextClick()
                            }), Aa(14, "Next\u2192"), Bo(), Bo(), Bo(), Bo()), 2 & e && (ni(6), Ta("For ", t.query, ""), ni(2), No("ngIf", t.loadingResults), ni(1), No("ngIf", t.results && 0 != t.results.length), ni(1), No("ngIf", !t.loadingResults && t.results && 0 == t.results.length), ni(1), No("disabled", t.prevDisabled || t.results && 0 == t.results.length), ni(2), No("disabled", t.nextDisabled || t.results && 0 == t.results.length))
                        },
                        directives: [Nh, Mh, om],
                        styles: [""]
                    }), e
                })(),
                Fw = (() => {
                    class e {
                        constructor(e) {
                            this.http = e, this.getCoursesUrl = iy + "video/getcourses", this.getVideoUrl = iy + "video/getvideo/", this.getCourseContentUrl = iy + "video/getcoursecontent/", this.getResourceFilesUrl = iy + "video/getresourcefiles/"
                        }
                        getCourses() {
                            return this.http.get(this.getCoursesUrl)
                        }
                        getVideo(e) {
                            return this.http.get(`${this.getVideoUrl}${e}`)
                        }
                        getCourseContents(e) {
                            return this.http.get(`${this.getCourseContentUrl}${e}`)
                        }
                        getResourceFiles(e) {
                            return this.http.get(`${this.getResourceFilesUrl}${e}`)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Hm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac,
                        providedIn: "root"
                    }), e
                })();

            function Pw(e, t) {
                if (1 & e && (jo(0, "div", 3), Vo(1, "img", 4), jo(2, "h2"), Aa(3), Bo(), jo(4, "p"), Aa(5), Bo(), jo(6, "p"), jo(7, "a", 5), jo(8, "button", 6), Aa(9, "Start Watching \xbb"), Bo(), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(1), Xo("src", "https://./index.html", e.image, "", ss), ni(2), Da(e.seriesTitle), ni(2), Da(e.seriesDesc), ni(2), Xo("routerLink", "/videos/", e.firstSlug, "")
                }
            }
            let Iw = (() => {
                class e {
                    constructor(e, t, n) {
                        this.videoService = e, this.titleService = t, this.metaService = n, this.courses = [], this.titleService.setTitle("Videos -  "), this.metaService.addTags([{
                            name: "description",
                            content: "Browse the list of all the free video courses on this platform. All the videos have chapter notes along with the source code"
                        }])
                    }
                    ngOnInit() {
                        this.videoService.getCourses().subscribe(e => {
                            this.courses = e
                        })
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(Ro(Fw), Ro(Id), Ro(Od))
                }, e.\u0275cmp = He({
                    type: e,
                    selectors: [
                        ["app-video-home"]
                    ],
                    decls: 3,
                    vars: 1,
                    consts: [
                        [1, "container-fluid", "main-container"],
                        [1, "row", "my-4", "mx-4"],
                        ["class", "col-md-6 col-lg-4 text-center", 4, "ngFor", "ngForOf"],
                        [1, "col-md-6", "col-lg-4", "text-center"],
                        ["width", "140", "height", "140", 1, "rounded-circle", 3, "src"],
                        [3, "routerLink"],
                        [1, "btn", "btn-outline-danger"]
                    ],
                    template: function(e, t) {
                        1 & e && (jo(0, "div", 0), jo(1, "div", 1), Io(2, Pw, 10, 4, "div", 2), Bo(), Bo()), 2 & e && (ni(2), No("ngForOf", t.courses))
                    },
                    directives: [Mh, om],
                    styles: [""]
                }), e
            })();
            class Mw {
                constructor() {}
            }
            let Rw = (() => {
                    class e {
                        constructor(e) {
                            this.http = e, this.getMoreCommentsUrl = iy + "video/getcomments", this.postCommentUrl = iy + "video/postcomment"
                        }
                        getMoreComments(e, t, n) {
                            return this.http.get(`${this.getMoreCommentsUrl}/${e}/${t}/${n}`, {
                                headers: {
                                    ignoreLoadingBar: ""
                                }
                            })
                        }
                        postComment(e, t, n, r, s) {
                            let i = new FormData;
                            return i.append("comment", t), i.append("videoSlug", n), i.append("replyOf", r.toString()), i.append("captchatoken", s), this.http.post(`${this.postCommentUrl}`, i, {
                                headers: {
                                    ignoreLoadingBar: "",
                                    Authorization: "Token " + e
                                }
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Hm))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac,
                        providedIn: "root"
                    }), e
                })(),
                Nw = (() => {
                    class e {
                        constructor(e) {
                            this.sanitizer = e
                        }
                        transform(e) {
                            return this.sanitizer.bypassSecurityTrustResourceUrl(e)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(xd))
                    }, e.\u0275pipe = Qe({
                        name: "safe",
                        type: e,
                        pure: !0
                    }), e
                })();

            function Lw(e, t) {
                1 & e && (Vo(0, "iframe", 38), uu(1, "safe")), 2 & e && No("src", cu(1, 1, Ko(2).videoUrl), is)
            }
            const jw = function(e) {
                return {
                    invisible: e
                }
            };

            function Bw(e, t) {
                if (1 & e && (jo(0, "div", 36), Io(1, Lw, 2, 3, "iframe", 37), Bo()), 2 & e) {
                    const e = Ko();
                    No("ngClass", ru(2, jw, e.hidePlayer)), ni(1), No("ngIf", void 0 !== e.videoUrl)
                }
            }
            const Vw = function(e) {
                return {
                    active: e
                }
            };

            function Uw(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "li", 41), qo("click", function() {
                        Rt(e);
                        const n = t.$implicit;
                        return Ko(2).loadVideo(n.slug)
                    }), jo(1, "input", 42), qo("click", function(t) {
                        return Rt(e), Ko(2).checkboxClick(t)
                    }), Bo(), Aa(2), jo(3, "div", 43), Vo(4, "i", 44), Aa(5, " Free YouTube Video "), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit,
                        n = t.index,
                        r = Ko(2);
                    No("ngClass", ru(3, Vw, e.slug == r.currentVideo.slug)), ni(2), Oa(" ", n + 1, ". ", e.title, " ")
                }
            }

            function $w(e, t) {
                if (1 & e && (jo(0, "ul", 39), Io(1, Uw, 6, 5, "li", 40), Bo()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngForOf", e.contentArray)
                }
            }

            function Hw(e, t) {
                1 & e && Vo(0, "img", 56)
            }

            function zw(e, t) {
                if (1 & e && (jo(0, "h3", 53), Aa(1), jo(2, "a", 54), Io(3, Hw, 1, 0, "img", 55), Bo(), Bo()), 2 & e) {
                    const e = Ko(2);
                    ni(1), Ta(" ", e.currentVideo.title, ""), ni(1), Xo("href", "/dashboard/videos/", e.slug, "", ss), ni(1), No("ngIf", e.is_staff)
                }
            }

            function qw(e, t) {
                if (1 & e && (jo(0, "div"), Vo(1, "app-adsense", 57), Vo(2, "div", 48), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(2), No("innerHTML", e, rs)
                }
            }

            function Gw(e, t) {
                if (1 & e && (jo(0, "div"), Vo(1, "app-adsense", 58), Vo(2, "div", 48), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(2), No("innerHTML", e, rs)
                }
            }

            function Ww(e, t) {
                if (1 & e && (jo(0, "div"), Vo(1, "app-adsense", 59), Vo(2, "div", 48), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(2), No("innerHTML", e, rs)
                }
            }

            function Kw(e, t) {
                1 & e && (jo(0, "div", 60), Vo(1, "app-adsense", 61), Bo())
            }

            function Zw(e, t) {
                if (1 & e && (jo(0, "div", 45), Io(1, zw, 4, 3, "h3", 46), jo(2, "div", 47), Vo(3, "div", 48), Io(4, qw, 3, 1, "div", 49), Io(5, Gw, 3, 1, "div", 49), Io(6, Ww, 3, 1, "div", 49), Bo(), Io(7, Kw, 2, 0, "div", 50), jo(8, "div", 51), jo(9, "a", 52), Aa(10, "\u2190 Previous "), Bo(), jo(11, "a", 52), Aa(12, "Next \u2192"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngIf", e.currentVideo), ni(2), No("innerHTML", e.innerHtml, rs), ni(1), No("ngForOf", e.innerHtmlsAd), ni(1), No("ngForOf", e.innerHtmlsAdia), ni(1), No("ngForOf", e.innerHtmlsAdsq), ni(1), No("ngIf", e.innerHtml && e.innerHtml.length > 100), ni(2), Xo("routerLink", "/videos/", e.prevSlug, ""), ni(2), Xo("routerLink", "/videos/", e.nextSlug, "")
                }
            }

            function Qw(e, t) {
                1 & e && (jo(0, "div", 71), Aa(1, " Enter at least 4 characters"), Bo())
            }

            function Yw(e, t) {
                1 & e && (jo(0, "div", 71), Aa(1, "You are posting too quickly, Please try again after sometime"), Bo())
            }

            function Jw(e, t) {
                1 & e && Vo(0, "span", 72)
            }

            function Xw(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "div", 62), jo(1, "form", 63, 64), qo("ngSubmit", function() {
                        Rt(e);
                        const t = Mo(2);
                        return Ko().onPostComment(t)
                    }), jo(3, "div", 65), jo(4, "h2"), jo(5, "label", 66), Aa(6, "Post a comment"), Bo(), Bo(), jo(7, "textarea", 67), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().commentText = t
                    }), Aa(8, "                                "), Bo(), Bo(), Io(9, Qw, 2, 0, "div", 68), Io(10, Yw, 2, 0, "div", 68), jo(11, "button", 69), Io(12, Jw, 1, 0, "span", 70), Aa(13, " Post"), Bo(), Bo(), Bo()
                }
                if (2 & e) {
                    const e = Mo(2),
                        t = Ko();
                    ni(7), No("ngModel", t.commentText), ni(2), No("ngIf", !e.valid && e.touched), ni(1), No("ngIf", t.commentCount > t.noOfCommentsAllowed && e.touched), ni(1), No("disabled", !e.valid || t.commentCount > t.noOfCommentsAllowed), ni(1), No("ngIf", t.postingComment)
                }
            }

            function eC(e, t) {
                1 & e && (jo(0, "h3"), Aa(1, "You need to be logged in to post a comment!"), Bo())
            }

            function tC(e, t) {
                1 & e && (jo(0, "h3"), Aa(1, "Comments"), Bo())
            }

            function nC(e, t) {
                1 & e && (jo(0, "p", 73), Aa(1, " No comments to display. Be the first person to post a comment! "), Bo())
            }

            function rC(e, t) {
                if (1 & e && (jo(0, "button", 90), Aa(1, " Add Reply "), Bo()), 2 & e) {
                    const e = Ko().$implicit;
                    Xo("aria-controls", "openReply", e.sno, ""), Oo("data-target", "#openReply" + e.sno)
                }
            }

            function sC(e, t) {
                1 & e && (jo(0, "div", 71), Aa(1, "You are posting too quickly. Please try again after sometime"), Bo())
            }

            function iC(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "div", 91), qo("click", function() {
                        Rt(e);
                        const t = Ko().$implicit;
                        return Ko().showReplies(t.sno)
                    }), Aa(1), Bo()
                }
                if (2 & e) {
                    const e = Ko().$implicit;
                    ni(1), Ta("Show ", e.replycount, " replies")
                }
            }

            function oC(e, t) {
                if (1 & e && (jo(0, "div", 92), jo(1, "div", 93), jo(2, "div", 76), Vo(3, "img", 94), Bo(), jo(4, "div", 95), jo(5, "div", 79), jo(6, "b"), Aa(7), Bo(), jo(8, "span", 80), Aa(9), uu(10, "date"), Bo(), Vo(11, "br"), jo(12, "div", 81), Aa(13), Bo(), Vo(14, "div", 53), Bo(), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(7), Ta("", e.username, " "), ni(2), Ta(" ", cu(10, 3, e.time), ""), ni(4), Da(e.comment)
                }
            }

            function aC(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "div", 74), jo(1, "div", 75), jo(2, "div", 76), Vo(3, "img", 77), Bo(), jo(4, "div", 78), jo(5, "div", 79), jo(6, "b"), Aa(7), Bo(), jo(8, "span", 80), Aa(9), uu(10, "date"), Bo(), Vo(11, "br"), jo(12, "div", 81), Aa(13), Bo(), Bo(), Io(14, rC, 2, 2, "button", 82), jo(15, "div", 83), jo(16, "form", 63, 84), qo("ngSubmit", function() {
                        Rt(e);
                        const n = t.$implicit,
                            r = t.index,
                            s = Mo(17);
                        return Ko().onPostReply(n.sno, s, r)
                    }), jo(18, "textarea", 85, 86), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().replyText = t
                    }), Bo(), jo(20, "button", 87), Aa(21, "Reply"), Bo(), Io(22, sC, 2, 0, "div", 68), Bo(), Bo(), Io(23, iC, 2, 1, "div", 88), Io(24, oC, 15, 5, "div", 89), Bo(), Bo(), Bo()
                }
                if (2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    ni(7), Ta("", e.username, " "), ni(2), Ta(" ", cu(10, 10, e.time), ""), ni(4), Da(e.comment), ni(1), No("ngIf", n.loggedin), ni(1), Xo("id", "openReply", e.sno, ""), ni(3), No("ngModel", n.replyText), ni(2), No("disabled", n.commentCount > n.noOfRepliesAllowed || n.postingReply || n.replyText.length < 5), ni(2), No("ngIf", n.commentCount > n.noOfRepliesAllowed), ni(1), No("ngIf", e.replycount > 0), ni(1), No("ngForOf", n.replies[e.sno])
                }
            }

            function lC(e, t) {
                1 & e && (jo(0, "div", 96), jo(1, "div", 97), jo(2, "span", 98), Aa(3, "Loading..."), Bo(), Bo(), Bo())
            }

            function uC(e, t) {
                1 & e && (jo(0, "div"), Aa(1, "No resource files associated with this project"), Bo())
            }

            function cC(e, t) {
                if (1 & e && (jo(0, "li", 53), Aa(1), jo(2, "a", 99), Aa(3, "Download here"), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    ni(1), Ta("", e.friendly_name, " - "), ni(1), ea("href", "", n.host, "", e.file, "", ss)
                }
            }
            const hC = function(e) {
                    return {
                        row: !0,
                        "h-0": e
                    }
                },
                dC = function(e) {
                    return {
                        "h-0": e
                    }
                },
                pC = function(e) {
                    return {
                        openCourseHeight: e
                    }
                },
                fC = function(e) {
                    return {
                        visible: e
                    }
                },
                gC = function(e) {
                    return {
                        invisible: e
                    }
                },
                mC = function(e) {
                    return {
                        "mt-48": e
                    }
                },
                yC = [{
                    path: "",
                    component: vw
                }, {
                    path: "videos",
                    component: Iw
                }, {
                    path: "videos/:slug",
                    component: (() => {
                        class e {
                            constructor(e, t, n, r, s, i, o, a, l, u) {
                                if (this.router = e, this.route = t, this.videoService = n, this.titleService = r, this.metaService = s, this.highlightService = i, this.commentService = o, this.reCaptchaV3Service = a, this.scriptService = l, this.platformId = u, this.contentArray = [], this.currentVideo = new Mw, this.commentOpened = !1, this.commentOnceOpened = !1, this.highlighted = !1, this.showCommentLoader = !1, this.commentEnd = !1, this.comments = [], this.replies = {}, this.loggedin = !1, this.courseContentExpanded = !1, this.resources = [], this.resourceBoxClicked = !1, this.commentCount = 0, this.postingComment = !1, this.postingReply = !1, this.noOfCommentsAllowed = 10, this.noOfRepliesAllowed = 20, this.replyText = "", this.siteKey = "6Lf8EMkaAAAAAMDraR1vekR1rPpYJQ3vmiRP57Di", this.innerHtmlsAd = [], this.innerHtmlsAdia = [], this.innerHtmlsAdsq = [], this.route.params.subscribe(e => {
                                        this.slug = e.slug, this.loadVideo(this.slug), this.videoService.getCourseContents(this.slug).subscribe(e => {
                                            if (null == e.success || e.success) {
                                                this.contentArray = e;
                                                let t = function(e, t, n) {
                                                    for (var r = 0; r < e.length; r += 1)
                                                        if (e[r].slug === n) return r;
                                                    return -1
                                                }(this.contentArray, 0, this.slug);
                                                t > 0 && (this.prevSlug = this.contentArray[t - 1].slug), t < this.contentArray.length - 1 && (this.nextSlug = this.contentArray[t + 1].slug)
                                            } else window.location.replace("http://./index.html/notfound")
                                        })
                                    }), Zh(this.platformId)) {
                                    let e = localStorage.getItem("token");
                                    this.loggedin = null !== e, this.host = iy
                                }
                            }
                            onScroll() {
                                if (Zh(this.platformId) && this.commentOpened && window.innerHeight + window.scrollY >= document.body.scrollHeight - 10 && !this.commentEnd && 0 != this.comments.length) {
                                    this.showCommentLoader = !0;
                                    const [e] = this.comments.slice(-1);
                                    this.commentService.getMoreComments(this.slug, 0, e.sno).subscribe(e => {
                                        0 == e.length && (this.commentEnd = !0), this.comments = this.comments.concat(e);
                                        for (const t of e) this.replies[t.sno] = [];
                                        this.showCommentLoader = !1
                                    })
                                }
                            }
                            ngOnInit() {
                                this.videoService.getVideo(this.slug).subscribe(e => {
                                    e.success ? setTimeout(() => {
                                        this.highlightService.highlightAll()
                                    }, 0) : window.location.replace("http://./index.html/notfound")
                                })
                            }
                            ngAfterViewChecked() {
                                Zh(this.platformId) && setTimeout(() => {
                                    this.currentVideo && !this.highlighted && (this.highlightService.highlightAll(), this.highlighted = !0);
                                    let e = localStorage.getItem("token");
                                    if (null !== e) {
                                        this.loggedin = !0;
                                        let t = JSON.parse(e);
                                        this.accessToken = t.token, this.username = t.username, this.is_staff = t.is_staff
                                    } else this.loggedin = !1
                                }, 0)
                            }
                            clickOverview() {
                                this.commentOpened = !1
                            }
                            clickComments() {
                                this.commentOpened = !0, this.commentOnceOpened || this.commentService.getMoreComments(this.slug, 0, 9999999).subscribe(e => {
                                    this.comments = this.comments.concat(e);
                                    for (const t of e) this.replies[t.sno] = []
                                }), this.commentOnceOpened = !0
                            }
                            clickFiles() {
                                this.commentOpened = !1, this.resourceBoxClicked = !0, this.videoService.getResourceFiles(this.slug).subscribe(e => {
                                    this.resources = e
                                })
                            }
                            clickAnnouncements() {
                                this.commentOpened = !1
                            }
                            onPostComment(e) {
                                this.commentCount++, this.postingComment = !0, this.scriptService.cleanup();
                                let t = this.commentText;
                                this.reCaptchaV3Service.execute(this.siteKey, "comment", e => {
                                    this.commentService.postComment(this.accessToken, t, this.slug, -1, e).subscribe(e => {
                                        let n = {
                                            comment: t,
                                            username: this.username,
                                            sno: e.sno,
                                            time: new Date,
                                            replycount: 0
                                        };
                                        this.comments.unshift(n), this.replies[n.sno] = [], this.postingComment = !1, this.commentText = ""
                                    })
                                }), e.reset()
                            }
                            onPostReply(e, t, n) {
                                this.postingReply = !0, this.commentCount++, this.scriptService.cleanup();
                                let r = {
                                    comment: t.form.value.reply,
                                    username: this.username,
                                    sno: e,
                                    time: new Date
                                };
                                0 != this.replies[e].length && this.replies[r.sno].unshift(r), this.reCaptchaV3Service.execute(this.siteKey, "comment", r => {
                                    this.commentService.postComment(this.accessToken, t.form.value.reply, this.slug, e, r).subscribe(e => {
                                        this.comments[n].replycount = this.comments[n].replycount + 1, this.postingReply = !1, this.replyText = ""
                                    })
                                })
                            }
                            loadVideo(e) {
                                this.courseContentExpanded = !1, this.slug = e, this.router.navigate(["/videos/" + this.slug], {
                                    relativeTo: this.route,
                                    queryParams: {}
                                }), this.videoService.getVideo(this.slug).subscribe(e => {
                                    this.innerHtmlsAd = [], this.innerHtmlsAdia = [], this.innerHtmlsAdsq = [], this.currentVideo = e, this.currentVideo.content.split("&lt;|AD").forEach(e => {
                                        e.startsWith("|&gt;") ? (e = e.replace("|&gt;", ""), this.innerHtmlsAd.push(e)) : e.startsWith("IA|&gt;") ? (e = e.replace("IA|&gt;", ""), this.innerHtmlsAdia.push(e)) : e.startsWith("SQ|&gt;") ? (e = e.replace("SQ|&gt;", ""), this.innerHtmlsAdsq.push(e)) : this.innerHtml = e
                                    }), this.videoUrl = `https://www.youtube.com/embed/${this.currentVideo.videoId}`, this.titleService.setTitle(this.currentVideo.title + " -  "), this.metaService.addTags([{
                                        name: "description",
                                        content: this.currentVideo.metaDesc
                                    }]), this.highlighted = !1
                                }), this.comments = [], this.replies = [], this.commentService.getMoreComments(this.slug, 0, 999999).subscribe(e => {
                                    this.comments = this.comments.concat(e);
                                    for (const t of e) this.replies[t.sno] = []
                                }), this.commentEnd = !1, this.resourceBoxClicked && this.videoService.getResourceFiles(this.slug).subscribe(e => {
                                    this.resources = e
                                })
                            }
                            checkboxClick(e) {
                                e.stopPropagation()
                            }
                            showReplies(e) {
                                0 == this.replies[e].length && this.commentService.getMoreComments(this.slug, e, 999999).subscribe(t => {
                                    this.replies[e] = t
                                })
                            }
                            onTogglePlayerClick() {
                                this.hidePlayer = !this.hidePlayer
                            }
                            onCourseContentClick() {
                                this.courseContentExpanded = !this.courseContentExpanded
                            }
                        }
                        return e.\u0275fac = function(t) {
                            return new(t || e)(Ro(im), Ro(Bf), Ro(Fw), Ro(Id), Ro(Od), Ro(Wb), Ro(Rw), Ro(qb), Ro(Ub), Ro(Vu))
                        }, e.\u0275cmp = He({
                            type: e,
                            selectors: [
                                ["app-video-page"]
                            ],
                            hostBindings: function(e, t) {
                                1 & e && qo("scroll", function() {
                                    return t.onScroll()
                                }, !1, ps)
                            },
                            decls: 55,
                            vars: 31,
                            consts: [
                                [1, "container-fluid"],
                                ["id", "sticky-d", 1, "row", 3, "ngClass"],
                                ["id", "video-box", 1, "col-md-9", "bg-black", "px-0", 3, "ngClass"],
                                ["class", "container videoContainer embed-responsive embed-responsive-16by9 px-3", 3, "ngClass", 4, "ngIf"],
                                ["id", "course-content-box", 1, "col-md-3", "px-0", 3, "ngClass"],
                                [1, "row", "mx-0", "py-2", "px-3", "bg-lgrey"],
                                [1, "my-0"],
                                ["height", "25px", "width", "25px", "alt", "", 1, "plusIcon", "mx-2", 3, "src", "click"],
                                ["id", "togglePlayer", 1, "btn", "btn-sm", "btn-danger", "mx-3", 3, "click"],
                                ["id", "content-box", 3, "ngClass"],
                                ["class", "content-holder", 4, "ngIf"],
                                ["id", "video-box2", 1, "col-md-9", "bg-black", "px-0", 3, "ngClass"],
                                [1, "other", "bg-light"],
                                ["id", "myTab", "role", "tablist", 1, "nav", "nav-tabs", 3, "ngClass"],
                                ["role", "presentation", 1, "nav-item", 3, "click"],
                                ["id", "overview-tab", "data-toggle", "tab", "href", "#overview", "role", "tab", "aria-controls", "overview", "aria-selected", "true", 1, "nav-link", "active"],
                                ["id", "qna-tab", "data-toggle", "tab", "href", "#qna", "role", "tab", "aria-controls", "qna", "aria-selected", "false", 1, "nav-link"],
                                ["id", "resources-tab", "data-toggle", "tab", "href", "#resources", "role", "tab", "aria-controls", "resources", "aria-selected", "false", 1, "nav-link"],
                                ["id", "announcements-tab", "data-toggle", "tab", "href", "#announcements", "role", "tab", "aria-controls", "announcements", "aria-selected", "false", 1, "nav-link"],
                                ["id", "myTabContent", 1, "tab-content"],
                                ["id", "overview", "role", "tabpanel", "aria-labelledby", "overview-tab", 1, "tab-pane", "fade", "show", "mx-4", "mt-3", "active"],
                                ["class", "container clearfix py-0 px-0", 4, "ngIf"],
                                ["id", "qna", "role", "tabpanel", "aria-labelledby", "qna-tab", 1, "tab-pane", "fade", "mx-4", "mt-3"],
                                ["id", "comments", "class", "container px-0", 4, "ngIf", "ngIfElse"],
                                ["commentElse", ""],
                                [1, "container", "my-4", "px-0"],
                                [4, "ngIf", "ngIfElse"],
                                ["elseBlock", ""],
                                ["class", "comments", 4, "ngFor", "ngForOf"],
                                ["class", "text-center", 4, "ngIf"],
                                ["id", "resources", "role", "tabpanel", "aria-labelledby", "resources-tab", 1, "tab-pane", "fade", "mx-4", "mt-3"],
                                [1, "container", "px-0"],
                                [4, "ngIf"],
                                ["class", "my-2", 4, "ngFor", "ngForOf"],
                                ["id", "announcements", "role", "tabpanel", "aria-labelledby", "announcements-tab", 1, "tab-pane", "fade", "mx-4", "mt-3"],
                                [1, "container"],
                                [1, "container", "videoContainer", "embed-responsive", "embed-responsive-16by9", "px-3", 3, "ngClass"],
                                ["class", "embed-responsive-item", "allowfullscreen", "", 3, "src", 4, "ngIf"],
                                ["allowfullscreen", "", 1, "embed-responsive-item", 3, "src"],
                                [1, "content-holder"],
                                ["class", "content-holder-item", 3, "ngClass", "click", 4, "ngFor", "ngForOf"],
                                [1, "content-holder-item", 3, "ngClass", "click"],
                                ["type", "checkbox", 3, "click"],
                                [1, "mx-3"],
                                [1, "far", "fa-play-circle"],
                                [1, "container", "clearfix", "py-0", "px-0"],
                                ["class", "my-2", 4, "ngIf"],
                                [1, "contentBox"],
                                [3, "innerHTML"],
                                [4, "ngFor", "ngForOf"],
                                ["class", "advh mb-2", 4, "ngIf"],
                                [1, "my-4", "d-flex", "justify-content-between"],
                                [1, "btn", "btn-danger", 3, "routerLink"],
                                [1, "my-2"],
                                ["target", "_blank", 3, "href"],
                                ["src", "../../../assets/img/pencil.png", "alt", "edit", "width", "20px", "height", "20px", 4, "ngIf"],
                                ["src", "../../../assets/img/pencil.png", "alt", "edit", "width", "20px", "height", "20px"],
                                ["adType", "ad"],
                                ["adType", "adia"],
                                ["adType", "adsq"],
                                [1, "advh", "mb-2"],
                                ["adType", "advh"],
                                ["id", "comments", 1, "container", "px-0"],
                                [3, "ngSubmit"],
                                ["commentForm", "ngForm"],
                                [1, "form-group", "mb-0"],
                                ["for", "inputAddress"],
                                ["type", "text", "maxlength", "500", "id", "comment", "placeholder", "Write a comment...", "name", "comment", "minlength", "5", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                                ["class", "commentError text-danger text-small", 4, "ngIf"],
                                ["type", "submit", 1, "btn", "btn-danger", "mt-2", 3, "disabled"],
                                ["class", "spinner-border spinner-border-sm", "role", "status", "aria-hidden", "true", 4, "ngIf"],
                                [1, "commentError", "text-danger", "text-small"],
                                ["role", "status", "aria-hidden", "true", 1, "spinner-border", "spinner-border-sm"],
                                [1, "mx-1"],
                                [1, "comments"],
                                [1, "row", "mt-4"],
                                [1, "col-sm-3", "col-lg-1", "col-xl-1"],
                                ["width", "25%", "src", "../../../assets/img/comment.png", 1, "w-100", "d-block", "mx-auto", "rounded-circle"],
                                [1, "col-md-8", "col-lg-10", "col-xl-10", "commentContainer"],
                                [1, "my-2", "mx-2"],
                                [1, "badge", "badge-secondary"],
                                [1, "commentPre"],
                                ["class", "btn btn-danger btn-sm", "type", "button", "data-toggle", "collapse", "aria-expanded", "false", 3, "aria-controls", 4, "ngIf"],
                                [1, "collapse", 3, "id"],
                                ["replyForm", "ngForm"],
                                ["type", "text", "maxlength", "250", "placeholder", "Write a reply...", "name", "reply", "minlength", "4", "required", "", 1, "form-control", "my-2", 3, "ngModel", "ngModelChange"],
                                ["replyarea", ""],
                                ["type", "submit", 1, "btn", "btn-sm", "btn-danger", 3, "disabled"],
                                ["class", "showReplies", 3, "click", 4, "ngIf"],
                                ["class", "commentReplies", 4, "ngFor", "ngForOf"],
                                ["type", "button", "data-toggle", "collapse", "aria-expanded", "false", 1, "btn", "btn-danger", "btn-sm", 3, "aria-controls"],
                                [1, "showReplies", 3, "click"],
                                [1, "commentReplies"],
                                [1, "row", "my-3"],
                                ["width", "25%", "src", "../../../assets/img/comment.png", 1, "w-100", "rounded-circle"],
                                [1, "col-md-8", "col-lg-10", "col-xl-10"],
                                [1, "text-center"],
                                ["role", "status", 1, "spinner-border", "text-danger"],
                                [1, "sr-only"],
                                ["role", "button", "target", "_blank", 1, "btn", "btn-sm", "btn-outline-danger", 3, "href"]
                            ],
                            template: function(e, t) {
                                if (1 & e && (jo(0, "div", 0), jo(1, "div", 1), jo(2, "div", 2), Io(3, Bw, 2, 4, "div", 3), Bo(), jo(4, "div", 4), jo(5, "div", 5), jo(6, "h5", 6), Aa(7, " Course Content "), Bo(), jo(8, "img", 7), qo("click", function() {
                                        return t.onCourseContentClick()
                                    }), Bo(), jo(9, "button", 8), qo("click", function() {
                                        return t.onTogglePlayerClick()
                                    }), Aa(10), Bo(), Bo(), jo(11, "div", 9), Io(12, $w, 2, 1, "ul", 10), Bo(), Bo(), Vo(13, "hr"), Bo(), jo(14, "div", 11), jo(15, "div", 12), jo(16, "ul", 13), jo(17, "li", 14), qo("click", function() {
                                        return t.clickOverview()
                                    }), jo(18, "a", 15), Aa(19, "Overview"), Bo(), Bo(), jo(20, "li", 14), qo("click", function() {
                                        return t.clickComments()
                                    }), jo(21, "a", 16), Aa(22, "Q&A"), Bo(), Bo(), jo(23, "li", 14), qo("click", function() {
                                        return t.clickFiles()
                                    }), jo(24, "a", 17), Aa(25, "Files"), Bo(), Bo(), jo(26, "li", 14), qo("click", function() {
                                        return t.clickAnnouncements()
                                    }), jo(27, "a", 18), Aa(28, "Announcements"), Bo(), Bo(), Bo(), jo(29, "div", 19), jo(30, "div", 20), Io(31, Zw, 13, 8, "div", 21), Bo(), jo(32, "div", 22), Io(33, Xw, 14, 5, "div", 23), Io(34, eC, 2, 0, "ng-template", null, 24, Iu), jo(36, "div", 25), Io(37, tC, 2, 0, "h3", 26), Io(38, nC, 2, 0, "ng-template", null, 27, Iu), Io(40, aC, 25, 12, "div", 28), Io(41, lC, 4, 0, "div", 29), Bo(), Bo(), jo(42, "div", 30), jo(43, "div", 31), jo(44, "h4"), Aa(45, "Resources"), Bo(), Io(46, uC, 2, 0, "div", 32), jo(47, "ol"), Io(48, cC, 4, 3, "li", 33), Bo(), Bo(), Bo(), jo(49, "div", 34), jo(50, "div", 35), jo(51, "h4"), Aa(52, "Course Announcements"), Bo(), jo(53, "p"), Aa(54, " Any Course related announcements will be posted here "), Bo(), Bo(), Bo(), Bo(), Bo(), Bo(), Bo()), 2 & e) {
                                    const e = Mo(35),
                                        n = Mo(39);
                                    ni(1), No("ngClass", ru(19, hC, t.hidePlayer)), ni(1), No("ngClass", ru(21, dC, t.hidePlayer)), ni(1), No("ngIf", t.currentVideo), ni(1), No("ngClass", ru(23, pC, t.courseContentExpanded)), ni(4), No("src", t.courseContentExpanded ? "../../../assets/img/minus.png" : "../../../assets/img/plus.png", ss), ni(2), Ta("", t.hidePlayer ? "Show " : "Hide ", " Player"), ni(1), No("ngClass", ru(25, fC, t.courseContentExpanded)), ni(1), No("ngIf", t.currentVideo), ni(2), No("ngClass", ru(27, gC, t.courseContentExpanded)), ni(2), No("ngClass", ru(29, mC, t.hidePlayer)), ni(15), No("ngIf", t.currentVideo), ni(2), No("ngIf", t.loggedin)("ngIfElse", e), ni(4), No("ngIf", 0 != t.comments.length)("ngIfElse", n), ni(3), No("ngForOf", t.comments), ni(1), No("ngIf", t.showCommentLoader), ni(5), No("ngIf", 0 == t.resources.length), ni(2), No("ngForOf", t.resources)
                                }
                            },
                            directives: [Ph, Nh, Mh, om, Jb, mb, qy, db, xy, Rb, Ib, Tb, zy, gb],
                            pipes: [Nw, Wh],
                            styles: ["div.code-toolbar{position:relative}div.code-toolbar>.toolbar{position:absolute;top:.3em;right:.2em;transition:opacity .3s ease-in-out;opacity:0}div.code-toolbar:focus-within>.toolbar,div.code-toolbar:hover>.toolbar{opacity:1}div.code-toolbar>.toolbar .toolbar-item{display:inline-block}div.code-toolbar>.toolbar a{cursor:pointer}div.code-toolbar>.toolbar button{background:none;border:0;color:inherit;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}div.code-toolbar>.toolbar a,div.code-toolbar>.toolbar button,div.code-toolbar>.toolbar span{color:#bbb;font-size:.8em;padding:0 .5em;background:#f5f2f0;background:hsla(0,0%,87.8%,.2);box-shadow:0 2px 0 0 rgba(0,0,0,.2);border-radius:.5em}div.code-toolbar>.toolbar a:focus,div.code-toolbar>.toolbar a:hover,div.code-toolbar>.toolbar button:focus,div.code-toolbar>.toolbar button:hover,div.code-toolbar>.toolbar span:focus,div.code-toolbar>.toolbar span:hover{color:inherit;text-decoration:none}code[class*=language-],pre[class*=language-]{color:#f8f8f2;background:none;text-shadow:0 1px rgba(0,0,0,.3);font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;tab-size:4;-webkit-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#272822}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#8292a2}.token.punctuation{color:#f8f8f2}.token.namespace{opacity:.7}.token.constant,.token.deleted,.token.property,.token.symbol,.token.tag{color:#f92672}.token.boolean,.token.number{color:#ae81ff}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#a6e22e}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f8f8f2}.token.atrule,.token.attr-value,.token.class-name,.token.function{color:#e6db74}.token.keyword{color:#66d9ef}.token.important,.token.regex{color:#fd971f}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}code[class*=language-],pre[class*=language-]{max-height:614px}.commentContainer{overflow-x:auto}.content-holder{list-style:none;padding:0}.content-holder a{color:#000;text-decoration:none}.content-holder li:hover{background-color:#efeff0}.content-holder-item{padding:23px 12px;font-size:16px;cursor:pointer}li.active{background-color:#d6d6d6}.bg-black{background-color:#000}#content-box{max-height:85vh;overflow-y:scroll}#course-content-box{background:#fff;align-self:flex-start;height:20px;position:sticky;top:0}.bg-lgrey{background-color:#e7e7e9}.tab-pane{min-height:344px}.nav-link{font-weight:700;color:#000}.commentReplies{background-color:#e7e7e9;margin:18px 3px}.commentReplies img{margin:8px 14px}#toggleCourse{display:none}.openCourseHeight{height:76vh!important}.plusIcon{display:none}@media only screen and (max-width:400px){.nav-link{font-size:16px;padding:9px 6px}#course-content-box{height:57px}}@media only screen and (max-width:560px){img.rounded-circle{height:0;visibility:hidden}}@media only screen and (max-width:768px){#course-content-box{height:46px;transition:height .4s;position:static}#content-box{height:70vh;visibility:hidden}#toggle-button{visibility:visible}#video-box{z-index:1}#sticky-d{position:sticky;top:0;z-index:1}#toggleCourse{display:inline}.other{margin-left:-15px;margin-right:-15px}.plusIcon{display:inline-block;width:24px;height:24px}}#video-box2{font-size:14pt;font-family:helvetica}#video-box2 img{cursor:pointer}#video-box2 pre code{font-size:16px}.commentContainer pre{font-size:14pt;font-family:helvetica}#video-box2 h6,h1,h2,h3,h4,h5{font-family:Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.tab-pane{min-height:100vh}div.toolbar-item button{color:#fff!important;border:2px solid #fff!important;margin-right:23px}@media screen and (max-width:768px){div.toolbar-item button{margin-right:0}}#previewModal .modal-dialog{max-width:80%}.h-0{height:0}@media screen and (max-width:768px){div.toolbar-item button{margin-right:0}#video-box2 pre code{font-size:10px}.mt-48{margin-top:48px}}pre[class*=language-]{font-size:6pt}img{max-width:100%;height:auto}#video-box2{word-wrap:break-word}.commentError{font-size:10pt;margin:8px}#qna>h2{margin:43px}.showReplies{color:#00f;cursor:pointer;font-size:14px;padding:8px 16px}.advh{height:300px;width:100%;margin:auto}h2,h3,h4,h5,h6{margin:25px 0 9px}.commentPre{overflow-x:auto;white-space:pre-wrap;white-space:-moz-pre-wrap;white-space:-pre-wrap;white-space:-o-pre-wrap;word-wrap:break-word}table{max-width:90vw}td,tr{max-width:30vw!important}"],
                            encapsulation: 2
                        }), e
                    })()
                }, {
                    path: "blog",
                    component: gy
                }, {
                    path: "blogpost/:slug",
                    component: yv
                }, {
                    path: "contact",
                    component: wv
                }, {
                    path: "search",
                    component: Ow
                }, {
                    path: "profile/myaccount",
                    component: ww
                }, {
                    path: "notifications",
                    component: cy
                }, {
                    path: "dashboard",
                    component: $_
                }, {
                    path: "dashboard/videos",
                    component: mw
                }, {
                    path: "dashboard/videos/:slug",
                    component: lw
                }, {
                    path: "dashboard/blogs",
                    component: U_
                }, {
                    path: "dashboard/blogs/:slug",
                    component: __
                }, {
                    path: "**",
                    component: Cw
                }];
            let bC = (() => {
                class e {}
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275mod = We({
                    type: e
                }), e.\u0275inj = de({
                    imports: [
                        [bm.forRoot(yC, {
                            initialNavigation: "enabled"
                        })], bm
                    ]
                }), e
            })();
            class vC extends h {
                constructor(e, t) {
                    super()
                }
                schedule(e, t = 0) {
                    return this
                }
            }
            class _C extends vC {
                constructor(e, t) {
                    super(e, t), this.scheduler = e, this.work = t, this.pending = !1
                }
                schedule(e, t = 0) {
                    if (this.closed) return this;
                    this.state = e;
                    const n = this.id,
                        r = this.scheduler;
                    return null != n && (this.id = this.recycleAsyncId(r, n, t)), this.pending = !0, this.delay = t, this.id = this.id || this.requestAsyncId(r, this.id, t), this
                }
                requestAsyncId(e, t, n = 0) {
                    return setInterval(e.flush.bind(e, this), n)
                }
                recycleAsyncId(e, t, n = 0) {
                    if (null !== n && this.delay === n && !1 === this.pending) return t;
                    clearInterval(t)
                }
                execute(e, t) {
                    if (this.closed) return new Error("executing a cancelled action");
                    this.pending = !1;
                    const n = this._execute(e, t);
                    if (n) return n;
                    !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null))
                }
                _execute(e, t) {
                    let n, r = !1;
                    try {
                        this.work(e)
                    } catch (s) {
                        r = !0, n = !!s && s || new Error(s)
                    }
                    if (r) return this.unsubscribe(), n
                }
                _unsubscribe() {
                    const e = this.id,
                        t = this.scheduler,
                        n = t.actions,
                        r = n.indexOf(this);
                    this.work = null, this.state = null, this.pending = !1, this.scheduler = null, -1 !== r && n.splice(r, 1), null != e && (this.id = this.recycleAsyncId(t, e, null)), this.delay = null
                }
            }
            let wC = (() => {
                class e {
                    constructor(t, n = e.now) {
                        this.SchedulerAction = t, this.now = n
                    }
                    schedule(e, t = 0, n) {
                        return new this.SchedulerAction(this, e).schedule(n, t)
                    }
                }
                return e.now = () => Date.now(), e
            })();
            class CC extends wC {
                constructor(e, t = wC.now) {
                    super(e, () => CC.delegate && CC.delegate !== this ? CC.delegate.now() : t()), this.actions = [], this.active = !1, this.scheduled = void 0
                }
                schedule(e, t = 0, n) {
                    return CC.delegate && CC.delegate !== this ? CC.delegate.schedule(e, t, n) : super.schedule(e, t, n)
                }
                flush(e) {
                    const {
                        actions: t
                    } = this;
                    if (this.active) return void t.push(e);
                    let n;
                    this.active = !0;
                    do {
                        if (n = e.execute(e.state, e.delay)) break
                    } while (e = t.shift());
                    if (this.active = !1, n) {
                        for (; e = t.shift();) e.unsubscribe();
                        throw n
                    }
                }
            }
            const SC = new CC(_C);

            function xC(e) {
                return !l(e) && e - parseFloat(e) + 1 >= 0
            }

            function EC(e = 0, t, n) {
                let r = -1;
                return xC(t) ? r = Number(t) < 1 ? 1 : Number(t) : E(t) && (n = t), E(n) || (n = SC), new b(t => {
                    const s = xC(e) ? e : +e - n.now();
                    return n.schedule(kC, s, {
                        index: 0,
                        period: r,
                        subscriber: t
                    })
                })
            }

            function kC(e) {
                const {
                    index: t,
                    period: n,
                    subscriber: r
                } = e;
                if (r.next(t), !r.closed) {
                    if (-1 === n) return r.complete();
                    e.index = t + 1, this.schedule(e, n)
                }
            }
            class AC extends _C {
                constructor(e, t) {
                    super(e, t), this.scheduler = e, this.work = t
                }
                schedule(e, t = 0) {
                    return t > 0 ? super.schedule(e, t) : (this.delay = t, this.state = e, this.scheduler.flush(this), this)
                }
                execute(e, t) {
                    return t > 0 || this.closed ? super.execute(e, t) : this._execute(e, t)
                }
                requestAsyncId(e, t, n = 0) {
                    return null !== n && n > 0 || null === n && this.delay > 0 ? super.requestAsyncId(e, t, n) : e.flush(this)
                }
            }
            class DC extends CC {}
            const TC = new DC(AC);
            let OC = (() => {
                class e {
                    constructor(e, t, n) {
                        this.kind = e, this.value = t, this.error = n, this.hasValue = "N" === e
                    }
                    observe(e) {
                        switch (this.kind) {
                            case "N":
                                return e.next && e.next(this.value);
                            case "E":
                                return e.error && e.error(this.error);
                            case "C":
                                return e.complete && e.complete()
                        }
                    }
                    do(e, t, n) {
                        switch (this.kind) {
                            case "N":
                                return e && e(this.value);
                            case "E":
                                return t && t(this.error);
                            case "C":
                                return n && n()
                        }
                    }
                    accept(e, t, n) {
                        return e && "function" == typeof e.next ? this.observe(e) : this.do(e, t, n)
                    }
                    toObservable() {
                        switch (this.kind) {
                            case "N":
                                return Ld(this.value);
                            case "E":
                                return e = this.error, new b(t => t.error(e));
                            case "C":
                                return Zd()
                        }
                        var e;
                        throw new Error("unexpected notification kind value")
                    }
                    static
                    createNext(t) {
                        return void 0 !== t ? new e("N", t) : e.undefinedValueNotification
                    }
                    static createError(t) {
                        return new e("E", void 0, t)
                    }
                    static createComplete() {
                        return e.completeNotification
                    }
                }
                return e.completeNotification = new e("C"), e.undefinedValueNotification = new e("N", void 0), e
            })();
            class FC extends f {
                constructor(e, t, n = 0) {
                    super(e), this.scheduler = t, this.delay = n
                }
                static dispatch(e) {
                    const {
                        notification: t,
                        destination: n
                    } = e;
                    t.observe(n), this.unsubscribe()
                }
                scheduleMessage(e) {
                    this.destination.add(this.scheduler.schedule(FC.dispatch, this.delay, new PC(e, this.destination)))
                }
                _next(e) {
                    this.scheduleMessage(OC.createNext(e))
                }
                _error(e) {
                    this.scheduleMessage(OC.createError(e)), this.unsubscribe()
                }
                _complete() {
                    this.scheduleMessage(OC.createComplete()), this.unsubscribe()
                }
            }
            class PC {
                constructor(e, t) {
                    this.notification = e, this.destination = t
                }
            }
            class IC extends S {
                constructor(e = Number.POSITIVE_INFINITY, t = Number.POSITIVE_INFINITY, n) {
                    super(), this.scheduler = n, this._events = [], this._infiniteTimeWindow = !1, this._bufferSize = e < 1 ? 1 : e, this._windowTime = t < 1 ? 1 : t, t === Number.POSITIVE_INFINITY ? (this._infiniteTimeWindow = !0, this.next = this.nextInfiniteTimeWindow) : this.next = this.nextTimeWindow
                }
                nextInfiniteTimeWindow(e) {
                    if (!this.isStopped) {
                        const t = this._events;
                        t.push(e), t.length > this._bufferSize && t.shift()
                    }
                    super.next(e)
                }
                nextTimeWindow(e) {
                    this.isStopped || (this._events.push(new MC(this._getNow(), e)), this._trimBufferThenGetEvents()), super.next(e)
                }
                _subscribe(e) {
                    const t = this._infiniteTimeWindow,
                        n = t ? this._events : this._trimBufferThenGetEvents(),
                        r = this.scheduler,
                        s = n.length;
                    let i;
                    if (this.closed) throw new _;
                    if (this.isStopped || this.hasError ? i = h.EMPTY : (this.observers.push(e), i = new w(this, e)), r && e.add(e = new FC(e, r)), t)
                        for (let o = 0; o < s && !e.closed; o++) e.next(n[o]);
                    else
                        for (let o = 0; o < s && !e.closed; o++) e.next(n[o].value);
                    return this.hasError ? e.error(this.thrownError) : this.isStopped && e.complete(), i
                }
                _getNow() {
                    return (this.scheduler || TC).now()
                }
                _trimBufferThenGetEvents() {
                    const e = this._getNow(),
                        t = this._bufferSize,
                        n = this._windowTime,
                        r = this._events,
                        s = r.length;
                    let i = 0;
                    for (; i < s && !(e - r[i].time < n);) i++;
                    return s > t && (i = Math.max(i, s - t)), i > 0 && r.splice(0, i), r
                }
            }
            class MC {
                constructor(e, t) {
                    this.time = e, this.value = t
                }
            }

            function RC(e, t) {
                if (1 & e && (jo(0, "div", 3), Vo(1, "div", 4), Bo()), 2 & e) {
                    const e = Ko(2);
                    ni(1), da("width", e.diameter)("height", e.diameter)
                }
            }

            function NC(e, t) {
                if (1 & e && Vo(0, "div", 5), 2 & e) {
                    const e = Ko().ngIf,
                        t = Ko();
                    da("background", t.color)("height", t.height)("width", e + "%")
                }
            }

            function LC(e, t) {
                if (1 & e && (function(e, t, n) {
                        const r = It(),
                            s = Mt(),
                            i = s.firstCreatePass ? function(e, t, n, r, s) {
                                const i = t.consts,
                                    o = Dt(i, undefined),
                                    a = di(t, 20, 8, "ng-container", o);
                                return null !== o && Yi(a, o, !0), ki(t, n, a, Dt(i, undefined)), null !== t.queries && t.queries.elementStart(t, a), a
                            }(0, s, r) : s.data[20];
                        jt(i, !0);
                        const o = r[20] = r[11].createComment("");
                        Ms(s, r, o, i), hs(o, r), it(i) && (vi(s, r, i), bi(s, i, r))
                    }(), Io(1, RC, 2, 4, "div", 1), Io(2, NC, 1, 6, "div", 2), function() {
                        let e = Nt();
                        const t = Mt();
                        Bt() ? Vt() : (e = e.parent, jt(e, !1)), t.firstCreatePass && (un(t, e), rt(e) && t.queries.elementEnd(e))
                    }()), 2 & e) {
                    const e = Ko();
                    ni(1), No("ngIf", e.includeSpinner), ni(1), No("ngIf", e.includeBar)
                }
            }
            class jC {
                constructor(e = {}) {
                    this.config = e, this.state = {
                        action: null,
                        value: 0,
                        initialValue: 0
                    }, this.requests = null, this.disabled = !1, this.stream$ = new S, this._value$ = null, this.timer$ = e => {
                        let t = Ld(e);
                        switch (e.action) {
                            case "start":
                            case "increment":
                            case "set":
                                "start" === e.action && 0 === this.config.latencyThreshold && 0 === e.value && (e.value = e.initialValue), this.requests > 0 && (t = EC(this.config.latencyThreshold, 250).pipe(k(t => Object.assign(Object.assign({}, e), {
                                    value: 0 === t ? this.state.value || e.initialValue : this._increment()
                                }))));
                                break;
                            case "complete":
                            case "stop":
                                t = 0 === e.value ? Ld(Object.assign({}, e)) : EC(0, 500).pipe(tp(2), k(e => ({
                                    value: 0 === e ? 100 : 0
                                })))
                        }
                        return t.pipe(k(e => Object.assign(Object.assign({}, e), {
                            action: "set"
                        })), Ap(e => this.next(e, !1)))
                    }, this.config = Object.assign({
                        latencyThreshold: 0
                    }, e)
                }
                get value$() {
                    return this._value$ ? this._value$ : this._value$ = this.stream$.asObservable().pipe(sp(this.state), Yd(e => this.timer$(e)), function(e, t, n) {
                        let r;
                        return r = {
                            bufferSize: e,
                            windowTime: void 0,
                            refCount: !1,
                            scheduler: void 0
                        }, e => e.lift(function({
                            bufferSize: e = Number.POSITIVE_INFINITY,
                            windowTime: t = Number.POSITIVE_INFINITY,
                            refCount: n,
                            scheduler: r
                        }) {
                            let s, i, o = 0,
                                a = !1,
                                l = !1;
                            return function(u) {
                                let c;
                                o++, !s || a ? (a = !1, s = new IC(e, t, r), c = s.subscribe(this), i = u.subscribe({
                                    next(e) {
                                        s.next(e)
                                    },
                                    error(e) {
                                        a = !0, s.error(e)
                                    },
                                    complete() {
                                        l = !0, i = void 0, s.complete()
                                    }
                                }), l && (i = void 0)) : c = s.subscribe(this), this.add(() => {
                                    o--, c.unsubscribe(), c = void 0, i && !l && n && 0 === o && (i.unsubscribe(), i = void 0, s = void 0)
                                })
                            }
                        }(r))
                    }(), k(e => e.value))
                }
                start(e = 2) {
                    this.disabled || this.next({
                        action: "start",
                        initialValue: e
                    })
                }
                stop() {
                    this.next({
                        action: "stop"
                    })
                }
                complete() {
                    this.next({
                        action: "complete"
                    })
                }
                disable() {
                    this.disabled = !0
                }
                set(e) {
                    this.next({
                        action: "set",
                        value: e
                    })
                }
                increment(e = 0) {
                    this.next({
                        action: "increment",
                        value: e
                    })
                }
                next(e, t = !0) {
                    switch (e.action) {
                        case "start":
                            this.requests = (this.requests || 0) + 1;
                            break;
                        case "complete":
                            if (this.requests = (this.requests || 1) - 1, this.requests > 0) return;
                            break;
                        case "stop":
                            this.requests = 0;
                            break;
                        case "increment":
                            e.value = this._increment(e.value)
                    }
                    this.state = Object.assign(Object.assign(Object.assign({}, this.state), {
                        action: null
                    }), e), t && this.stream$.next(this.state)
                }
                _increment(e = 0) {
                    const t = this.state.value;
                    return t >= 99 && (e = 0), 0 === e && (e = t >= 0 && t < 25 ? 3 * Math.random() + 3 : t >= 25 && t < 65 ? 3 * Math.random() : t >= 65 && t < 90 ? 2 * Math.random() : t >= 90 && t < 99 ? .5 : 0), e + t
                }
            }
            const BC = new Kn("LOADING_BAR_CONFIG");
            let VC = (() => {
                    let e = class {
                        constructor(e, t = {}, n) {
                            this.platformId = e, this.config = t, this.zone = n, this.refs = {}, this.streams$ = new S, this.value$ = this.streams$.asObservable().pipe(sp(null), Yd(() => Hd(...Object.keys(this.refs).map(e => this.refs[e].value$))), function(e) {
                                return e ? t => new b(n => t.subscribe(t => e.run(() => n.next(t)), t => e.run(() => n.error(t)), () => e.run(() => n.complete()))) : e => e
                            }(this.zone), k(e => Math.max(0, ...e)))
                        }
                        get progress$() {
                            return this.value$
                        }
                        start(e = 2) {
                            this.useRef().start(e)
                        }
                        set(e) {
                            this.useRef().set(e)
                        }
                        increment(e) {
                            this.useRef().increment(e)
                        }
                        complete() {
                            this.useRef().complete()
                        }
                        stop() {
                            this.useRef().stop()
                        }
                        useRef(e = "default") {
                            return this.refs[e] || (this.refs[e] = new jC(this.config), this.streams$.next(), Zh(this.platformId) || this.refs[e].disable()), this.refs[e]
                        }
                    };
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(Vu), dr(BC, 8), dr(tc, 8))
                    }, e.\u0275prov = he({
                        factory: function() {
                            return new e(dr(Vu), dr(BC, 8), dr(tc, 8))
                        },
                        token: e,
                        providedIn: "root"
                    }), e = Bv([Vv(0, gr(Vu)), Vv(1, mr()), Vv(1, gr(BC)), Vv(2, mr()), Uv("design:paramtypes", [Object, Object, tc])], e), e
                })(),
                UC = (() => {
                    let e = class {
                        constructor(e) {
                            this.loader = e, this.includeSpinner = !0, this.includeBar = !0, this.fixed = !0, this.color = "#29d"
                        }
                        get value$() {
                            return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$
                        }
                    };
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(VC))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["ngx-loading-bar"]
                        ],
                        hostVars: 3,
                        hostBindings: function(e, t) {
                            2 & e && (Oo("fixed", t.fixed), da("color", t.color))
                        },
                        inputs: {
                            includeSpinner: "includeSpinner",
                            includeBar: "includeBar",
                            fixed: "fixed",
                            color: "color",
                            value: "value",
                            ref: "ref",
                            height: "height",
                            diameter: "diameter"
                        },
                        decls: 2,
                        vars: 3,
                        consts: [
                            [4, "ngIf"],
                            ["class", "ngx-spinner", 4, "ngIf"],
                            ["class", "ngx-bar", 3, "background", "height", "width", 4, "ngIf"],
                            [1, "ngx-spinner"],
                            [1, "ngx-spinner-icon"],
                            [1, "ngx-bar"]
                        ],
                        template: function(e, t) {
                            1 & e && (Io(0, LC, 3, 2, "ng-container", 0), uu(1, "async")), 2 & e && No("ngIf", null != t.value ? t.value : cu(1, 1, t.value$))
                        },
                        directives: [Nh],
                        pipes: [zh],
                        styles: ["[_nghost-%COMP%]{position:relative;display:block;pointer-events:none}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{transition:350ms linear;display:block;position:absolute;top:5px;left:0}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]   .ngx-spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}[_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{right:0;left:unset}[fixed=true][_nghost-%COMP%]{z-index:10002}[fixed=true][_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   [fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}"],
                        changeDetection: 0
                    }), e = Bv([Uv("design:paramtypes", [VC])], e), e
                })(),
                $C = (() => {
                    let e = class {};
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        imports: [
                            [Kh]
                        ]
                    }), e
                })();
            class HC extends S {
                constructor() {
                    super(...arguments), this.value = null, this.hasNext = !1, this.hasCompleted = !1
                }
                _subscribe(e) {
                    return this.hasError ? (e.error(this.thrownError), h.EMPTY) : this.hasCompleted && this.hasNext ? (e.next(this.value), e.complete(), h.EMPTY) : super._subscribe(e)
                }
                next(e) {
                    this.hasCompleted || (this.value = e, this.hasNext = !0)
                }
                error(e) {
                    this.hasCompleted || super.error(e)
                }
                complete() {
                    this.hasCompleted = !0, this.hasNext && super.next(this.value), super.complete()
                }
            }
            class zC {}
            let qC = (() => {
                    class e extends class {
                        constructor() {}
                        loadScript(e, t, n, r = null) {
                            if ("undefined" != typeof document && !document.getElementById(e)) {
                                let e = document.createElement("script");
                                e.async = !0, e.src = t, e.onload = n, r || (r = document.head), r.appendChild(e)
                            }
                        }
                    } {
                        constructor(e, t = {
                            scope: "email"
                        }) {
                            super(), this.clientId = e, this.initOptions = t
                        }
                        initialize() {
                            return new Promise((t, n) => {
                                try {
                                    this.loadScript(e.PROVIDER_ID, "https://apis.google.com/js/platform.js", () => {
                                        gapi.load("auth2", () => {
                                            this.auth2 = gapi.auth2.init(Object.assign(Object.assign({}, this.initOptions), {
                                                client_id: this.clientId
                                            })), this.auth2.then(() => {
                                                t()
                                            }).catch(e => {
                                                n(e)
                                            })
                                        })
                                    })
                                } catch (r) {
                                    n(r)
                                }
                            })
                        }
                        getLoginStatus(t) {
                            const n = Object.assign(Object.assign({}, this.initOptions), t);
                            return new Promise((t, r) => {
                                if (this.auth2.isSignedIn.get()) {
                                    let e = new zC;
                                    const r = this.auth2.currentUser.get().getBasicProfile(),
                                        s = this.auth2.currentUser.get().getAuthResponse(!0);
                                    e.id = r.getId(), e.name = r.getName(), e.email = r.getEmail(), e.photoUrl = r.getImageUrl(), e.firstName = r.getGivenName(), e.lastName = r.getFamilyName(), e.response = s;
                                    const i = n => {
                                        e.authToken = n.access_token, e.idToken = n.id_token, t(e)
                                    };
                                    n.refreshToken ? this.auth2.currentUser.get().reloadAuthResponse().then(i) : i(this.auth2.currentUser.get().getAuthResponse(!0))
                                } else r(`No user is currently logged in with ${e.PROVIDER_ID}`)
                            })
                        }
                        signIn(e) {
                            const t = Object.assign(Object.assign({}, this.initOptions), e);
                            return new Promise((n, r) => {
                                (t && t.offline_access ? this.auth2.grantOfflineAccess(e) : this.auth2.signIn(e)).then(e => {
                                    let t = new zC;
                                    if (e && e.code) t.authorizationCode = e.code;
                                    else {
                                        let e = this.auth2.currentUser.get().getBasicProfile(),
                                            n = this.auth2.currentUser.get().getAuthResponse(!0),
                                            r = n.access_token,
                                            s = n.id_token;
                                        t.id = e.getId(), t.name = e.getName(), t.email = e.getEmail(), t.photoUrl = e.getImageUrl(), t.firstName = e.getGivenName(), t.lastName = e.getFamilyName(), t.authToken = r, t.idToken = s, t.response = n
                                    }
                                    n(t)
                                }, e => {
                                    r(e)
                                }).catch(e => {
                                    r(e)
                                })
                            })
                        }
                        signOut(e) {
                            return new Promise((t, n) => {
                                let r;
                                r = e ? this.auth2.disconnect() : this.auth2.signOut(), r.then(e => {
                                    e ? n(e) : t()
                                }).catch(e => {
                                    n(e)
                                })
                            })
                        }
                    }
                    return e.PROVIDER_ID = "GOOGLE", e
                })(),
                GC = (() => {
                    class e {
                        constructor(e) {
                            this.providers = new Map, this.autoLogin = !1, this._user = null, this._authState = new IC(1), this.initialized = !1, this._initState = new HC, e instanceof Promise ? e.then(e => {
                                this.initialize(e)
                            }) : this.initialize(e)
                        }
                        get authState() {
                            return this._authState.asObservable()
                        }
                        get initState() {
                            return this._initState.asObservable()
                        }
                        initialize(e) {
                            this.autoLogin = void 0 !== e.autoLogin && e.autoLogin;
                            const {
                                onError: t = console.error
                            } = e;
                            e.providers.forEach(e => {
                                this.providers.set(e.id, e.provider)
                            }), Promise.all(Array.from(this.providers.values()).map(e => e.initialize())).then(() => {
                                if (this.autoLogin) {
                                    const e = [];
                                    let t = !1;
                                    this.providers.forEach((n, r) => {
                                        let s = n.getLoginStatus();
                                        e.push(s), s.then(e => {
                                            e.provider = r, this._user = e, this._authState.next(e), t = !0
                                        }).catch(console.debug)
                                    }), Promise.all(e).catch(() => {
                                        t || (this._user = null, this._authState.next(null))
                                    })
                                }
                            }).catch(e => {
                                t(e)
                            }).finally(() => {
                                this.initialized = !0, this._initState.next(this.initialized), this._initState.complete()
                            })
                        }
                        refreshAuthToken(t) {
                            return new Promise((n, r) => {
                                if (this.initialized)
                                    if (t !== qC.PROVIDER_ID) r(e.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);
                                    else {
                                        const s = this.providers.get(t);
                                        s ? s.getLoginStatus({
                                            refreshToken: !0
                                        }).then(e => {
                                            e.provider = t, this._user = e, this._authState.next(e), n()
                                        }).catch(e => {
                                            r(e)
                                        }) : r(e.ERR_LOGIN_PROVIDER_NOT_FOUND)
                                    }
                                else r(e.ERR_NOT_INITIALIZED)
                            })
                        }
                        signIn(t, n) {
                            return new Promise((r, s) => {
                                if (this.initialized) {
                                    let i = this.providers.get(t);
                                    i ? i.signIn(n).then(e => {
                                        e.provider = t, r(e), this._user = e, this._authState.next(e)
                                    }).catch(e => {
                                        s(e)
                                    }) : s(e.ERR_LOGIN_PROVIDER_NOT_FOUND)
                                } else s(e.ERR_NOT_INITIALIZED)
                            })
                        }
                        signOut(t = !1) {
                            return new Promise((n, r) => {
                                if (this.initialized)
                                    if (this._user) {
                                        let s = this.providers.get(this._user.provider);
                                        s ? s.signOut(t).then(() => {
                                            n(), this._user = null, this._authState.next(null)
                                        }).catch(e => {
                                            r(e)
                                        }) : r(e.ERR_LOGIN_PROVIDER_NOT_FOUND)
                                    } else r(e.ERR_NOT_LOGGED_IN);
                                else r(e.ERR_NOT_INITIALIZED)
                            })
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr("SocialAuthServiceConfig"))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e.ERR_LOGIN_PROVIDER_NOT_FOUND = "Login provider not found", e.ERR_NOT_LOGGED_IN = "Not logged in", e.ERR_NOT_INITIALIZED = "Login providers not ready yet. Are there errors on your console?", e.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN = "Chosen login provider is not supported for refreshing a token", e
                })(),
                WC = (() => {
                    class e {
                        constructor(e) {
                            if (e) throw new Error("SocialLoginModule is already loaded. Import it in the AppModule only")
                        }
                        static initialize(t) {
                            return {
                                ngModule: e,
                                providers: [GC, {
                                    provide: "SocialAuthServiceConfig",
                                    useValue: t
                                }]
                            }
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(e, 12))
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: [GC],
                        imports: [
                            [Kh]
                        ]
                    }), e
                })();
            const KC = ["closeLoginModal"],
                ZC = ["closeSignupModal"];

            function QC(e, t) {
                if (1 & e && (jo(0, "div", 75), jo(1, "strong"), Aa(2), uu(3, "titlecase"), Bo(), Aa(4), jo(5, "button", 76), jo(6, "span", 27), Aa(7, "\xd7"), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit,
                        n = Ko();
                    Fa("alert alert-", e[0], " alert-dismissible fade show"), ni(2), Ta(" ", cu(3, 5, n.getAlertHead[e[0]]), ":"), ni(2), Ta(" ", e[1], " ")
                }
            }

            function YC(e, t) {
                1 & e && (jo(0, "div", 51), jo(1, "button", 77), Aa(2, "Login"), Bo(), jo(3, "button", 78), Aa(4, "SignUp"), Bo(), Bo())
            }

            function JC(e, t) {
                1 & e && (jo(0, "span", 99), Aa(1, "\u2022"), Bo())
            }

            function XC(e, t) {
                1 & e && (jo(0, "li"), jo(1, "p", 100), Aa(2, " No Notifications to display "), Bo(), Bo())
            }

            function eS(e, t) {
                if (1 & e && (jo(0, "li", 101), jo(1, "div", 86), jo(2, "div", 102), Vo(3, "img", 103), Bo(), jo(4, "div", 104), jo(5, "a", 105), jo(6, "strong", 106), Aa(7), Bo(), jo(8, "div"), Aa(9), Bo(), jo(10, "small", 107), Aa(11), uu(12, "date"), Bo(), Bo(), Bo(), Bo(), Bo()), 2 & e) {
                    const e = t.$implicit;
                    ni(5), Jo("routerLink", e.url), ni(2), Ta("Notification from ", e.actor, ""), ni(2), Ta(" ", e.description, " "), ni(2), Da(hu(12, 4, e.timestamp, "short"))
                }
            }

            function tS(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "ul", 79), jo(1, "li", 80), jo(2, "a", 81), Vo(3, "img", 82), Io(4, JC, 2, 0, "span", 83), Bo(), jo(5, "ul", 84), jo(6, "li", 85), jo(7, "div", 86), jo(8, "div", 87), jo(9, "span"), Aa(10, "Notifications"), Bo(), Bo(), Bo(), Bo(), Io(11, XC, 3, 0, "li", 88), Io(12, eS, 13, 7, "li", 89), jo(13, "li", 90), jo(14, "span", 91), Aa(15, "End of top 10 notifications"), Bo(), jo(16, "a", 92), Aa(17, "View All"), Bo(), Bo(), Bo(), Bo(), jo(18, "li"), jo(19, "div", 93), jo(20, "a", 94), Vo(21, "img", 95), Aa(22), Bo(), jo(23, "div", 96), jo(24, "a", 97), Aa(25, "My Account"), Bo(), jo(26, "button", 98), qo("click", function() {
                        return Rt(e), Ko().onLogout()
                    }), Aa(27, "Logout"), Bo(), Bo(), Bo(), Bo(), Bo()
                }
                if (2 & e) {
                    const e = Ko();
                    ni(4), No("ngIf", !e.notificationClicked && 0 != e.notifications.length), ni(7), No("ngIf", 0 == e.notifications.length), ni(1), No("ngForOf", e.notifications), ni(10), Ta(" Welcome ", e.username, " ")
                }
            }

            function nS(e, t) {
                1 & e && (jo(0, "span", 115), Aa(1, "Please enter a valid username"), Bo())
            }

            function rS(e, t) {
                1 & e && Vo(0, "span", 116)
            }

            function sS(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "form", 39, 108), qo("ngSubmit", function() {
                        Rt(e);
                        const t = Mo(1);
                        return Ko().onLogin(t)
                    }), jo(2, "div", 41), jo(3, "label", 109), Aa(4, "Username"), Bo(), jo(5, "input", 110, 111), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().loginUserName = t
                    }), Bo(), Io(7, nS, 2, 0, "span", 45), Bo(), jo(8, "div", 41), jo(9, "label", 112), Aa(10, "Password"), Bo(), jo(11, "input", 113), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().loginPassword = t
                    }), Bo(), Bo(), jo(12, "button", 114), Io(13, rS, 1, 0, "span", 59), Aa(14, " Login"), Bo(), Bo()
                }
                if (2 & e) {
                    const e = Mo(1),
                        t = Mo(6),
                        n = Ko();
                    ni(5), No("ngModel", n.loginUserName), ni(2), No("ngIf", !t.valid && t.touched), ni(4), No("ngModel", n.loginPassword), ni(1), No("disabled", !e.valid || n.isLoggingIn), ni(1), No("ngIf", n.isLoggingIn)
                }
            }

            function iS(e, t) {
                1 & e && (jo(0, "small", 129), Aa(1, "OTP Sent"), Bo())
            }

            function oS(e, t) {
                1 & e && (jo(0, "small", 130), Aa(1, "You have exceeded daily limit OTP limits. Try again after some time"), Bo())
            }

            function aS(e, t) {
                1 & e && Vo(0, "span", 116)
            }

            function lS(e, t) {
                if (1 & e) {
                    const e = Uo();
                    jo(0, "form", 39, 117), qo("ngSubmit", function() {
                        Rt(e);
                        const t = Mo(1);
                        return Ko().onForgot(t)
                    }), jo(2, "div", 41), jo(3, "label", 118), Aa(4, "Your Email"), Bo(), jo(5, "div", 51), jo(6, "div", 52), jo(7, "input", 119, 120), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().forgotEmail = t
                    }), Bo(), Io(9, iS, 2, 0, "small", 55), Io(10, oS, 2, 0, "small", 56), Bo(), jo(11, "div", 57), jo(12, "button", 121), qo("click", function() {
                        return Rt(e), Ko().onForgotOTPSend()
                    }), Io(13, aS, 1, 0, "span", 59), Aa(14, "Send OTP"), Bo(), Bo(), Bo(), Bo(), jo(15, "div", 41), jo(16, "label", 60), Aa(17, "Enter OTP"), Bo(), jo(18, "input", 122), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().forgotOTP = t
                    }), Bo(), Bo(), jo(19, "div", 41), jo(20, "label", 123), Aa(21, "Choose a password"), Bo(), jo(22, "input", 124, 125), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().forgotPassword1 = t
                    }), Bo(), Bo(), jo(24, "div", 65), jo(25, "label", 123), Aa(26, "Retype your password"), Bo(), jo(27, "input", 126, 127), qo("ngModelChange", function(t) {
                        return Rt(e), Ko().forgotPassword2 = t
                    }), Bo(), Bo(), jo(29, "button", 128), Aa(30, "Reset Password"), Bo(), Bo()
                }
                if (2 & e) {
                    const e = Mo(1),
                        t = Mo(8),
                        n = Ko();
                    ni(7), No("ngModel", n.forgotEmail), ni(2), No("ngIf", n.otpSent), ni(1), No("ngIf", n.otpNotSent), ni(2), No("disabled", n.otpSent || !t || !t.valid || n.isSendingOtp), ni(1), No("ngIf", n.isSendingOtp), ni(5), No("ngModel", n.forgotOTP), ni(4), No("ngModel", n.forgotPassword1), ni(5), No("ngModel", n.forgotPassword2), ni(2), No("disabled", !e.valid)
                }
            }

            function uS(e, t) {
                1 & e && (jo(0, "div", 131), Aa(1, "Invalid Credentials/Captcha"), Bo())
            }

            function cS(e, t) {
                1 & e && (jo(0, "span", 115), Aa(1, "Please enter a valid username"), Bo())
            }

            function hS(e, t) {
                1 & e && (jo(0, "small", 129), Aa(1, "OTP Sent"), Bo())
            }

            function dS(e, t) {
                1 & e && (jo(0, "small", 130), Aa(1, "You have exceeded daily limit OTP limits"), Bo())
            }

            function pS(e, t) {
                1 & e && Vo(0, "span", 116)
            }

            function fS(e, t) {
                1 & e && (jo(0, "div", 115), Aa(1, " Passwords do not match"), Bo())
            }

            function gS(e, t) {
                1 & e && (jo(0, "div", 133), Aa(1, "Passwords match"), Bo())
            }

            function mS(e, t) {
                if (1 & e && Io(0, gS, 2, 0, "div", 132), 2 & e) {
                    Ko();
                    const e = Mo(100),
                        t = Mo(105);
                    No("ngIf", e.value && 0 !== e.value.length && e.touched && e.value == t.value)
                }
            }
            const yS = function() {
                return {
                    standalone: !0
                }
            };

            function bS(e, t) {
                if (1 & e && Vo(0, "ngx-invisible-recaptcha", 134), 2 & e) {
                    const e = Ko();
                    No("siteKey", e.siteKey)("ngModel", e.recaptcha)("ngModelOptions", nu(3, yS))
                }
            }

            function vS(e, t) {
                1 & e && Vo(0, "span", 116)
            }
            let _S = (() => {
                    class e {
                        constructor(e, t, n, r, s, i, o, a) {
                            if (this.loginService = e, this.reCaptchaV3Service = t, this.scriptService = n, this.cdr = r, this.router = s, this.route = i, this.authService = o, this.platformId = a, this.getAlertHead = {
                                    success: "Success",
                                    danger: "Error"
                                }, this.siteKey = "6Lf8EMkaAAAAAMDraR1vekR1rPpYJQ3vmiRP57Di", this.action = "home", this.loginModalTitle = "Login via username", this.loginToggleText = "Forgot Password?", this.loginHidden = !1, this.isLoggingIn = !1, this.isSendingOtp = !1, this.otpSent = !1, this.otpNotSent = !1, this.alerts = [], this.notifications = [], this.notificationClicked = !1, this.isPlatformBrowser = !1, Zh(this.platformId)) {
                                this.isPlatformBrowser = !0;
                                let e = localStorage.getItem("token");
                                if (null !== e) {
                                    let t = JSON.parse(e);
                                    this.accessToken = t.token, this.username = t.username
                                }
                            }
                        }
                        closeLoginModalNow() {
                            setTimeout(() => {
                                this.closeLoginModal.nativeElement.click()
                            }, 0)
                        }
                        closeSignupModalNow() {
                            setTimeout(() => {
                                this.closeSignupModal.nativeElement.click()
                            }, 0)
                        }
                        ngOnInit() {
                            Zh(this.platformId) && (this.authService.authState.subscribe(e => {
                                null != e && (this.isLoggingIn = !0, this.googleLoginClicked ? this.loginService.validateGoogleLogin("captcha", e.idToken).subscribe(e => {
                                    if (this.googleLoginClicked = !1, e.success) {
                                        this.accessToken = e.authtoken, this.username = e.username;
                                        let t = {
                                            token: this.accessToken,
                                            username: this.username,
                                            is_staff: e.is_staff
                                        };
                                        this.closeLoginModalNow(), this.isLoggingIn = !1, localStorage.setItem("token", JSON.stringify(t)), this.setAlert("success", "Successfully Logged in")
                                    } else this.closeLoginModalNow(), this.setAlert("danger", e.response)
                                }) : this.loginService.validateGoogleSignup("captcha", e.idToken).subscribe(e => {
                                    this.isLoggingIn = !0, e.success ? (this.accessToken = e.authtoken, this.username = e.username, localStorage.setItem("token", JSON.stringify({
                                        token: this.accessToken,
                                        username: this.username,
                                        is_staff: e.is_staff
                                    })), this.closeLoginModalNow(), this.isLoggingIn = !1, this.setAlert("success", "Successfully signed up and Logged in")) : e.success || !("username" in e) && !("email" in e) || (this.setAlert("danger", "Username already exists. Try to login via Google"), this.closeSignupModalNow()), this.googleSignUpClicked = !1
                                }))
                            }), this.username && this.onNotificationClick())
                        }
                        setAlert(e, t) {
                            this.alerts = [], this.alerts.push([e, t])
                        }
                        onLogin(e) {
                            this.isLoggingIn = !0, this.scriptService.cleanup(), this.reCaptchaV3Service.execute(this.siteKey, this.action, t => {
                                this.loginService.getToken(this.loginUserName, this.loginPassword, t).subscribe(t => {
                                    this.accessToken = t.token, this.username = t.username, localStorage.setItem("token", JSON.stringify({
                                        token: this.accessToken,
                                        username: this.username,
                                        is_staff: t.is_staff
                                    })), this.closeLoginModalNow(), this.isLoggingIn = !1, this.setAlert("success", "Successfully Logged in"), e.reset()
                                }, e => {
                                    this.loginError = !0, this.isLoggingIn = !1
                                }), this.cdr.detectChanges()
                            })
                        }
                        onForgot(e) {
                            this.scriptService.cleanup(), this.reCaptchaV3Service.execute(this.siteKey, this.action, e => {
                                this.loginService.resetForgotPassword(e, this.forgotEmail, this.forgotPassword1, this.forgotOTP).subscribe(e => {
                                    e.success ? this.setAlert("success", "Your password has been successfully reset") : this.setAlert("danger", e.response), this.closeLoginModalNow()
                                }, e => {
                                    this.setAlert("danger", "Error resetting password"), this.closeLoginModalNow()
                                }), this.cdr.detectChanges()
                            })
                        }
                        onSignUp(e) {
                            this.isLoggingIn = !0, this.scriptService.cleanup();
                            let t = e.form.value;
                            this.reCaptchaV3Service.execute(this.siteKey, this.action, n => {
                                this.loginService.signUp(t.signupUserName, t.signupName, t.signupEmail, t.signupPassword1, t.signupOTP, n, t.signupPassword2).subscribe(t => {
                                    !t.success && "email" in t ? (this.closeSignupModalNow(), this.setAlert("danger", t.email[0])) : !t.success && "username" in t && "object" == typeof t.username ? (this.closeSignupModalNow(), this.setAlert("danger", t.username[0])) : (this.accessToken = t.token, this.username = t.username, localStorage.setItem("token", JSON.stringify({
                                        token: this.accessToken,
                                        username: this.username,
                                        is_staff: t.is_staff
                                    })), this.closeSignupModalNow(), this.setAlert("success", "Successfully created account")), this.isLoggingIn = !1, e.reset()
                                }, e => {
                                    this.signUpError = !0, this.isLoggingIn = !1, this.setAlert("danger", "Username/Email already exists or OTP was wrong"), this.closeSignupModalNow()
                                }), this.cdr.detectChanges()
                            })
                        }
                        onLogout() {
                            this.setAlert("success", "Successfully Logged out"), this.accessToken = void 0, this.username = void 0, localStorage.removeItem("token")
                        }
                        onOTPSend() {
                            this.isSendingOtp = !0, this.loginService.sendOtp("captcha", this.signUpEmail).subscribe(e => {
                                e.success ? this.otpSent = !0 : this.otpNotSent = !0, this.isSendingOtp = !1, console.log("OTP Sent")
                            })
                        }
                        onForgotOTPSend() {
                            this.isSendingOtp = !0, this.loginService.sendOtp("captcha", this.forgotEmail).subscribe(e => {
                                e.success ? this.otpSent = !0 : this.otpNotSent = !0, console.log("Forgot OTP Sent"), this.isSendingOtp = !1
                            })
                        }
                        onForgotBoxOpen() {
                            this.loginHidden ? (this.loginModalTitle = "Login via username", this.loginToggleText = "Forgot Password?", this.loginHidden = !this.loginHidden) : (this.loginModalTitle = "Recover forgot password", this.loginToggleText = "Login Using Credentials?", this.loginHidden = !this.loginHidden)
                        }
                        onSearch(e) {
                            this.router.navigate(["/search"], {
                                relativeTo: this.route,
                                queryParams: {
                                    query: this.searchQuery
                                }
                            }), e.reset()
                        }
                        onNotificationClick() {
                            this.loginService.getNotifications(this.accessToken, 1).subscribe(e => {
                                this.notifications = e
                            })
                        }
                        signInWithGoogle() {
                            this.googleLoginClicked = !0, this.authService.signIn(qC.PROVIDER_ID)
                        }
                        signupWithGoogle() {
                            this.googleSignUpClicked = !0, this.authService.signIn(qC.PROVIDER_ID)
                        }
                        signOut() {
                            this.authService.signOut()
                        }
                        onNotificationClicked() {
                            this.notificationClicked = !0
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(Ro(oy), Ro(qb), Ro(Ub), Ro(Dl), Ro(im), Ro(Bf), Ro(GC), Ro(Vu))
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-header"]
                        ],
                        viewQuery: function(e, t) {
                            if (1 & e && (Du(KC, 1), Du(ZC, 1)), 2 & e) {
                                let e;
                                Au(e = Tu()) && (t.closeLoginModal = e.first), Au(e = Tu()) && (t.closeSignupModal = e.first)
                            }
                        },
                        decls: 117,
                        vars: 21,
                        consts: [
                            ["role", "alert", 3, "class", 4, "ngFor", "ngForOf"],
                            [1, "navbar", "navbar-expand-lg", "navbar-dark", "bg-dark"],
                            ["routerLink", "/", 1, "navbar-brand"],
                            ["height", "39px", "width", "39px", "src", "../../../assets/img/logo.png", "alt", " ", 1, "brandLogo"],
                            ["type", "button", "data-toggle", "collapse", "data-target", "#navbarSupportedContent", "aria-controls", "navbarSupportedContent", "aria-expanded", "false", "aria-label", "Toggle navigation", 1, "navbar-toggler"],
                            [1, "navbar-toggler-icon"],
                            ["id", "navbarSupportedContent", 1, "collapse", "navbar-collapse"],
                            [1, "navbar-nav", "mr-auto"],
                            [1, "nav-item", "font-weight-bold"],
                            ["routerLink", "/", 1, "nav-link"],
                            ["routerLink", "/videos", 1, "nav-link"],
                            ["routerLink", "/blog", 1, "nav-link"],
                            ["routerLink", "/contact", 1, "nav-link"],
                            [1, "form-inline", "my-2", "my-lg-0", "mr-3", 3, "ngSubmit"],
                            ["searchForm", "ngForm"],
                            ["type", "text", "placeholder", "Search", "aria-label", "Search", "name", "query", 1, "form-control", "mr-sm-2", 3, "ngModel", "ngModelChange"],
                            ["type", "submit", 1, "btn", "btn-danger", "my-2", "my-sm-0"],
                            ["class", "mx-0", 4, "ngIf", "ngIfElse"],
                            ["elseBlock", ""],
                            ["id", "loginModal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "loginModal", "aria-hidden", "true", 1, "modal", "fade"],
                            ["role", "document", 1, "modal-dialog"],
                            [1, "modal-content"],
                            [1, "modal-header"],
                            ["height", "42.75px", "width", "25%", "src", "../../../assets/img/googleLogin.png", "alt", "Login with Google", 1, "googleAuth", "mx-2", 3, "click"],
                            [1, "or", "mx-3"],
                            ["id", "loginModalTitle", 1, "modal-title"],
                            ["type", "button", "data-dismiss", "modal", "aria-label", "Close", 1, "close"],
                            ["aria-hidden", "true"],
                            [1, "modal-body"],
                            ["method", "post", 3, "ngSubmit", 4, "ngIf"],
                            ["class", "loginError", 4, "ngIf"],
                            [1, "forgot"],
                            [3, "click"],
                            [1, "modal-footer"],
                            ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary", 3, "disabled"],
                            ["closeLoginModal", ""],
                            ["id", "signupModal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "signupModal", "aria-hidden", "true", 1, "modal", "fade"],
                            ["height", "42.75px", "width", "25%", "src", "../../../assets/img/googleSignUp.png", "alt", "Signup with Google", 1, "googleAuth", "mx-2", 3, "click"],
                            ["id", "signupModal", 1, "modal-title"],
                            ["method", "post", 3, "ngSubmit"],
                            ["signupform", "ngForm"],
                            [1, "form-group"],
                            ["for", "uname"],
                            ["type", "text", "id", "signupUserName", "placeholder", "Enter your username", "name", "signupUserName", "pattern", "[a-zA-Z0-9_ ]*", "maxlength", "10", "minlength", "4", "required", "", "ngModel", "", 1, "form-control"],
                            ["signusername", "ngModel"],
                            ["class", "text-danger ml-2", 4, "ngIf"],
                            ["id", "unamehelp", 1, "form-text", "text-muted", "px-1"],
                            ["for", "signupName"],
                            ["type", "text", "id", "signupName", "name", "signupName", "placeholder", "Enter your Name", "maxlength", "30", "ngModel", "", 1, "form-control"],
                            ["signupname", "ngModel"],
                            ["for", "email"],
                            [1, "mx-0"],
                            [1, "col-md-8", "px-0"],
                            ["type", "email", "placeholder", "Enter your Email", "id", "signupEmail", "name", "signupEmail", "required", "", "email", "", "maxlength", "40", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["signupemail", "ngModel"],
                            ["class", "form-text text-success mx-2", 4, "ngIf"],
                            ["class", "form-text text-danger mx-2", 4, "ngIf"],
                            [1, "col-md-4", "my-1", "px-0"],
                            ["type", "button", "id", "otpbtn", 1, "btn", "btn-danger", "btn-sm", "mt-2", 3, "disabled", "click"],
                            ["class", "spinner-border spinner-border-sm", "role", "status", "aria-hidden", "true", 4, "ngIf"],
                            ["for", "otp"],
                            ["type", "number", "id", "signupOTP", "placeholder", "Enter OTP", "name", "signupOTP", "required", "", "ngModel", "", 1, "form-control"],
                            ["for", "signupPassword1"],
                            ["type", "password", "id", "signupPassword1", "name", "signupPassword1", "placeholder", "Choose a password", "minlength", "4", "maxlength", "20", "ngModel", "", 1, "form-control"],
                            ["signuppassword1", "ngModel"],
                            [1, "form-group", "mb-0"],
                            ["for", "signupPassword2"],
                            ["type", "password", "id", "signupPassword2", "name", "signupPassword2", "placeholder", "Retype your password", "minlength", "4", "maxlength", "20", "ngModel", "", 1, "form-control"],
                            ["signuppassword2", "ngModel"],
                            ["class", "text-danger ml-2", 4, "ngIf", "ngIfElse"],
                            ["elseBlock2", ""],
                            [3, "siteKey", "ngModel", "ngModelOptions", 4, "ngIf"],
                            ["type", "submit", 1, "btn", "btn-danger", "mt-4", 3, "disabled"],
                            ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"],
                            ["closeSignupModal", ""],
                            ["role", "alert"],
                            ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close"],
                            ["type", "button", "data-toggle", "modal", "data-target", "#loginModal", 1, "btn", "btn-danger", "mr-2"],
                            ["type", "button", "data-toggle", "modal", "data-target", "#signupModal", 1, "btn", "btn-danger"],
                            [1, "navbar-nav", "navbar-default"],
                            [1, "nav-item", "dropdown"],
                            ["href", "#", "id", "navbarDropdown", "role", "button", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link", "text-light"],
                            ["width", "25%", "src", "../../../assets/img/notification.png", "alt", "", 1, "notificationImg"],
                            ["class", "badge notification-bell badge-danger", 4, "ngIf"],
                            [1, "dropdown-menu", "dropdown-menu-notify"],
                            [1, "head-notify", "text-light", "bg-dark"],
                            [1, "row"],
                            [1, "col-lg-12", "col-sm-12", "col-12"],
                            [4, "ngIf"],
                            ["class", "notification-box-notify", 4, "ngFor", "ngForOf"],
                            [1, "footer-notify", "bg-dark", "text-center"],
                            ["href", "#", 1, "text-light", "mx-2"],
                            ["routerLink", "/notifications", 1, "text-light"],
                            [1, "dropdown"],
                            ["href", "#", "role", "button", "id", "dropdownMenuLink", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link", "dropdown-toggle"],
                            ["height", "39px", "width", "39px", "src", "../../../assets/img/logo.png", "alt", "", 1, "brandLogo"],
                            ["aria-labelledby", "dropdownMenuLink", 1, "dropdown-menu"],
                            ["routerLink", "/profile/myaccount", 1, "dropdown-item"],
                            ["type", "submit", 1, "dropdown-item", 3, "click"],
                            [1, "badge", "notification-bell", "badge-danger"],
                            [1, "my-3", "mx-3"],
                            [1, "notification-box-notify"],
                            [1, "col-lg-3", "col-sm-3", "col-3", "text-center", "px-0"],
                            ["width", "25", "src", "../../../assets/img/notification.png", 1, "w-50"],
                            [1, "col-lg-8", "col-sm-8", "col-8", "px-0"],
                            ["target", "_blank", 1, "pl-0", 3, "routerLink"],
                            [1, "text-info"],
                            [1, "text-danger"],
                            ["loginForm", "ngForm"],
                            ["for", "username"],
                            ["type", "text", "id", "username", "placeholder", "Enter your username", "name", "username", "pattern", "[a-zA-Z0-9 ]*", "maxlength", "10", "minlength", "2", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["loginusername", "ngModel"],
                            ["for", "loginpassword"],
                            ["type", "password", "id", "loginpassword", "placeholder", "Enter your password", "name", "loginpassword", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["type", "submit", "id", "loginsubmit", 1, "btn", "btn-danger", "mt-2", 3, "disabled"],
                            [1, "text-danger", "ml-2"],
                            ["role", "status", "aria-hidden", "true", 1, "spinner-border", "spinner-border-sm"],
                            ["forgotForm", "ngForm"],
                            ["for", "forgotEmail"],
                            ["type", "email", "placeholder", "Enter your Email", "id", "forgotEmail", "name", "forgotEmail", "required", "", "email", "", "maxlength", "40", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["forgotemail", "ngModel"],
                            ["type", "button", 1, "btn", "btn-danger", "btn-sm", "mt-2", 3, "disabled", "click"],
                            ["type", "number", "id", "forgotOTP", "placeholder", "Enter OTP", "name", "forgotOTP", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["for", "forgotPassword1"],
                            ["type", "password", "id", "forgotPassword1", "name", "forgotPassword1", "placeholder", "Choose a password", "minlength", "4", "maxlength", "20", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["forgotpassword1", "ngModel"],
                            ["type", "password", "id", "forgotPassword2", "name", "forgotPassword2", "placeholder", "Retype your password", "minlength", "4", "maxlength", "20", 1, "form-control", 3, "ngModel", "ngModelChange"],
                            ["forgotpassword2", "ngModel"],
                            ["type", "submit", 1, "btn", "btn-danger", "mt-2", 3, "disabled"],
                            [1, "form-text", "text-success", "mx-2"],
                            [1, "form-text", "text-danger", "mx-2"],
                            [1, "loginError"],
                            ["class", "text-success ml-2", 4, "ngIf"],
                            [1, "text-success", "ml-2"],
                            [3, "siteKey", "ngModel", "ngModelOptions"]
                        ],
                        template: function(e, t) {
                            if (1 & e) {
                                const e = Uo();
                                Io(0, QC, 8, 7, "div", 0), jo(1, "nav", 1), jo(2, "a", 2), Vo(3, "img", 3), Bo(), jo(4, "button", 4), Vo(5, "span", 5), Bo(), jo(6, "div", 6), jo(7, "ul", 7), jo(8, "li", 8), jo(9, "a", 9), Aa(10, "Home"), Bo(), Bo(), jo(11, "li", 8), jo(12, "a", 10), Aa(13, "Videos"), Bo(), Bo(), jo(14, "li", 8), jo(15, "a", 11), Aa(16, "Blog"), Bo(), Bo(), jo(17, "li", 8), jo(18, "a", 12), Aa(19, "Contact Me"), Bo(), Bo(), Bo(), jo(20, "form", 13, 14), qo("ngSubmit", function() {
                                    Rt(e);
                                    const n = Mo(21);
                                    return t.onSearch(n)
                                }), jo(22, "input", 15), qo("ngModelChange", function(e) {
                                    return t.searchQuery = e
                                }), Bo(), jo(23, "button", 16), Aa(24, "Search"), Bo(), Bo(), Io(25, YC, 5, 0, "div", 17), Io(26, tS, 28, 4, "ng-template", null, 18, Iu), Bo(), Bo(), jo(28, "div", 19), jo(29, "div", 20), jo(30, "div", 21), jo(31, "div", 22), jo(32, "img", 23), qo("click", function() {
                                    return t.signInWithGoogle()
                                }), Bo(), jo(33, "div", 24), Aa(34, " or "), Bo(), jo(35, "h5", 25), Aa(36), Bo(), jo(37, "button", 26), jo(38, "span", 27), Aa(39, "\xd7"), Bo(), Bo(), Bo(), jo(40, "div", 28), Io(41, sS, 15, 5, "form", 29), Io(42, lS, 31, 9, "form", 29), Io(43, uS, 2, 0, "div", 30), jo(44, "div", 31), jo(45, "span", 32), qo("click", function() {
                                    return t.onForgotBoxOpen()
                                }), Aa(46), Bo(), Bo(), Bo(), jo(47, "div", 33), jo(48, "button", 34, 35), Aa(50, "Close"), Bo(), Bo(), Bo(), Bo(), Bo(), jo(51, "div", 36), jo(52, "div", 20), jo(53, "div", 21), jo(54, "div", 22), jo(55, "img", 37), qo("click", function() {
                                    return t.signupWithGoogle()
                                }), Bo(), jo(56, "div", 24), Aa(57, " or "), Bo(), jo(58, "h5", 38), Aa(59, "SignUp for an account"), Bo(), jo(60, "button", 26), jo(61, "span", 27), Aa(62, "\xd7"), Bo(), Bo(), Bo(), jo(63, "div", 28), jo(64, "form", 39, 40), qo("ngSubmit", function() {
                                    Rt(e);
                                    const n = Mo(65);
                                    return t.onSignUp(n)
                                }), jo(66, "div", 41), jo(67, "label", 42), Aa(68, "Username"), Bo(), Vo(69, "input", 43, 44), Io(71, cS, 2, 0, "span", 45), jo(72, "small", 46), Aa(73, " Your unique username must 4 - 10 characters (only lowecase letters, numbers & underscores allowed) with no spaces "), Bo(), Bo(), jo(74, "div", 41), jo(75, "label", 47), Aa(76, "Name"), Bo(), Vo(77, "input", 48, 49), Bo(), jo(79, "div", 41), jo(80, "label", 50), Aa(81, "Your Email"), Bo(), jo(82, "div", 51), jo(83, "div", 52), jo(84, "input", 53, 54), qo("ngModelChange", function(e) {
                                    return t.signUpEmail = e
                                }), Bo(), Io(86, hS, 2, 0, "small", 55), Io(87, dS, 2, 0, "small", 56), Bo(), jo(88, "div", 57), jo(89, "button", 58), qo("click", function() {
                                    return t.onOTPSend()
                                }), Io(90, pS, 1, 0, "span", 59), Aa(91, " Send OTP"), Bo(), Bo(), Bo(), Bo(), jo(92, "div", 41), jo(93, "label", 60), Aa(94, "Enter OTP"), Bo(), Vo(95, "input", 61), Bo(), jo(96, "div", 41), jo(97, "label", 62), Aa(98, "Choose a password (At least 4 characters)"), Bo(), Vo(99, "input", 63, 64), Bo(), jo(101, "div", 65), jo(102, "label", 66), Aa(103, "Retype your password"), Bo(), Vo(104, "input", 67, 68), Bo(), Io(106, fS, 2, 0, "div", 69), Io(107, mS, 1, 1, "ng-template", null, 70, Iu), Io(109, bS, 1, 4, "ngx-invisible-recaptcha", 71), jo(110, "button", 72), Io(111, vS, 1, 0, "span", 59), Aa(112, " SignUp"), Bo(), Bo(), Bo(), jo(113, "div", 33), jo(114, "button", 73, 74), Aa(116, "Close"), Bo(), Bo(), Bo(), Bo(), Bo()
                            }
                            if (2 & e) {
                                const e = Mo(27),
                                    n = Mo(65),
                                    r = Mo(70),
                                    s = Mo(85),
                                    i = Mo(100),
                                    o = Mo(105),
                                    a = Mo(108);
                                No("ngForOf", t.alerts), ni(22), No("ngModel", t.searchQuery), ni(3), No("ngIf", !t.accessToken)("ngIfElse", e), ni(11), Da(t.loginModalTitle), ni(5), No("ngIf", !t.loginHidden), ni(1), No("ngIf", t.loginHidden), ni(1), No("ngIf", t.loginError), ni(3), Da(t.loginToggleText), ni(2), No("disabled", t.isLoggingIn), ni(23), No("ngIf", !r.valid && r.touched), ni(13), No("ngModel", t.signUpEmail), ni(2), No("ngIf", t.otpSent), ni(1), No("ngIf", t.otpNotSent), ni(2), No("disabled", t.otpSent || !s || !s.valid || t.isSendingOtp || t.otpNotSent), ni(1), No("ngIf", t.isSendingOtp), ni(16), No("ngIf", !(i.value == o.value))("ngIfElse", a), ni(3), No("ngIf", t.isPlatformBrowser), ni(1), No("disabled", !n.valid || !(i.value == o.value) || t.isLoggingIn || !t.otpSent), ni(1), No("ngIf", t.isLoggingIn)
                            }
                        },
                        directives: [Mh, om, mb, qy, db, xy, zy, gb, Nh, Lb, Rb, Ib, Tb, Fb, bb, zb],
                        pipes: [Gh, Wh],
                        styles: ['.brandLogo[_ngcontent-%COMP%]{max-width:39px;margin:0 13px}li[_ngcontent-%COMP%]   a.nav-link[_ngcontent-%COMP%]{color:#fff}.notificationImg[_ngcontent-%COMP%]{width:30px;filter:invert(1)}.notification-bell[_ngcontent-%COMP%]{position:absolute;right:0}.dropdown-toggle[_ngcontent-%COMP%]{font-weight:700}.dropdown-menu-notify[_ngcontent-%COMP%]{overflow-y:scroll;overflow-x:hidden;max-height:400px;top:60px;right:-1px;left:unset;width:460px;box-shadow:0 5px 7px -1px #c1c1c1;padding:0}ul[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{background:transparent}.dropdown-menu-notify[_ngcontent-%COMP%]:before{content:"";position:absolute;top:-20px;right:12px;border:10px solid transparent;border-bottom-color:#fff}.head-notify[_ngcontent-%COMP%]{padding:5px 15px;border-radius:3px 3px 0 0}.footer-notify[_ngcontent-%COMP%]{padding:5px 15px;border-radius:0 0 3px 3px}.notification-box-notify[_ngcontent-%COMP%]{padding:10px 0}.bg-gray-notify[_ngcontent-%COMP%]{background-color:#eee}@media (max-width:640px){.dropdown-menu-notify[_ngcontent-%COMP%]{top:50px;left:-16px;width:290px}.nav-notify[_ngcontent-%COMP%]{display:block}.nav-notify[_ngcontent-%COMP%]   .nav-item-notify[_ngcontent-%COMP%], .nav-notify[_ngcontent-%COMP%]   .nav-item-notify[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding-left:0}.message-notify[_ngcontent-%COMP%]{font-size:13px}}.loginError[_ngcontent-%COMP%]{color:red;padding:3px 2px}div.alert[_ngcontent-%COMP%]{margin:0}input.ng-touched.ng-invalid[_ngcontent-%COMP%], textarea.ng-touched.ng-invalid[_ngcontent-%COMP%]{border-color:red}.forgot[_ngcontent-%COMP%]{font-size:14px;color:#000;text-align:left;text-decoration:underline;cursor:pointer;padding:16px 0}.googleAuth[_ngcontent-%COMP%]{width:46%;cursor:pointer;border:1px solid #000;border-radius:3px;background:#60a3dd;margin-top:1px}.or[_ngcontent-%COMP%]{font-weight:500;font-size:19px}.modal-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;flex-direction:column}.modal-header[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{position:absolute;top:15px;right:20px}.navbar-brand[_ngcontent-%COMP%]{margin:0;padding:0}']
                    }), e
                })(),
                wS = (() => {
                    class e {
                        constructor() {}
                        ngOnInit() {}
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-footer"]
                        ],
                        decls: 3,
                        vars: 0,
                        consts: [
                            [1, "container-fluid", "bg-dark", "my-0", "py-3", "text-light"],
                            [1, "mb-0", "text-center"]
                        ],
                        template: function(e, t) {
                            1 & e && (jo(0, "footer", 0), jo(1, "p", 1), Aa(2, "Copyright \xa9 2020-2021  .com"), Bo(), Bo())
                        },
                        styles: ["footer[_ngcontent-%COMP%]{color:#fff}"]
                    }), e
                })(),
                CS = (() => {
                    class e {
                        constructor() {}
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275cmp = He({
                        type: e,
                        selectors: [
                            ["app-root"]
                        ],
                        decls: 6,
                        vars: 8,
                        consts: [
                            [3, "color", "includeSpinner", "height", "ref"],
                            [1, "content"]
                        ],
                        template: function(e, t) {
                            1 & e && (Vo(0, "ngx-loading-bar", 0), Vo(1, "ngx-loading-bar", 0), Vo(2, "app-header"), jo(3, "div", 1), Vo(4, "router-outlet"), Bo(), Vo(5, "app-footer")), 2 & e && (No("color", "red")("includeSpinner", !1)("height", "3px")("ref", "router"), ni(1), No("color", "red")("includeSpinner", !1)("height", "3px")("ref", "http"))
                        },
                        directives: [UC, _S, lm, wS],
                        styles: [".content[_ngcontent-%COMP%]{min-height:calc(100vh - 56px - 80px)}"]
                    }), e
                })();
            class SS {}
            const xS = "*";

            function ES(e, t = null) {
                return {
                    type: 2,
                    steps: e,
                    options: t
                }
            }

            function kS(e) {
                return {
                    type: 6,
                    styles: e,
                    offset: null
                }
            }

            function AS(e) {
                Promise.resolve(null).then(e)
            }
            class DS {
                constructor(e = 0, t = 0) {
                    this._onDoneFns = [], this._onStartFns = [], this._onDestroyFns = [], this._started = !1, this._destroyed = !1, this._finished = !1, this._position = 0, this.parentPlayer = null, this.totalTime = e + t
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(e => e()), this._onDoneFns = [])
                }
                onStart(e) {
                    this._onStartFns.push(e)
                }
                onDone(e) {
                    this._onDoneFns.push(e)
                }
                onDestroy(e) {
                    this._onDestroyFns.push(e)
                }
                hasStarted() {
                    return this._started
                }
                init() {}
                play() {
                    this.hasStarted() || (this._onStart(), this.triggerMicrotask()), this._started = !0
                }
                triggerMicrotask() {
                    AS(() => this._onFinish())
                }
                _onStart() {
                    this._onStartFns.forEach(e => e()), this._onStartFns = []
                }
                pause() {}
                restart() {}
                finish() {
                    this._onFinish()
                }
                destroy() {
                    this._destroyed || (this._destroyed = !0, this.hasStarted() || this._onStart(), this.finish(), this._onDestroyFns.forEach(e => e()), this._onDestroyFns = [])
                }
                reset() {}
                setPosition(e) {
                    this._position = this.totalTime ? e * this.totalTime : 1
                }
                getPosition() {
                    return this.totalTime ? this._position / this.totalTime : 1
                }
                triggerCallback(e) {
                    const t = "start" == e ? this._onStartFns : this._onDoneFns;
                    t.forEach(e => e()), t.length = 0
                }
            }
            class TS {
                constructor(e) {
                    this._onDoneFns = [], this._onStartFns = [], this._finished = !1, this._started = !1, this._destroyed = !1, this._onDestroyFns = [], this.parentPlayer = null, this.totalTime = 0, this.players = e;
                    let t = 0,
                        n = 0,
                        r = 0;
                    const s = this.players.length;
                    0 == s ? AS(() => this._onFinish()) : this.players.forEach(e => {
                        e.onDone(() => {
                            ++t == s && this._onFinish()
                        }), e.onDestroy(() => {
                            ++n == s && this._onDestroy()
                        }), e.onStart(() => {
                            ++r == s && this._onStart()
                        })
                    }), this.totalTime = this.players.reduce((e, t) => Math.max(e, t.totalTime), 0)
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(e => e()), this._onDoneFns = [])
                }
                init() {
                    this.players.forEach(e => e.init())
                }
                onStart(e) {
                    this._onStartFns.push(e)
                }
                _onStart() {
                    this.hasStarted() || (this._started = !0, this._onStartFns.forEach(e => e()), this._onStartFns = [])
                }
                onDone(e) {
                    this._onDoneFns.push(e)
                }
                onDestroy(e) {
                    this._onDestroyFns.push(e)
                }
                hasStarted() {
                    return this._started
                }
                play() {
                    this.parentPlayer || this.init(), this._onStart(), this.players.forEach(e => e.play())
                }
                pause() {
                    this.players.forEach(e => e.pause())
                }
                restart() {
                    this.players.forEach(e => e.restart())
                }
                finish() {
                    this._onFinish(), this.players.forEach(e => e.finish())
                }
                destroy() {
                    this._onDestroy()
                }
                _onDestroy() {
                    this._destroyed || (this._destroyed = !0, this._onFinish(), this.players.forEach(e => e.destroy()), this._onDestroyFns.forEach(e => e()), this._onDestroyFns = [])
                }
                reset() {
                    this.players.forEach(e => e.reset()), this._destroyed = !1, this._finished = !1, this._started = !1
                }
                setPosition(e) {
                    const t = e * this.totalTime;
                    this.players.forEach(e => {
                        const n = e.totalTime ? Math.min(1, t / e.totalTime) : 1;
                        e.setPosition(n)
                    })
                }
                getPosition() {
                    const e = this.players.reduce((e, t) => null === e || t.totalTime > e.totalTime ? t : e, null);
                    return null != e ? e.getPosition() : 0
                }
                beforeDestroy() {
                    this.players.forEach(e => {
                        e.beforeDestroy && e.beforeDestroy()
                    })
                }
                triggerCallback(e) {
                    const t = "start" == e ? this._onStartFns : this._onDoneFns;
                    t.forEach(e => e()), t.length = 0
                }
            }

            function OS() {
                return "undefined" != typeof process && "[object process]" === {}.toString.call(process)
            }

            function FS(e) {
                switch (e.length) {
                    case 0:
                        return new DS;
                    case 1:
                        return e[0];
                    default:
                        return new TS(e)
                }
            }

            function PS(e, t, n, r, s = {}, i = {}) {
                const o = [],
                    a = [];
                let l = -1,
                    u = null;
                if (r.forEach(e => {
                        const n = e.offset,
                            r = n == l,
                            c = r && u || {};
                        Object.keys(e).forEach(n => {
                            let r = n,
                                a = e[n];
                            if ("offset" !== n) switch (r = t.normalizePropertyName(r, o), a) {
                                case "!":
                                    a = s[n];
                                    break;
                                case xS:
                                    a = i[n];
                                    break;
                                default:
                                    a = t.normalizeStyleValue(n, r, a, o)
                            }
                            c[r] = a
                        }), r || a.push(c), u = c, l = n
                    }), o.length) {
                    const e = "\n - ";
                    throw new Error(`Unable to animate due to the following errors:${e}${o.join(e)}`)
                }
                return a
            }

            function IS(e, t, n, r) {
                switch (t) {
                    case "start":
                        e.onStart(() => r(n && MS(n, "start", e)));
                        break;
                    case "done":
                        e.onDone(() => r(n && MS(n, "done", e)));
                        break;
                    case "destroy":
                        e.onDestroy(() => r(n && MS(n, "destroy", e)))
                }
            }

            function MS(e, t, n) {
                const r = n.totalTime,
                    s = RS(e.element, e.triggerName, e.fromState, e.toState, t || e.phaseName, null == r ? e.totalTime : r, !!n.disabled),
                    i = e._data;
                return null != i && (s._data = i), s
            }

            function RS(e, t, n, r, s = "", i = 0, o) {
                return {
                    element: e,
                    triggerName: t,
                    fromState: n,
                    toState: r,
                    phaseName: s,
                    totalTime: i,
                    disabled: !!o
                }
            }

            function NS(e, t, n) {
                let r;
                return e instanceof Map ? (r = e.get(t), r || e.set(t, r = n)) : (r = e[t], r || (r = e[t] = n)), r
            }

            function LS(e) {
                const t = e.indexOf(":");
                return [e.substring(1, t), e.substr(t + 1)]
            }
            let jS = (e, t) => !1,
                BS = (e, t) => !1,
                VS = (e, t, n) => [];
            const US = OS();
            (US || "undefined" != typeof Element) && (jS = (e, t) => e.contains(t), BS = (() => {
                if (US || Element.prototype.matches) return (e, t) => e.matches(t); {
                    const e = Element.prototype,
                        t = e.matchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector || e.webkitMatchesSelector;
                    return t ? (e, n) => t.apply(e, [n]) : BS
                }
            })(), VS = (e, t, n) => {
                let r = [];
                if (n) {
                    const n = e.querySelectorAll(t);
                    for (let e = 0; e < n.length; e++) r.push(n[e])
                } else {
                    const n = e.querySelector(t);
                    n && r.push(n)
                }
                return r
            });
            let $S = null,
                HS = !1;

            function zS(e) {
                $S || ($S = ("undefined" != typeof document ? document.body : null) || {}, HS = !!$S.style && "WebkitAppearance" in $S.style);
                let t = !0;
                return $S.style && ! function(e) {
                    return "ebkit" == e.substring(1, 6)
                }(e) && (t = e in $S.style, !t && HS) && (t = "Webkit" + e.charAt(0).toUpperCase() + e.substr(1) in $S.style), t
            }
            const qS = BS,
                GS = jS,
                WS = VS;

            function KS(e) {
                const t = {};
                return Object.keys(e).forEach(n => {
                    const r = n.replace(/([a-z])([A-Z])/g, "$1-$2");
                    t[r] = e[n]
                }), t
            }
            let ZS = (() => {
                    class e {
                        validateStyleProperty(e) {
                            return zS(e)
                        }
                        matchesElement(e, t) {
                            return qS(e, t)
                        }
                        containsElement(e, t) {
                            return GS(e, t)
                        }
                        query(e, t, n) {
                            return WS(e, t, n)
                        }
                        computeStyle(e, t, n) {
                            return n || ""
                        }
                        animate(e, t, n, r, s, i = [], o) {
                            return new DS(n, r)
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                QS = (() => {
                    class e {}
                    return e.NOOP = new ZS, e
                })();
            const YS = "ng-enter",
                JS = "ng-leave",
                XS = "ng-trigger",
                ex = ".ng-trigger",
                tx = "ng-animating",
                nx = ".ng-animating";

            function rx(e) {
                if ("number" == typeof e) return e;
                const t = e.match(/^(-?[\.\d]+)(m?s)/);
                return !t || t.length < 2 ? 0 : sx(parseFloat(t[1]), t[2])
            }

            function sx(e, t) {
                switch (t) {
                    case "s":
                        return 1e3 * e;
                    default:
                        return e
                }
            }

            function ix(e, t, n) {
                return e.hasOwnProperty("duration") ? e : function(e, t, n) {
                    let r, s = 0,
                        i = "";
                    if ("string" == typeof e) {
                        const n = e.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                        if (null === n) return t.push(`The provided timing value "${e}" is invalid.`), {
                            duration: 0,
                            delay: 0,
                            easing: ""
                        };
                        r = sx(parseFloat(n[1]), n[2]);
                        const o = n[3];
                        null != o && (s = sx(parseFloat(o), n[4]));
                        const a = n[5];
                        a && (i = a)
                    } else r = e;
                    if (!n) {
                        let n = !1,
                            i = t.length;
                        r < 0 && (t.push("Duration values below 0 are not allowed for this animation step."), n = !0), s < 0 && (t.push("Delay values below 0 are not allowed for this animation step."), n = !0), n && t.splice(i, 0, `The provided timing value "${e}" is invalid.`)
                    }
                    return {
                        duration: r,
                        delay: s,
                        easing: i
                    }
                }(e, t, n)
            }

            function ox(e, t = {}) {
                return Object.keys(e).forEach(n => {
                    t[n] = e[n]
                }), t
            }

            function ax(e, t, n = {}) {
                if (t)
                    for (let r in e) n[r] = e[r];
                else ox(e, n);
                return n
            }

            function lx(e, t, n) {
                return n ? t + ":" + n + ";" : ""
            }

            function ux(e) {
                let t = "";
                for (let n = 0; n < e.style.length; n++) {
                    const r = e.style.item(n);
                    t += lx(0, r, e.style.getPropertyValue(r))
                }
                for (const n in e.style) e.style.hasOwnProperty(n) && !n.startsWith("_") && (t += lx(0, n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), e.style[n]));
                e.setAttribute("style", t)
            }

            function cx(e, t, n) {
                e.style && (Object.keys(t).forEach(r => {
                    const s = bx(r);
                    n && !n.hasOwnProperty(r) && (n[r] = e.style[s]), e.style[s] = t[r]
                }), OS() && ux(e))
            }

            function hx(e, t) {
                e.style && (Object.keys(t).forEach(t => {
                    const n = bx(t);
                    e.style[n] = ""
                }), OS() && ux(e))
            }

            function dx(e) {
                return Array.isArray(e) ? 1 == e.length ? e[0] : ES(e) : e
            }
            const px = new RegExp("{{\\s*(.+?)\\s*}}", "g");

            function fx(e) {
                let t = [];
                if ("string" == typeof e) {
                    let n;
                    for (; n = px.exec(e);) t.push(n[1]);
                    px.lastIndex = 0
                }
                return t
            }

            function gx(e, t, n) {
                const r = e.toString(),
                    s = r.replace(px, (e, r) => {
                        let s = t[r];
                        return t.hasOwnProperty(r) || (n.push(`Please provide a value for the animation param ${r}`), s = ""), s.toString()
                    });
                return s == r ? e : s
            }

            function mx(e) {
                const t = [];
                let n = e.next();
                for (; !n.done;) t.push(n.value), n = e.next();
                return t
            }
            const yx = /-+([a-z0-9])/g;

            function bx(e) {
                return e.replace(yx, (...e) => e[1].toUpperCase())
            }

            function vx(e, t) {
                return 0 === e || 0 === t
            }

            function _x(e, t, n) {
                const r = Object.keys(n);
                if (r.length && t.length) {
                    let i = t[0],
                        o = [];
                    if (r.forEach(e => {
                            i.hasOwnProperty(e) || o.push(e), i[e] = n[e]
                        }), o.length)
                        for (var s = 1; s < t.length; s++) {
                            let n = t[s];
                            o.forEach(function(t) {
                                n[t] = Cx(e, t)
                            })
                        }
                }
                return t
            }

            function wx(e, t, n) {
                switch (t.type) {
                    case 7:
                        return e.visitTrigger(t, n);
                    case 0:
                        return e.visitState(t, n);
                    case 1:
                        return e.visitTransition(t, n);
                    case 2:
                        return e.visitSequence(t, n);
                    case 3:
                        return e.visitGroup(t, n);
                    case 4:
                        return e.visitAnimate(t, n);
                    case 5:
                        return e.visitKeyframes(t, n);
                    case 6:
                        return e.visitStyle(t, n);
                    case 8:
                        return e.visitReference(t, n);
                    case 9:
                        return e.visitAnimateChild(t, n);
                    case 10:
                        return e.visitAnimateRef(t, n);
                    case 11:
                        return e.visitQuery(t, n);
                    case 12:
                        return e.visitStagger(t, n);
                    default:
                        throw new Error(`Unable to resolve animation metadata node #${t.type}`)
                }
            }

            function Cx(e, t) {
                return window.getComputedStyle(e)[t]
            }
            const Sx = "*";

            function xx(e, t) {
                const n = [];
                return "string" == typeof e ? e.split(/\s*,\s*/).forEach(e => function(e, t, n) {
                    if (":" == e[0]) {
                        const r = function(e, t) {
                            switch (e) {
                                case ":enter":
                                    return "void => *";
                                case ":leave":
                                    return "* => void";
                                case ":increment":
                                    return (e, t) => parseFloat(t) > parseFloat(e);
                                case ":decrement":
                                    return (e, t) => parseFloat(t) < parseFloat(e);
                                default:
                                    return t.push(`The transition alias value "${e}" is not supported`), "* => *"
                            }
                        }(e, n);
                        if ("function" == typeof r) return void t.push(r);
                        e = r
                    }
                    const r = e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                    if (null == r || r.length < 4) return n.push(`The provided transition expression "${e}" is not supported`), t;
                    const s = r[1],
                        i = r[2],
                        o = r[3];
                    t.push(Ax(s, o)), "<" != i[0] || s == Sx && o == Sx || t.push(Ax(o, s))
                }(e, n, t)) : n.push(e), n
            }
            const Ex = new Set(["true", "1"]),
                kx = new Set(["false", "0"]);

            function Ax(e, t) {
                const n = Ex.has(e) || kx.has(e),
                    r = Ex.has(t) || kx.has(t);
                return (s, i) => {
                    let o = e == Sx || e == s,
                        a = t == Sx || t == i;
                    return !o && n && "boolean" == typeof s && (o = s ? Ex.has(e) : kx.has(e)), !a && r && "boolean" == typeof i && (a = i ? Ex.has(t) : kx.has(t)), o && a
                }
            }
            const Dx = new RegExp("s*:selfs*,?", "g");

            function Tx(e, t, n) {
                return new Ox(e).build(t, n)
            }
            class Ox {
                constructor(e) {
                    this._driver = e
                }
                build(e, t) {
                    const n = new Fx(t);
                    return this._resetContextStyleTimingState(n), wx(this, dx(e), n)
                }
                _resetContextStyleTimingState(e) {
                    e.currentQuerySelector = "", e.collectedStyles = {}, e.collectedStyles[""] = {}, e.currentTime = 0
                }
                visitTrigger(e, t) {
                    let n = t.queryCount = 0,
                        r = t.depCount = 0;
                    const s = [],
                        i = [];
                    return "@" == e.name.charAt(0) && t.errors.push("animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"), e.definitions.forEach(e => {
                        if (this._resetContextStyleTimingState(t), 0 == e.type) {
                            const n = e,
                                r = n.name;
                            r.toString().split(/\s*,\s*/).forEach(e => {
                                n.name = e, s.push(this.visitState(n, t))
                            }), n.name = r
                        } else if (1 == e.type) {
                            const s = this.visitTransition(e, t);
                            n += s.queryCount, r += s.depCount, i.push(s)
                        } else t.errors.push("only state() and transition() definitions can sit inside of a trigger()")
                    }), {
                        type: 7,
                        name: e.name,
                        states: s,
                        transitions: i,
                        queryCount: n,
                        depCount: r,
                        options: null
                    }
                }
                visitState(e, t) {
                    const n = this.visitStyle(e.styles, t),
                        r = e.options && e.options.params || null;
                    if (n.containsDynamicStyles) {
                        const s = new Set,
                            i = r || {};
                        if (n.styles.forEach(e => {
                                if (Px(e)) {
                                    const t = e;
                                    Object.keys(t).forEach(e => {
                                        fx(t[e]).forEach(e => {
                                            i.hasOwnProperty(e) || s.add(e)
                                        })
                                    })
                                }
                            }), s.size) {
                            const n = mx(s.values());
                            t.errors.push(`state("${e.name}", ...) must define default values for all the following style substitutions: ${n.join(", ")}`)
                        }
                    }
                    return {
                        type: 0,
                        name: e.name,
                        style: n,
                        options: r ? {
                            params: r
                        } : null
                    }
                }
                visitTransition(e, t) {
                    t.queryCount = 0, t.depCount = 0;
                    const n = wx(this, dx(e.animation), t);
                    return {
                        type: 1,
                        matchers: xx(e.expr, t.errors),
                        animation: n,
                        queryCount: t.queryCount,
                        depCount: t.depCount,
                        options: Ix(e.options)
                    }
                }
                visitSequence(e, t) {
                    return {
                        type: 2,
                        steps: e.steps.map(e => wx(this, e, t)),
                        options: Ix(e.options)
                    }
                }
                visitGroup(e, t) {
                    const n = t.currentTime;
                    let r = 0;
                    const s = e.steps.map(e => {
                        t.currentTime = n;
                        const s = wx(this, e, t);
                        return r = Math.max(r, t.currentTime), s
                    });
                    return t.currentTime = r, {
                        type: 3,
                        steps: s,
                        options: Ix(e.options)
                    }
                }
                visitAnimate(e, t) {
                    const n = function(e, t) {
                        let n = null;
                        if (e.hasOwnProperty("duration")) n = e;
                        else if ("number" == typeof e) return Mx(ix(e, t).duration, 0, "");
                        const r = e;
                        if (r.split(/\s+/).some(e => "{" == e.charAt(0) && "{" == e.charAt(1))) {
                            const e = Mx(0, 0, "");
                            return e.dynamic = !0, e.strValue = r, e
                        }
                        return n = n || ix(r, t), Mx(n.duration, n.delay, n.easing)
                    }(e.timings, t.errors);
                    let r;
                    t.currentAnimateTimings = n;
                    let s = e.styles ? e.styles : kS({});
                    if (5 == s.type) r = this.visitKeyframes(s, t);
                    else {
                        let s = e.styles,
                            i = !1;
                        if (!s) {
                            i = !0;
                            const e = {};
                            n.easing && (e.easing = n.easing), s = kS(e)
                        }
                        t.currentTime += n.duration + n.delay;
                        const o = this.visitStyle(s, t);
                        o.isEmptyStep = i, r = o
                    }
                    return t.currentAnimateTimings = null, {
                        type: 4,
                        timings: n,
                        style: r,
                        options: null
                    }
                }
                visitStyle(e, t) {
                    const n = this._makeStyleAst(e, t);
                    return this._validateStyleAst(n, t), n
                }
                _makeStyleAst(e, t) {
                    const n = [];
                    Array.isArray(e.styles) ? e.styles.forEach(e => {
                        "string" == typeof e ? e == xS ? n.push(e) : t.errors.push(`The provided style string value ${e} is not allowed.`) : n.push(e)
                    }) : n.push(e.styles);
                    let r = !1,
                        s = null;
                    return n.forEach(e => {
                        if (Px(e)) {
                            const t = e,
                                n = t.easing;
                            if (n && (s = n, delete t.easing), !r)
                                for (let e in t)
                                    if (t[e].toString().indexOf("{{") >= 0) {
                                        r = !0;
                                        break
                                    }
                        }
                    }), {
                        type: 6,
                        styles: n,
                        easing: s,
                        offset: e.offset,
                        containsDynamicStyles: r,
                        options: null
                    }
                }
                _validateStyleAst(e, t) {
                    const n = t.currentAnimateTimings;
                    let r = t.currentTime,
                        s = t.currentTime;
                    n && s > 0 && (s -= n.duration + n.delay), e.styles.forEach(e => {
                        "string" != typeof e && Object.keys(e).forEach(n => {
                            if (!this._driver.validateStyleProperty(n)) return void t.errors.push(`The provided animation property "${n}" is not a supported CSS property for animations`);
                            const i = t.collectedStyles[t.currentQuerySelector],
                                o = i[n];
                            let a = !0;
                            o && (s != r && s >= o.startTime && r <= o.endTime && (t.errors.push(`The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${s}ms" and "${r}ms"`), a = !1), s = o.startTime), a && (i[n] = {
                                startTime: s,
                                endTime: r
                            }), t.options && function(e, t, n) {
                                const r = t.params || {},
                                    s = fx(e);
                                s.length && s.forEach(e => {
                                    r.hasOwnProperty(e) || n.push(`Unable to resolve the local animation param ${e} in the given list of values`)
                                })
                            }(e[n], t.options, t.errors)
                        })
                    })
                }
                visitKeyframes(e, t) {
                    const n = {
                        type: 5,
                        styles: [],
                        options: null
                    };
                    if (!t.currentAnimateTimings) return t.errors.push("keyframes() must be placed inside of a call to animate()"), n;
                    let r = 0;
                    const s = [];
                    let i = !1,
                        o = !1,
                        a = 0;
                    const l = e.steps.map(e => {
                        const n = this._makeStyleAst(e, t);
                        let l = null != n.offset ? n.offset : function(e) {
                                if ("string" == typeof e) return null;
                                let t = null;
                                if (Array.isArray(e)) e.forEach(e => {
                                    if (Px(e) && e.hasOwnProperty("offset")) {
                                        const n = e;
                                        t = parseFloat(n.offset), delete n.offset
                                    }
                                });
                                else if (Px(e) && e.hasOwnProperty("offset")) {
                                    const n = e;
                                    t = parseFloat(n.offset), delete n.offset
                                }
                                return t
                            }(n.styles),
                            u = 0;
                        return null != l && (r++, u = n.offset = l), o = o || u < 0 || u > 1, i = i || u < a, a = u, s.push(u), n
                    });
                    o && t.errors.push("Please ensure that all keyframe offsets are between 0 and 1"), i && t.errors.push("Please ensure that all keyframe offsets are in order");
                    const u = e.steps.length;
                    let c = 0;
                    r > 0 && r < u ? t.errors.push("Not all style() steps within the declared keyframes() contain offsets") : 0 == r && (c = 1 / (u - 1));
                    const h = u - 1,
                        d = t.currentTime,
                        p = t.currentAnimateTimings,
                        f = p.duration;
                    return l.forEach((e, r) => {
                        const i = c > 0 ? r == h ? 1 : c * r : s[r],
                            o = i * f;
                        t.currentTime = d + p.delay + o, p.duration = o, this._validateStyleAst(e, t), e.offset = i, n.styles.push(e)
                    }), n
                }
                visitReference(e, t) {
                    return {
                        type: 8,
                        animation: wx(this, dx(e.animation), t),
                        options: Ix(e.options)
                    }
                }
                visitAnimateChild(e, t) {
                    return t.depCount++, {
                        type: 9,
                        options: Ix(e.options)
                    }
                }
                visitAnimateRef(e, t) {
                    return {
                        type: 10,
                        animation: this.visitReference(e.animation, t),
                        options: Ix(e.options)
                    }
                }
                visitQuery(e, t) {
                    const n = t.currentQuerySelector,
                        r = e.options || {};
                    t.queryCount++, t.currentQuery = e;
                    const [s, i] = function(e) {
                        const t = !!e.split(/\s*,\s*/).find(e => ":self" == e);
                        return t && (e = e.replace(Dx, "")), [e = e.replace(/@\*/g, ex).replace(/@\w+/g, e => ".ng-trigger-" + e.substr(1)).replace(/:animating/g, nx), t]
                    }(e.selector);
                    t.currentQuerySelector = n.length ? n + " " + s : s, NS(t.collectedStyles, t.currentQuerySelector, {});
                    const o = wx(this, dx(e.animation), t);
                    return t.currentQuery = null, t.currentQuerySelector = n, {
                        type: 11,
                        selector: s,
                        limit: r.limit || 0,
                        optional: !!r.optional,
                        includeSelf: i,
                        animation: o,
                        originalSelector: e.selector,
                        options: Ix(e.options)
                    }
                }
                visitStagger(e, t) {
                    t.currentQuery || t.errors.push("stagger() can only be used inside of query()");
                    const n = "full" === e.timings ? {
                        duration: 0,
                        delay: 0,
                        easing: "full"
                    } : ix(e.timings, t.errors, !0);
                    return {
                        type: 12,
                        animation: wx(this, dx(e.animation), t),
                        timings: n,
                        options: null
                    }
                }
            }
            class Fx {
                constructor(e) {
                    this.errors = e, this.queryCount = 0, this.depCount = 0, this.currentTransition = null, this.currentQuery = null, this.currentQuerySelector = null, this.currentAnimateTimings = null, this.currentTime = 0, this.collectedStyles = {}, this.options = null
                }
            }

            function Px(e) {
                return !Array.isArray(e) && "object" == typeof e
            }

            function Ix(e) {
                var t;
                return e ? (e = ox(e)).params && (e.params = (t = e.params) ? ox(t) : null) : e = {}, e
            }

            function Mx(e, t, n) {
                return {
                    duration: e,
                    delay: t,
                    easing: n
                }
            }

            function Rx(e, t, n, r, s, i, o = null, a = !1) {
                return {
                    type: 1,
                    element: e,
                    keyframes: t,
                    preStyleProps: n,
                    postStyleProps: r,
                    duration: s,
                    delay: i,
                    totalTime: s + i,
                    easing: o,
                    subTimeline: a
                }
            }
            class Nx {
                constructor() {
                    this._map = new Map
                }
                consume(e) {
                    let t = this._map.get(e);
                    return t ? this._map.delete(e) : t = [], t
                }
                append(e, t) {
                    let n = this._map.get(e);
                    n || this._map.set(e, n = []), n.push(...t)
                }
                has(e) {
                    return this._map.has(e)
                }
                clear() {
                    this._map.clear()
                }
            }
            const Lx = new RegExp(":enter", "g"),
                jx = new RegExp(":leave", "g");

            function Bx(e, t, n, r, s, i = {}, o = {}, a, l, u = []) {
                return (new Vx).buildKeyframes(e, t, n, r, s, i, o, a, l, u)
            }
            class Vx {
                buildKeyframes(e, t, n, r, s, i, o, a, l, u = []) {
                    l = l || new Nx;
                    const c = new $x(e, t, l, r, s, u, []);
                    c.options = a, c.currentTimeline.setStyles([i], null, c.errors, a), wx(this, n, c);
                    const h = c.timelines.filter(e => e.containsAnimation());
                    if (h.length && Object.keys(o).length) {
                        const e = h[h.length - 1];
                        e.allowOnlyTimelineStyles() || e.setStyles([o], null, c.errors, a)
                    }
                    return h.length ? h.map(e => e.buildKeyframes()) : [Rx(t, [], [], [], 0, 0, "", !1)]
                }
                visitTrigger(e, t) {}
                visitState(e, t) {}
                visitTransition(e, t) {}
                visitAnimateChild(e, t) {
                    const n = t.subInstructions.consume(t.element);
                    if (n) {
                        const r = t.createSubContext(e.options),
                            s = t.currentTimeline.currentTime,
                            i = this._visitSubInstructions(n, r, r.options);
                        s != i && t.transformIntoNewTimeline(i)
                    }
                    t.previousNode = e
                }
                visitAnimateRef(e, t) {
                    const n = t.createSubContext(e.options);
                    n.transformIntoNewTimeline(), this.visitReference(e.animation, n), t.transformIntoNewTimeline(n.currentTimeline.currentTime), t.previousNode = e
                }
                _visitSubInstructions(e, t, n) {
                    let r = t.currentTimeline.currentTime;
                    const s = null != n.duration ? rx(n.duration) : null,
                        i = null != n.delay ? rx(n.delay) : null;
                    return 0 !== s && e.forEach(e => {
                        const n = t.appendInstructionToTimeline(e, s, i);
                        r = Math.max(r, n.duration + n.delay)
                    }), r
                }
                visitReference(e, t) {
                    t.updateOptions(e.options, !0), wx(this, e.animation, t), t.previousNode = e
                }
                visitSequence(e, t) {
                    const n = t.subContextCount;
                    let r = t;
                    const s = e.options;
                    if (s && (s.params || s.delay) && (r = t.createSubContext(s), r.transformIntoNewTimeline(), null != s.delay)) {
                        6 == r.previousNode.type && (r.currentTimeline.snapshotCurrentStyles(), r.previousNode = Ux);
                        const e = rx(s.delay);
                        r.delayNextStep(e)
                    }
                    e.steps.length && (e.steps.forEach(e => wx(this, e, r)), r.currentTimeline.applyStylesToKeyframe(), r.subContextCount > n && r.transformIntoNewTimeline()), t.previousNode = e
                }
                visitGroup(e, t) {
                    const n = [];
                    let r = t.currentTimeline.currentTime;
                    const s = e.options && e.options.delay ? rx(e.options.delay) : 0;
                    e.steps.forEach(i => {
                        const o = t.createSubContext(e.options);
                        s && o.delayNextStep(s), wx(this, i, o), r = Math.max(r, o.currentTimeline.currentTime), n.push(o.currentTimeline)
                    }), n.forEach(e => t.currentTimeline.mergeTimelineCollectedStyles(e)), t.transformIntoNewTimeline(r), t.previousNode = e
                }
                _visitTiming(e, t) {
                    if (e.dynamic) {
                        const n = e.strValue;
                        return ix(t.params ? gx(n, t.params, t.errors) : n, t.errors)
                    }
                    return {
                        duration: e.duration,
                        delay: e.delay,
                        easing: e.easing
                    }
                }
                visitAnimate(e, t) {
                    const n = t.currentAnimateTimings = this._visitTiming(e.timings, t),
                        r = t.currentTimeline;
                    n.delay && (t.incrementTime(n.delay), r.snapshotCurrentStyles());
                    const s = e.style;
                    5 == s.type ? this.visitKeyframes(s, t) : (t.incrementTime(n.duration), this.visitStyle(s, t), r.applyStylesToKeyframe()), t.currentAnimateTimings = null, t.previousNode = e
                }
                visitStyle(e, t) {
                    const n = t.currentTimeline,
                        r = t.currentAnimateTimings;
                    !r && n.getCurrentStyleProperties().length && n.forwardFrame();
                    const s = r && r.easing || e.easing;
                    e.isEmptyStep ? n.applyEmptyStep(s) : n.setStyles(e.styles, s, t.errors, t.options), t.previousNode = e
                }
                visitKeyframes(e, t) {
                    const n = t.currentAnimateTimings,
                        r = t.currentTimeline.duration,
                        s = n.duration,
                        i = t.createSubContext().currentTimeline;
                    i.easing = n.easing, e.styles.forEach(e => {
                        i.forwardTime((e.offset || 0) * s), i.setStyles(e.styles, e.easing, t.errors, t.options), i.applyStylesToKeyframe()
                    }), t.currentTimeline.mergeTimelineCollectedStyles(i), t.transformIntoNewTimeline(r + s), t.previousNode = e
                }
                visitQuery(e, t) {
                    const n = t.currentTimeline.currentTime,
                        r = e.options || {},
                        s = r.delay ? rx(r.delay) : 0;
                    s && (6 === t.previousNode.type || 0 == n && t.currentTimeline.getCurrentStyleProperties().length) && (t.currentTimeline.snapshotCurrentStyles(), t.previousNode = Ux);
                    let i = n;
                    const o = t.invokeQuery(e.selector, e.originalSelector, e.limit, e.includeSelf, !!r.optional, t.errors);
                    t.currentQueryTotal = o.length;
                    let a = null;
                    o.forEach((n, r) => {
                        t.currentQueryIndex = r;
                        const o = t.createSubContext(e.options, n);
                        s && o.delayNextStep(s), n === t.element && (a = o.currentTimeline), wx(this, e.animation, o), o.currentTimeline.applyStylesToKeyframe(), i = Math.max(i, o.currentTimeline.currentTime)
                    }), t.currentQueryIndex = 0, t.currentQueryTotal = 0, t.transformIntoNewTimeline(i), a && (t.currentTimeline.mergeTimelineCollectedStyles(a), t.currentTimeline.snapshotCurrentStyles()), t.previousNode = e
                }
                visitStagger(e, t) {
                    const n = t.parentContext,
                        r = t.currentTimeline,
                        s = e.timings,
                        i = Math.abs(s.duration),
                        o = i * (t.currentQueryTotal - 1);
                    let a = i * t.currentQueryIndex;
                    switch (s.duration < 0 ? "reverse" : s.easing) {
                        case "reverse":
                            a = o - a;
                            break;
                        case "full":
                            a = n.currentStaggerTime
                    }
                    const l = t.currentTimeline;
                    a && l.delayNextStep(a);
                    const u = l.currentTime;
                    wx(this, e.animation, t), t.previousNode = e, n.currentStaggerTime = r.currentTime - u + (r.startTime - n.currentTimeline.startTime)
                }
            }
            const Ux = {};
            class $x {
                constructor(e, t, n, r, s, i, o, a) {
                    this._driver = e, this.element = t, this.subInstructions = n, this._enterClassName = r, this._leaveClassName = s, this.errors = i, this.timelines = o, this.parentContext = null, this.currentAnimateTimings = null, this.previousNode = Ux, this.subContextCount = 0, this.options = {}, this.currentQueryIndex = 0, this.currentQueryTotal = 0, this.currentStaggerTime = 0, this.currentTimeline = a || new Hx(this._driver, t, 0), o.push(this.currentTimeline)
                }
                get params() {
                    return this.options.params
                }
                updateOptions(e, t) {
                    if (!e) return;
                    const n = e;
                    let r = this.options;
                    null != n.duration && (r.duration = rx(n.duration)), null != n.delay && (r.delay = rx(n.delay));
                    const s = n.params;
                    if (s) {
                        let e = r.params;
                        e || (e = this.options.params = {}), Object.keys(s).forEach(n => {
                            t && e.hasOwnProperty(n) || (e[n] = gx(s[n], e, this.errors))
                        })
                    }
                }
                _copyOptions() {
                    const e = {};
                    if (this.options) {
                        const t = this.options.params;
                        if (t) {
                            const n = e.params = {};
                            Object.keys(t).forEach(e => {
                                n[e] = t[e]
                            })
                        }
                    }
                    return e
                }
                createSubContext(e = null, t, n) {
                    const r = t || this.element,
                        s = new $x(this._driver, r, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(r, n || 0));
                    return s.previousNode = this.previousNode, s.currentAnimateTimings = this.currentAnimateTimings, s.options = this._copyOptions(), s.updateOptions(e), s.currentQueryIndex = this.currentQueryIndex, s.currentQueryTotal = this.currentQueryTotal, s.parentContext = this, this.subContextCount++, s
                }
                transformIntoNewTimeline(e) {
                    return this.previousNode = Ux, this.currentTimeline = this.currentTimeline.fork(this.element, e), this.timelines.push(this.currentTimeline), this.currentTimeline
                }
                appendInstructionToTimeline(e, t, n) {
                    const r = {
                            duration: null != t ? t : e.duration,
                            delay: this.currentTimeline.currentTime + (null != n ? n : 0) + e.delay,
                            easing: ""
                        },
                        s = new zx(this._driver, e.element, e.keyframes, e.preStyleProps, e.postStyleProps, r, e.stretchStartingKeyframe);
                    return this.timelines.push(s), r
                }
                incrementTime(e) {
                    this.currentTimeline.forwardTime(this.currentTimeline.duration + e)
                }
                delayNextStep(e) {
                    e > 0 && this.currentTimeline.delayNextStep(e)
                }
                invokeQuery(e, t, n, r, s, i) {
                    let o = [];
                    if (r && o.push(this.element), e.length > 0) {
                        e = (e = e.replace(Lx, "." + this._enterClassName)).replace(jx, "." + this._leaveClassName);
                        let t = this._driver.query(this.element, e, 1 != n);
                        0 !== n && (t = n < 0 ? t.slice(t.length + n, t.length) : t.slice(0, n)), o.push(...t)
                    }
                    return s || 0 != o.length || i.push(`\`query("${t}")\` returned zero elements. (Use \`query("${t}", { optional: true })\` if you wish to allow this.)`), o
                }
            }
            class Hx {
                constructor(e, t, n, r) {
                    this._driver = e, this.element = t, this.startTime = n, this._elementTimelineStylesLookup = r, this.duration = 0, this._previousKeyframe = {}, this._currentKeyframe = {}, this._keyframes = new Map, this._styleSummary = {}, this._pendingStyles = {}, this._backFill = {}, this._currentEmptyStepKeyframe = null, this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map), this._localTimelineStyles = Object.create(this._backFill, {}), this._globalTimelineStyles = this._elementTimelineStylesLookup.get(t), this._globalTimelineStyles || (this._globalTimelineStyles = this._localTimelineStyles, this._elementTimelineStylesLookup.set(t, this._localTimelineStyles)), this._loadKeyframe()
                }
                containsAnimation() {
                    switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.getCurrentStyleProperties().length > 0;
                        default:
                            return !0
                    }
                }
                getCurrentStyleProperties() {
                    return Object.keys(this._currentKeyframe)
                }
                get currentTime() {
                    return this.startTime + this.duration
                }
                delayNextStep(e) {
                    const t = 1 == this._keyframes.size && Object.keys(this._pendingStyles).length;
                    this.duration || t ? (this.forwardTime(this.currentTime + e), t && this.snapshotCurrentStyles()) : this.startTime += e
                }
                fork(e, t) {
                    return this.applyStylesToKeyframe(), new Hx(this._driver, e, t || this.currentTime, this._elementTimelineStylesLookup)
                }
                _loadKeyframe() {
                    this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe), this._currentKeyframe = this._keyframes.get(this.duration), this._currentKeyframe || (this._currentKeyframe = Object.create(this._backFill, {}), this._keyframes.set(this.duration, this._currentKeyframe))
                }
                forwardFrame() {
                    this.duration += 1, this._loadKeyframe()
                }
                forwardTime(e) {
                    this.applyStylesToKeyframe(), this.duration = e, this._loadKeyframe()
                }
                _updateStyle(e, t) {
                    this._localTimelineStyles[e] = t, this._globalTimelineStyles[e] = t, this._styleSummary[e] = {
                        time: this.currentTime,
                        value: t
                    }
                }
                allowOnlyTimelineStyles() {
                    return this._currentEmptyStepKeyframe !== this._currentKeyframe
                }
                applyEmptyStep(e) {
                    e && (this._previousKeyframe.easing = e), Object.keys(this._globalTimelineStyles).forEach(e => {
                        this._backFill[e] = this._globalTimelineStyles[e] || xS, this._currentKeyframe[e] = xS
                    }), this._currentEmptyStepKeyframe = this._currentKeyframe
                }
                setStyles(e, t, n, r) {
                    t && (this._previousKeyframe.easing = t);
                    const s = r && r.params || {},
                        i = function(e, t) {
                            const n = {};
                            let r;
                            return e.forEach(e => {
                                "*" === e ? (r = r || Object.keys(t), r.forEach(e => {
                                    n[e] = xS
                                })) : ax(e, !1, n)
                            }), n
                        }(e, this._globalTimelineStyles);
                    Object.keys(i).forEach(e => {
                        const t = gx(i[e], s, n);
                        this._pendingStyles[e] = t, this._localTimelineStyles.hasOwnProperty(e) || (this._backFill[e] = this._globalTimelineStyles.hasOwnProperty(e) ? this._globalTimelineStyles[e] : xS), this._updateStyle(e, t)
                    })
                }
                applyStylesToKeyframe() {
                    const e = this._pendingStyles,
                        t = Object.keys(e);
                    0 != t.length && (this._pendingStyles = {}, t.forEach(t => {
                        this._currentKeyframe[t] = e[t]
                    }), Object.keys(this._localTimelineStyles).forEach(e => {
                        this._currentKeyframe.hasOwnProperty(e) || (this._currentKeyframe[e] = this._localTimelineStyles[e])
                    }))
                }
                snapshotCurrentStyles() {
                    Object.keys(this._localTimelineStyles).forEach(e => {
                        const t = this._localTimelineStyles[e];
                        this._pendingStyles[e] = t, this._updateStyle(e, t)
                    })
                }
                getFinalKeyframe() {
                    return this._keyframes.get(this.duration)
                }
                get properties() {
                    const e = [];
                    for (let t in this._currentKeyframe) e.push(t);
                    return e
                }
                mergeTimelineCollectedStyles(e) {
                    Object.keys(e._styleSummary).forEach(t => {
                        const n = this._styleSummary[t],
                            r = e._styleSummary[t];
                        (!n || r.time > n.time) && this._updateStyle(t, r.value)
                    })
                }
                buildKeyframes() {
                    this.applyStylesToKeyframe();
                    const e = new Set,
                        t = new Set,
                        n = 1 === this._keyframes.size && 0 === this.duration;
                    let r = [];
                    this._keyframes.forEach((s, i) => {
                        const o = ax(s, !0);
                        Object.keys(o).forEach(n => {
                            const r = o[n];
                            "!" == r ? e.add(n) : r == xS && t.add(n)
                        }), n || (o.offset = i / this.duration), r.push(o)
                    });
                    const s = e.size ? mx(e.values()) : [],
                        i = t.size ? mx(t.values()) : [];
                    if (n) {
                        const e = r[0],
                            t = ox(e);
                        e.offset = 0, t.offset = 1, r = [e, t]
                    }
                    return Rx(this.element, r, s, i, this.duration, this.startTime, this.easing, !1)
                }
            }
            class zx extends Hx {
                constructor(e, t, n, r, s, i, o = !1) {
                    super(e, t, i.delay), this.element = t, this.keyframes = n, this.preStyleProps = r, this.postStyleProps = s, this._stretchStartingKeyframe = o, this.timings = {
                        duration: i.duration,
                        delay: i.delay,
                        easing: i.easing
                    }
                }
                containsAnimation() {
                    return this.keyframes.length > 1
                }
                buildKeyframes() {
                    let e = this.keyframes,
                        {
                            delay: t,
                            duration: n,
                            easing: r
                        } = this.timings;
                    if (this._stretchStartingKeyframe && t) {
                        const s = [],
                            i = n + t,
                            o = t / i,
                            a = ax(e[0], !1);
                        a.offset = 0, s.push(a);
                        const l = ax(e[0], !1);
                        l.offset = qx(o), s.push(l);
                        const u = e.length - 1;
                        for (let r = 1; r <= u; r++) {
                            let o = ax(e[r], !1);
                            o.offset = qx((t + o.offset * n) / i), s.push(o)
                        }
                        n = i, t = 0, r = "", e = s
                    }
                    return Rx(this.element, e, this.preStyleProps, this.postStyleProps, n, t, r, !0)
                }
            }

            function qx(e, t = 3) {
                const n = Math.pow(10, t - 1);
                return Math.round(e * n) / n
            }
            class Gx {}
            class Wx extends Gx {
                normalizePropertyName(e, t) {
                    return bx(e)
                }
                normalizeStyleValue(e, t, n, r) {
                    let s = "";
                    const i = n.toString().trim();
                    if (Kx[t] && 0 !== n && "0" !== n)
                        if ("number" == typeof n) s = "px";
                        else {
                            const t = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
                            t && 0 == t[1].length && r.push(`Please provide a CSS unit value for ${e}:${n}`)
                        } return i + s
                }
            }
            const Kx = (() => function(e) {
                const t = {};
                return e.forEach(e => t[e] = !0), t
            }("width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(",")))();

            function Zx(e, t, n, r, s, i, o, a, l, u, c, h, d) {
                return {
                    type: 0,
                    element: e,
                    triggerName: t,
                    isRemovalTransition: s,
                    fromState: n,
                    fromStyles: i,
                    toState: r,
                    toStyles: o,
                    timelines: a,
                    queriedElements: l,
                    preStyleProps: u,
                    postStyleProps: c,
                    totalTime: h,
                    errors: d
                }
            }
            const Qx = {};
            class Yx {
                constructor(e, t, n) {
                    this._triggerName = e, this.ast = t, this._stateStyles = n
                }
                match(e, t, n, r) {
                    return function(e, t, n, r, s) {
                        return e.some(e => e(t, n, r, s))
                    }(this.ast.matchers, e, t, n, r)
                }
                buildStyles(e, t, n) {
                    const r = this._stateStyles["*"],
                        s = this._stateStyles[e],
                        i = r ? r.buildStyles(t, n) : {};
                    return s ? s.buildStyles(t, n) : i
                }
                build(e, t, n, r, s, i, o, a, l, u) {
                    const c = [],
                        h = this.ast.options && this.ast.options.params || Qx,
                        d = this.buildStyles(n, o && o.params || Qx, c),
                        p = a && a.params || Qx,
                        f = this.buildStyles(r, p, c),
                        g = new Set,
                        m = new Map,
                        y = new Map,
                        b = "void" === r,
                        v = {
                            params: Object.assign(Object.assign({}, h), p)
                        },
                        _ = u ? [] : Bx(e, t, this.ast.animation, s, i, d, f, v, l, c);
                    let w = 0;
                    if (_.forEach(e => {
                            w = Math.max(e.duration + e.delay, w)
                        }), c.length) return Zx(t, this._triggerName, n, r, b, d, f, [], [], m, y, w, c);
                    _.forEach(e => {
                        const n = e.element,
                            r = NS(m, n, {});
                        e.preStyleProps.forEach(e => r[e] = !0);
                        const s = NS(y, n, {});
                        e.postStyleProps.forEach(e => s[e] = !0), n !== t && g.add(n)
                    });
                    const C = mx(g.values());
                    return Zx(t, this._triggerName, n, r, b, d, f, _, C, m, y, w)
                }
            }
            class Jx {
                constructor(e, t) {
                    this.styles = e, this.defaultParams = t
                }
                buildStyles(e, t) {
                    const n = {},
                        r = ox(this.defaultParams);
                    return Object.keys(e).forEach(t => {
                        const n = e[t];
                        null != n && (r[t] = n)
                    }), this.styles.styles.forEach(e => {
                        if ("string" != typeof e) {
                            const s = e;
                            Object.keys(s).forEach(e => {
                                let i = s[e];
                                i.length > 1 && (i = gx(i, r, t)), n[e] = i
                            })
                        }
                    }), n
                }
            }
            class Xx {
                constructor(e, t) {
                    this.name = e, this.ast = t, this.transitionFactories = [], this.states = {}, t.states.forEach(e => {
                        this.states[e.name] = new Jx(e.style, e.options && e.options.params || {})
                    }), eE(this.states, "true", "1"), eE(this.states, "false", "0"), t.transitions.forEach(t => {
                        this.transitionFactories.push(new Yx(e, t, this.states))
                    }), this.fallbackTransition = new Yx(e, {
                        type: 1,
                        animation: {
                            type: 2,
                            steps: [],
                            options: null
                        },
                        matchers: [(e, t) => !0],
                        options: null,
                        queryCount: 0,
                        depCount: 0
                    }, this.states)
                }
                get containsQueries() {
                    return this.ast.queryCount > 0
                }
                matchTransition(e, t, n, r) {
                    return this.transitionFactories.find(s => s.match(e, t, n, r)) || null
                }
                matchStyles(e, t, n) {
                    return this.fallbackTransition.buildStyles(e, t, n)
                }
            }

            function eE(e, t, n) {
                e.hasOwnProperty(t) ? e.hasOwnProperty(n) || (e[n] = e[t]) : e.hasOwnProperty(n) && (e[t] = e[n])
            }
            const tE = new Nx;
            class nE {
                constructor(e, t, n) {
                    this.bodyNode = e, this._driver = t, this._normalizer = n, this._animations = {}, this._playersById = {}, this.players = []
                }
                register(e, t) {
                    const n = [],
                        r = Tx(this._driver, t, n);
                    if (n.length) throw new Error(`Unable to build the animation due to the following errors: ${n.join("\n")}`);
                    this._animations[e] = r
                }
                _buildPlayer(e, t, n) {
                    const r = e.element,
                        s = PS(0, this._normalizer, 0, e.keyframes, t, n);
                    return this._driver.animate(r, s, e.duration, e.delay, e.easing, [], !0)
                }
                create(e, t, n = {}) {
                    const r = [],
                        s = this._animations[e];
                    let i;
                    const o = new Map;
                    if (s ? (i = Bx(this._driver, t, s, YS, JS, {}, {}, n, tE, r), i.forEach(e => {
                            const t = NS(o, e.element, {});
                            e.postStyleProps.forEach(e => t[e] = null)
                        })) : (r.push("The requested animation doesn't exist or has already been destroyed"), i = []), r.length) throw new Error(`Unable to create the animation due to the following errors: ${r.join("\n")}`);
                    o.forEach((e, t) => {
                        Object.keys(e).forEach(n => {
                            e[n] = this._driver.computeStyle(t, n, xS)
                        })
                    });
                    const a = FS(i.map(e => {
                        const t = o.get(e.element);
                        return this._buildPlayer(e, {}, t)
                    }));
                    return this._playersById[e] = a, a.onDestroy(() => this.destroy(e)), this.players.push(a), a
                }
                destroy(e) {
                    const t = this._getPlayer(e);
                    t.destroy(), delete this._playersById[e];
                    const n = this.players.indexOf(t);
                    n >= 0 && this.players.splice(n, 1)
                }
                _getPlayer(e) {
                    const t = this._playersById[e];
                    if (!t) throw new Error(`Unable to find the timeline player referenced by ${e}`);
                    return t
                }
                listen(e, t, n, r) {
                    const s = RS(t, "", "", "");
                    return IS(this._getPlayer(e), n, s, r), () => {}
                }
                command(e, t, n, r) {
                    if ("register" == n) return void this.register(e, r[0]);
                    if ("create" == n) return void this.create(e, t, r[0] || {});
                    const s = this._getPlayer(e);
                    switch (n) {
                        case "play":
                            s.play();
                            break;
                        case "pause":
                            s.pause();
                            break;
                        case "reset":
                            s.reset();
                            break;
                        case "restart":
                            s.restart();
                            break;
                        case "finish":
                            s.finish();
                            break;
                        case "init":
                            s.init();
                            break;
                        case "setPosition":
                            s.setPosition(parseFloat(r[0]));
                            break;
                        case "destroy":
                            this.destroy(e)
                    }
                }
            }
            const rE = "ng-animate-queued",
                sE = "ng-animate-disabled",
                iE = ".ng-animate-disabled",
                oE = [],
                aE = {
                    namespaceId: "",
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1
                },
                lE = {
                    namespaceId: "",
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0
                };
            class uE {
                constructor(e, t = "") {
                    this.namespaceId = t;
                    const n = e && e.hasOwnProperty("value");
                    if (this.value = null != (r = n ? e.value : e) ? r : null, n) {
                        const t = ox(e);
                        delete t.value, this.options = t
                    } else this.options = {};
                    var r;
                    this.options.params || (this.options.params = {})
                }
                get params() {
                    return this.options.params
                }
                absorbOptions(e) {
                    const t = e.params;
                    if (t) {
                        const e = this.options.params;
                        Object.keys(t).forEach(n => {
                            null == e[n] && (e[n] = t[n])
                        })
                    }
                }
            }
            const cE = "void",
                hE = new uE(cE);
            class dE {
                constructor(e, t, n) {
                    this.id = e, this.hostElement = t, this._engine = n, this.players = [], this._triggers = {}, this._queue = [], this._elementListeners = new Map, this._hostClassName = "ng-tns-" + e, vE(t, this._hostClassName)
                }
                listen(e, t, n, r) {
                    if (!this._triggers.hasOwnProperty(t)) throw new Error(`Unable to listen on the animation trigger event "${n}" because the animation trigger "${t}" doesn't exist!`);
                    if (null == n || 0 == n.length) throw new Error(`Unable to listen on the animation trigger "${t}" because the provided event is undefined!`);
                    if ("start" != (s = n) && "done" != s) throw new Error(`The provided animation trigger event "${n}" for the animation trigger "${t}" is not supported!`);
                    var s;
                    const i = NS(this._elementListeners, e, []),
                        o = {
                            name: t,
                            phase: n,
                            callback: r
                        };
                    i.push(o);
                    const a = NS(this._engine.statesByElement, e, {});
                    return a.hasOwnProperty(t) || (vE(e, XS), vE(e, "ng-trigger-" + t), a[t] = hE), () => {
                        this._engine.afterFlush(() => {
                            const e = i.indexOf(o);
                            e >= 0 && i.splice(e, 1), this._triggers[t] || delete a[t]
                        })
                    }
                }
                register(e, t) {
                    return !this._triggers[e] && (this._triggers[e] = t, !0)
                }
                _getTrigger(e) {
                    const t = this._triggers[e];
                    if (!t) throw new Error(`The provided animation trigger "${e}" has not been registered!`);
                    return t
                }
                trigger(e, t, n, r = !0) {
                    const s = this._getTrigger(t),
                        i = new fE(this.id, t, e);
                    let o = this._engine.statesByElement.get(e);
                    o || (vE(e, XS), vE(e, "ng-trigger-" + t), this._engine.statesByElement.set(e, o = {}));
                    let a = o[t];
                    const l = new uE(n, this.id);
                    if (!(n && n.hasOwnProperty("value")) && a && l.absorbOptions(a.options), o[t] = l, a || (a = hE), l.value !== cE && a.value === l.value) {
                        if (! function(e, t) {
                                const n = Object.keys(e),
                                    r = Object.keys(t);
                                if (n.length != r.length) return !1;
                                for (let s = 0; s < n.length; s++) {
                                    const r = n[s];
                                    if (!t.hasOwnProperty(r) || e[r] !== t[r]) return !1
                                }
                                return !0
                            }(a.params, l.params)) {
                            const t = [],
                                n = s.matchStyles(a.value, a.params, t),
                                r = s.matchStyles(l.value, l.params, t);
                            t.length ? this._engine.reportError(t) : this._engine.afterFlush(() => {
                                hx(e, n), cx(e, r)
                            })
                        }
                        return
                    }
                    const u = NS(this._engine.playersByElement, e, []);
                    u.forEach(e => {
                        e.namespaceId == this.id && e.triggerName == t && e.queued && e.destroy()
                    });
                    let c = s.matchTransition(a.value, l.value, e, l.params),
                        h = !1;
                    if (!c) {
                        if (!r) return;
                        c = s.fallbackTransition, h = !0
                    }
                    return this._engine.totalQueuedPlayers++, this._queue.push({
                        element: e,
                        triggerName: t,
                        transition: c,
                        fromState: a,
                        toState: l,
                        player: i,
                        isFallbackTransition: h
                    }), h || (vE(e, rE), i.onStart(() => {
                        _E(e, rE)
                    })), i.onDone(() => {
                        let t = this.players.indexOf(i);
                        t >= 0 && this.players.splice(t, 1);
                        const n = this._engine.playersByElement.get(e);
                        if (n) {
                            let e = n.indexOf(i);
                            e >= 0 && n.splice(e, 1)
                        }
                    }), this.players.push(i), u.push(i), i
                }
                deregister(e) {
                    delete this._triggers[e], this._engine.statesByElement.forEach((t, n) => {
                        delete t[e]
                    }), this._elementListeners.forEach((t, n) => {
                        this._elementListeners.set(n, t.filter(t => t.name != e))
                    })
                }
                clearElementCache(e) {
                    this._engine.statesByElement.delete(e), this._elementListeners.delete(e);
                    const t = this._engine.playersByElement.get(e);
                    t && (t.forEach(e => e.destroy()), this._engine.playersByElement.delete(e))
                }
                _signalRemovalForInnerTriggers(e, t) {
                    const n = this._engine.driver.query(e, ex, !0);
                    n.forEach(e => {
                        if (e.__ng_removed) return;
                        const n = this._engine.fetchNamespacesByElement(e);
                        n.size ? n.forEach(n => n.triggerLeaveAnimation(e, t, !1, !0)) : this.clearElementCache(e)
                    }), this._engine.afterFlushAnimationsDone(() => n.forEach(e => this.clearElementCache(e)))
                }
                triggerLeaveAnimation(e, t, n, r) {
                    const s = this._engine.statesByElement.get(e);
                    if (s) {
                        const i = [];
                        if (Object.keys(s).forEach(t => {
                                if (this._triggers[t]) {
                                    const n = this.trigger(e, t, cE, r);
                                    n && i.push(n)
                                }
                            }), i.length) return this._engine.markElementAsRemoved(this.id, e, !0, t), n && FS(i).onDone(() => this._engine.processLeaveNode(e)), !0
                    }
                    return !1
                }
                prepareLeaveAnimationListeners(e) {
                    const t = this._elementListeners.get(e),
                        n = this._engine.statesByElement.get(e);
                    if (t && n) {
                        const r = new Set;
                        t.forEach(t => {
                            const s = t.name;
                            if (r.has(s)) return;
                            r.add(s);
                            const i = this._triggers[s].fallbackTransition,
                                o = n[s] || hE,
                                a = new uE(cE),
                                l = new fE(this.id, s, e);
                            this._engine.totalQueuedPlayers++, this._queue.push({
                                element: e,
                                triggerName: s,
                                transition: i,
                                fromState: o,
                                toState: a,
                                player: l,
                                isFallbackTransition: !0
                            })
                        })
                    }
                }
                removeNode(e, t) {
                    const n = this._engine;
                    if (e.childElementCount && this._signalRemovalForInnerTriggers(e, t), this.triggerLeaveAnimation(e, t, !0)) return;
                    let r = !1;
                    if (n.totalAnimations) {
                        const t = n.players.length ? n.playersByQueriedElement.get(e) : [];
                        if (t && t.length) r = !0;
                        else {
                            let t = e;
                            for (; t = t.parentNode;)
                                if (n.statesByElement.get(t)) {
                                    r = !0;
                                    break
                                }
                        }
                    }
                    if (this.prepareLeaveAnimationListeners(e), r) n.markElementAsRemoved(this.id, e, !1, t);
                    else {
                        const r = e.__ng_removed;
                        r && r !== aE || (n.afterFlush(() => this.clearElementCache(e)), n.destroyInnerAnimations(e), n._onRemovalComplete(e, t))
                    }
                }
                insertNode(e, t) {
                    vE(e, this._hostClassName)
                }
                drainQueuedTransitions(e) {
                    const t = [];
                    return this._queue.forEach(n => {
                        const r = n.player;
                        if (r.destroyed) return;
                        const s = n.element,
                            i = this._elementListeners.get(s);
                        i && i.forEach(t => {
                            if (t.name == n.triggerName) {
                                const r = RS(s, n.triggerName, n.fromState.value, n.toState.value);
                                r._data = e, IS(n.player, t.phase, r, t.callback)
                            }
                        }), r.markedForDestroy ? this._engine.afterFlush(() => {
                            r.destroy()
                        }) : t.push(n)
                    }), this._queue = [], t.sort((e, t) => {
                        const n = e.transition.ast.depCount,
                            r = t.transition.ast.depCount;
                        return 0 == n || 0 == r ? n - r : this._engine.driver.containsElement(e.element, t.element) ? 1 : -1
                    })
                }
                destroy(e) {
                    this.players.forEach(e => e.destroy()), this._signalRemovalForInnerTriggers(this.hostElement, e)
                }
                elementContainsData(e) {
                    let t = !1;
                    return this._elementListeners.has(e) && (t = !0), t = !!this._queue.find(t => t.element === e) || t, t
                }
            }
            class pE {
                constructor(e, t, n) {
                    this.bodyNode = e, this.driver = t, this._normalizer = n, this.players = [], this.newHostElements = new Map, this.playersByElement = new Map, this.playersByQueriedElement = new Map, this.statesByElement = new Map, this.disabledNodes = new Set, this.totalAnimations = 0, this.totalQueuedPlayers = 0, this._namespaceLookup = {}, this._namespaceList = [], this._flushFns = [], this._whenQuietFns = [], this.namespacesByHostElement = new Map, this.collectedEnterElements = [], this.collectedLeaveElements = [], this.onRemovalComplete = (e, t) => {}
                }
                _onRemovalComplete(e, t) {
                    this.onRemovalComplete(e, t)
                }
                get queuedPlayers() {
                    const e = [];
                    return this._namespaceList.forEach(t => {
                        t.players.forEach(t => {
                            t.queued && e.push(t)
                        })
                    }), e
                }
                createNamespace(e, t) {
                    const n = new dE(e, t, this);
                    return t.parentNode ? this._balanceNamespaceList(n, t) : (this.newHostElements.set(t, n), this.collectEnterElement(t)), this._namespaceLookup[e] = n
                }
                _balanceNamespaceList(e, t) {
                    const n = this._namespaceList.length - 1;
                    if (n >= 0) {
                        let r = !1;
                        for (let s = n; s >= 0; s--)
                            if (this.driver.containsElement(this._namespaceList[s].hostElement, t)) {
                                this._namespaceList.splice(s + 1, 0, e), r = !0;
                                break
                            } r || this._namespaceList.splice(0, 0, e)
                    } else this._namespaceList.push(e);
                    return this.namespacesByHostElement.set(t, e), e
                }
                register(e, t) {
                    let n = this._namespaceLookup[e];
                    return n || (n = this.createNamespace(e, t)), n
                }
                registerTrigger(e, t, n) {
                    let r = this._namespaceLookup[e];
                    r && r.register(t, n) && this.totalAnimations++
                }
                destroy(e, t) {
                    if (!e) return;
                    const n = this._fetchNamespace(e);
                    this.afterFlush(() => {
                        this.namespacesByHostElement.delete(n.hostElement), delete this._namespaceLookup[e];
                        const t = this._namespaceList.indexOf(n);
                        t >= 0 && this._namespaceList.splice(t, 1)
                    }), this.afterFlushAnimationsDone(() => n.destroy(t))
                }
                _fetchNamespace(e) {
                    return this._namespaceLookup[e]
                }
                fetchNamespacesByElement(e) {
                    const t = new Set,
                        n = this.statesByElement.get(e);
                    if (n) {
                        const e = Object.keys(n);
                        for (let r = 0; r < e.length; r++) {
                            const s = n[e[r]].namespaceId;
                            if (s) {
                                const e = this._fetchNamespace(s);
                                e && t.add(e)
                            }
                        }
                    }
                    return t
                }
                trigger(e, t, n, r) {
                    if (gE(t)) {
                        const s = this._fetchNamespace(e);
                        if (s) return s.trigger(t, n, r), !0
                    }
                    return !1
                }
                insertNode(e, t, n, r) {
                    if (!gE(t)) return;
                    const s = t.__ng_removed;
                    if (s && s.setForRemoval) {
                        s.setForRemoval = !1, s.setForMove = !0;
                        const e = this.collectedLeaveElements.indexOf(t);
                        e >= 0 && this.collectedLeaveElements.splice(e, 1)
                    }
                    if (e) {
                        const r = this._fetchNamespace(e);
                        r && r.insertNode(t, n)
                    }
                    r && this.collectEnterElement(t)
                }
                collectEnterElement(e) {
                    this.collectedEnterElements.push(e)
                }
                markElementAsDisabled(e, t) {
                    t ? this.disabledNodes.has(e) || (this.disabledNodes.add(e), vE(e, sE)) : this.disabledNodes.has(e) && (this.disabledNodes.delete(e), _E(e, sE))
                }
                removeNode(e, t, n, r) {
                    if (gE(t)) {
                        const s = e ? this._fetchNamespace(e) : null;
                        if (s ? s.removeNode(t, r) : this.markElementAsRemoved(e, t, !1, r), n) {
                            const n = this.namespacesByHostElement.get(t);
                            n && n.id !== e && n.removeNode(t, r)
                        }
                    } else this._onRemovalComplete(t, r)
                }
                markElementAsRemoved(e, t, n, r) {
                    this.collectedLeaveElements.push(t), t.__ng_removed = {
                        namespaceId: e,
                        setForRemoval: r,
                        hasAnimation: n,
                        removedBeforeQueried: !1
                    }
                }
                listen(e, t, n, r, s) {
                    return gE(t) ? this._fetchNamespace(e).listen(t, n, r, s) : () => {}
                }
                _buildInstruction(e, t, n, r, s) {
                    return e.transition.build(this.driver, e.element, e.fromState.value, e.toState.value, n, r, e.fromState.options, e.toState.options, t, s)
                }
                destroyInnerAnimations(e) {
                    let t = this.driver.query(e, ex, !0);
                    t.forEach(e => this.destroyActiveAnimationsForElement(e)), 0 != this.playersByQueriedElement.size && (t = this.driver.query(e, nx, !0), t.forEach(e => this.finishActiveQueriedAnimationOnElement(e)))
                }
                destroyActiveAnimationsForElement(e) {
                    const t = this.playersByElement.get(e);
                    t && t.forEach(e => {
                        e.queued ? e.markedForDestroy = !0 : e.destroy()
                    })
                }
                finishActiveQueriedAnimationOnElement(e) {
                    const t = this.playersByQueriedElement.get(e);
                    t && t.forEach(e => e.finish())
                }
                whenRenderingDone() {
                    return new Promise(e => {
                        if (this.players.length) return FS(this.players).onDone(() => e());
                        e()
                    })
                }
                processLeaveNode(e) {
                    const t = e.__ng_removed;
                    if (t && t.setForRemoval) {
                        if (e.__ng_removed = aE, t.namespaceId) {
                            this.destroyInnerAnimations(e);
                            const n = this._fetchNamespace(t.namespaceId);
                            n && n.clearElementCache(e)
                        }
                        this._onRemovalComplete(e, t.setForRemoval)
                    }
                    this.driver.matchesElement(e, iE) && this.markElementAsDisabled(e, !1), this.driver.query(e, iE, !0).forEach(e => {
                        this.markElementAsDisabled(e, !1)
                    })
                }
                flush(e = -1) {
                    let t = [];
                    if (this.newHostElements.size && (this.newHostElements.forEach((e, t) => this._balanceNamespaceList(e, t)), this.newHostElements.clear()), this.totalAnimations && this.collectedEnterElements.length)
                        for (let n = 0; n < this.collectedEnterElements.length; n++) vE(this.collectedEnterElements[n], "ng-star-inserted");
                    if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
                        const n = [];
                        try {
                            t = this._flushAnimations(n, e)
                        } finally {
                            for (let e = 0; e < n.length; e++) n[e]()
                        }
                    } else
                        for (let n = 0; n < this.collectedLeaveElements.length; n++) this.processLeaveNode(this.collectedLeaveElements[n]);
                    if (this.totalQueuedPlayers = 0, this.collectedEnterElements.length = 0, this.collectedLeaveElements.length = 0, this._flushFns.forEach(e => e()), this._flushFns = [], this._whenQuietFns.length) {
                        const e = this._whenQuietFns;
                        this._whenQuietFns = [], t.length ? FS(t).onDone(() => {
                            e.forEach(e => e())
                        }) : e.forEach(e => e())
                    }
                }
                reportError(e) {
                    throw new Error(`Unable to process animations due to the following failed trigger transitions\n ${e.join("\n")}`)
                }
                _flushAnimations(e, t) {
                    const n = new Nx,
                        r = [],
                        s = new Map,
                        i = [],
                        o = new Map,
                        a = new Map,
                        l = new Map,
                        u = new Set;
                    this.disabledNodes.forEach(e => {
                        u.add(e);
                        const t = this.driver.query(e, ".ng-animate-queued", !0);
                        for (let n = 0; n < t.length; n++) u.add(t[n])
                    });
                    const c = this.bodyNode,
                        h = Array.from(this.statesByElement.keys()),
                        d = bE(h, this.collectedEnterElements),
                        p = new Map;
                    let f = 0;
                    d.forEach((e, t) => {
                        const n = YS + f++;
                        p.set(t, n), e.forEach(e => vE(e, n))
                    });
                    const g = [],
                        m = new Set,
                        y = new Set;
                    for (let O = 0; O < this.collectedLeaveElements.length; O++) {
                        const e = this.collectedLeaveElements[O],
                            t = e.__ng_removed;
                        t && t.setForRemoval && (g.push(e), m.add(e), t.hasAnimation ? this.driver.query(e, ".ng-star-inserted", !0).forEach(e => m.add(e)) : y.add(e))
                    }
                    const b = new Map,
                        v = bE(h, Array.from(m));
                    v.forEach((e, t) => {
                        const n = JS + f++;
                        b.set(t, n), e.forEach(e => vE(e, n))
                    }), e.push(() => {
                        d.forEach((e, t) => {
                            const n = p.get(t);
                            e.forEach(e => _E(e, n))
                        }), v.forEach((e, t) => {
                            const n = b.get(t);
                            e.forEach(e => _E(e, n))
                        }), g.forEach(e => {
                            this.processLeaveNode(e)
                        })
                    });
                    const _ = [],
                        w = [];
                    for (let O = this._namespaceList.length - 1; O >= 0; O--) this._namespaceList[O].drainQueuedTransitions(t).forEach(e => {
                        const t = e.player,
                            s = e.element;
                        if (_.push(t), this.collectedEnterElements.length) {
                            const e = s.__ng_removed;
                            if (e && e.setForMove) return void t.destroy()
                        }
                        const u = !c || !this.driver.containsElement(c, s),
                            h = b.get(s),
                            d = p.get(s),
                            f = this._buildInstruction(e, n, d, h, u);
                        if (f.errors && f.errors.length) w.push(f);
                        else {
                            if (u) return t.onStart(() => hx(s, f.fromStyles)), t.onDestroy(() => cx(s, f.toStyles)), void r.push(t);
                            if (e.isFallbackTransition) return t.onStart(() => hx(s, f.fromStyles)), t.onDestroy(() => cx(s, f.toStyles)), void r.push(t);
                            f.timelines.forEach(e => e.stretchStartingKeyframe = !0), n.append(s, f.timelines), i.push({
                                instruction: f,
                                player: t,
                                element: s
                            }), f.queriedElements.forEach(e => NS(o, e, []).push(t)), f.preStyleProps.forEach((e, t) => {
                                const n = Object.keys(e);
                                if (n.length) {
                                    let e = a.get(t);
                                    e || a.set(t, e = new Set), n.forEach(t => e.add(t))
                                }
                            }), f.postStyleProps.forEach((e, t) => {
                                const n = Object.keys(e);
                                let r = l.get(t);
                                r || l.set(t, r = new Set), n.forEach(e => r.add(e))
                            })
                        }
                    });
                    if (w.length) {
                        const e = [];
                        w.forEach(t => {
                            e.push(`@${t.triggerName} has failed due to:\n`), t.errors.forEach(t => e.push(`- ${t}\n`))
                        }), _.forEach(e => e.destroy()), this.reportError(e)
                    }
                    const C = new Map,
                        S = new Map;
                    i.forEach(e => {
                        const t = e.element;
                        n.has(t) && (S.set(t, t), this._beforeAnimationBuild(e.player.namespaceId, e.instruction, C))
                    }), r.forEach(e => {
                        const t = e.element;
                        this._getPreviousPlayers(t, !1, e.namespaceId, e.triggerName, null).forEach(e => {
                            NS(C, t, []).push(e), e.destroy()
                        })
                    });
                    const x = g.filter(e => SE(e, a, l)),
                        E = new Map;
                    yE(E, this.driver, y, l, xS).forEach(e => {
                        SE(e, a, l) && x.push(e)
                    });
                    const k = new Map;
                    d.forEach((e, t) => {
                        yE(k, this.driver, new Set(e), a, "!")
                    }), x.forEach(e => {
                        const t = E.get(e),
                            n = k.get(e);
                        E.set(e, Object.assign(Object.assign({}, t), n))
                    });
                    const A = [],
                        D = [],
                        T = {};
                    i.forEach(e => {
                        const {
                            element: t,
                            player: i,
                            instruction: o
                        } = e;
                        if (n.has(t)) {
                            if (u.has(t)) return i.onDestroy(() => cx(t, o.toStyles)), i.disabled = !0, i.overrideTotalTime(o.totalTime), void r.push(i);
                            let e = T;
                            if (S.size > 1) {
                                let n = t;
                                const r = [];
                                for (; n = n.parentNode;) {
                                    const t = S.get(n);
                                    if (t) {
                                        e = t;
                                        break
                                    }
                                    r.push(n)
                                }
                                r.forEach(t => S.set(t, e))
                            }
                            const n = this._buildAnimation(i.namespaceId, o, C, s, k, E);
                            if (i.setRealPlayer(n), e === T) A.push(i);
                            else {
                                const t = this.playersByElement.get(e);
                                t && t.length && (i.parentPlayer = FS(t)), r.push(i)
                            }
                        } else hx(t, o.fromStyles), i.onDestroy(() => cx(t, o.toStyles)), D.push(i), u.has(t) && r.push(i)
                    }), D.forEach(e => {
                        const t = s.get(e.element);
                        if (t && t.length) {
                            const n = FS(t);
                            e.setRealPlayer(n)
                        }
                    }), r.forEach(e => {
                        e.parentPlayer ? e.syncPlayerEvents(e.parentPlayer) : e.destroy()
                    });
                    for (let O = 0; O < g.length; O++) {
                        const e = g[O],
                            t = e.__ng_removed;
                        if (_E(e, JS), t && t.hasAnimation) continue;
                        let n = [];
                        if (o.size) {
                            let t = o.get(e);
                            t && t.length && n.push(...t);
                            let r = this.driver.query(e, nx, !0);
                            for (let e = 0; e < r.length; e++) {
                                let t = o.get(r[e]);
                                t && t.length && n.push(...t)
                            }
                        }
                        const r = n.filter(e => !e.destroyed);
                        r.length ? wE(this, e, r) : this.processLeaveNode(e)
                    }
                    return g.length = 0, A.forEach(e => {
                        this.players.push(e), e.onDone(() => {
                            e.destroy();
                            const t = this.players.indexOf(e);
                            this.players.splice(t, 1)
                        }), e.play()
                    }), A
                }
                elementContainsData(e, t) {
                    let n = !1;
                    const r = t.__ng_removed;
                    return r && r.setForRemoval && (n = !0), this.playersByElement.has(t) && (n = !0), this.playersByQueriedElement.has(t) && (n = !0), this.statesByElement.has(t) && (n = !0), this._fetchNamespace(e).elementContainsData(t) || n
                }
                afterFlush(e) {
                    this._flushFns.push(e)
                }
                afterFlushAnimationsDone(e) {
                    this._whenQuietFns.push(e)
                }
                _getPreviousPlayers(e, t, n, r, s) {
                    let i = [];
                    if (t) {
                        const t = this.playersByQueriedElement.get(e);
                        t && (i = t)
                    } else {
                        const t = this.playersByElement.get(e);
                        if (t) {
                            const e = !s || s == cE;
                            t.forEach(t => {
                                t.queued || (e || t.triggerName == r) && i.push(t)
                            })
                        }
                    }
                    return (n || r) && (i = i.filter(e => !(n && n != e.namespaceId || r && r != e.triggerName))), i
                }
                _beforeAnimationBuild(e, t, n) {
                    const r = t.element,
                        s = t.isRemovalTransition ? void 0 : e,
                        i = t.isRemovalTransition ? void 0 : t.triggerName;
                    for (const o of t.timelines) {
                        const e = o.element,
                            a = e !== r,
                            l = NS(n, e, []);
                        this._getPreviousPlayers(e, a, s, i, t.toState).forEach(e => {
                            const t = e.getRealPlayer();
                            t.beforeDestroy && t.beforeDestroy(), e.destroy(), l.push(e)
                        })
                    }
                    hx(r, t.fromStyles)
                }
                _buildAnimation(e, t, n, r, s, i) {
                    const o = t.triggerName,
                        a = t.element,
                        l = [],
                        u = new Set,
                        c = new Set,
                        h = t.timelines.map(t => {
                            const h = t.element;
                            u.add(h);
                            const d = h.__ng_removed;
                            if (d && d.removedBeforeQueried) return new DS(t.duration, t.delay);
                            const p = h !== a,
                                f = function(e) {
                                    const t = [];
                                    return CE(e, t), t
                                }((n.get(h) || oE).map(e => e.getRealPlayer())).filter(e => !!e.element && e.element === h),
                                g = s.get(h),
                                m = i.get(h),
                                y = PS(0, this._normalizer, 0, t.keyframes, g, m),
                                b = this._buildPlayer(t, y, f);
                            if (t.subTimeline && r && c.add(h), p) {
                                const t = new fE(e, o, h);
                                t.setRealPlayer(b), l.push(t)
                            }
                            return b
                        });
                    l.forEach(e => {
                        NS(this.playersByQueriedElement, e.element, []).push(e), e.onDone(() => function(e, t, n) {
                            let r;
                            if (e instanceof Map) {
                                if (r = e.get(t), r) {
                                    if (r.length) {
                                        const e = r.indexOf(n);
                                        r.splice(e, 1)
                                    }
                                    0 == r.length && e.delete(t)
                                }
                            } else if (r = e[t], r) {
                                if (r.length) {
                                    const e = r.indexOf(n);
                                    r.splice(e, 1)
                                }
                                0 == r.length && delete e[t]
                            }
                            return r
                        }(this.playersByQueriedElement, e.element, e))
                    }), u.forEach(e => vE(e, tx));
                    const d = FS(h);
                    return d.onDestroy(() => {
                        u.forEach(e => _E(e, tx)), cx(a, t.toStyles)
                    }), c.forEach(e => {
                        NS(r, e, []).push(d)
                    }), d
                }
                _buildPlayer(e, t, n) {
                    return t.length > 0 ? this.driver.animate(e.element, t, e.duration, e.delay, e.easing, n) : new DS(e.duration, e.delay)
                }
            }
            class fE {
                constructor(e, t, n) {
                    this.namespaceId = e, this.triggerName = t, this.element = n, this._player = new DS, this._containsRealPlayer = !1, this._queuedCallbacks = {}, this.destroyed = !1, this.markedForDestroy = !1, this.disabled = !1, this.queued = !0, this.totalTime = 0
                }
                setRealPlayer(e) {
                    this._containsRealPlayer || (this._player = e, Object.keys(this._queuedCallbacks).forEach(t => {
                        this._queuedCallbacks[t].forEach(n => IS(e, t, void 0, n))
                    }), this._queuedCallbacks = {}, this._containsRealPlayer = !0, this.overrideTotalTime(e.totalTime), this.queued = !1)
                }
                getRealPlayer() {
                    return this._player
                }
                overrideTotalTime(e) {
                    this.totalTime = e
                }
                syncPlayerEvents(e) {
                    const t = this._player;
                    t.triggerCallback && e.onStart(() => t.triggerCallback("start")), e.onDone(() => this.finish()), e.onDestroy(() => this.destroy())
                }
                _queueEvent(e, t) {
                    NS(this._queuedCallbacks, e, []).push(t)
                }
                onDone(e) {
                    this.queued && this._queueEvent("done", e), this._player.onDone(e)
                }
                onStart(e) {
                    this.queued && this._queueEvent("start", e), this._player.onStart(e)
                }
                onDestroy(e) {
                    this.queued && this._queueEvent("destroy", e), this._player.onDestroy(e)
                }
                init() {
                    this._player.init()
                }
                hasStarted() {
                    return !this.queued && this._player.hasStarted()
                }
                play() {
                    !this.queued && this._player.play()
                }
                pause() {
                    !this.queued && this._player.pause()
                }
                restart() {
                    !this.queued && this._player.restart()
                }
                finish() {
                    this._player.finish()
                }
                destroy() {
                    this.destroyed = !0, this._player.destroy()
                }
                reset() {
                    !this.queued && this._player.reset()
                }
                setPosition(e) {
                    this.queued || this._player.setPosition(e)
                }
                getPosition() {
                    return this.queued ? 0 : this._player.getPosition()
                }
                triggerCallback(e) {
                    const t = this._player;
                    t.triggerCallback && t.triggerCallback(e)
                }
            }

            function gE(e) {
                return e && 1 === e.nodeType
            }

            function mE(e, t) {
                const n = e.style.display;
                return e.style.display = null != t ? t : "none", n
            }

            function yE(e, t, n, r, s) {
                const i = [];
                n.forEach(e => i.push(mE(e)));
                const o = [];
                r.forEach((n, r) => {
                    const i = {};
                    n.forEach(e => {
                        const n = i[e] = t.computeStyle(r, e, s);
                        n && 0 != n.length || (r.__ng_removed = lE, o.push(r))
                    }), e.set(r, i)
                });
                let a = 0;
                return n.forEach(e => mE(e, i[a++])), o
            }

            function bE(e, t) {
                const n = new Map;
                if (e.forEach(e => n.set(e, [])), 0 == t.length) return n;
                const r = new Set(t),
                    s = new Map;

                function i(e) {
                    if (!e) return 1;
                    let t = s.get(e);
                    if (t) return t;
                    const o = e.parentNode;
                    return t = n.has(o) ? o : r.has(o) ? 1 : i(o), s.set(e, t), t
                }
                return t.forEach(e => {
                    const t = i(e);
                    1 !== t && n.get(t).push(e)
                }), n
            }

            function vE(e, t) {
                if (e.classList) e.classList.add(t);
                else {
                    let n = e.$$classes;
                    n || (n = e.$$classes = {}), n[t] = !0
                }
            }

            function _E(e, t) {
                if (e.classList) e.classList.remove(t);
                else {
                    let n = e.$$classes;
                    n && delete n[t]
                }
            }

            function wE(e, t, n) {
                FS(n).onDone(() => e.processLeaveNode(t))
            }

            function CE(e, t) {
                for (let n = 0; n < e.length; n++) {
                    const r = e[n];
                    r instanceof TS ? CE(r.players, t) : t.push(r)
                }
            }

            function SE(e, t, n) {
                const r = n.get(e);
                if (!r) return !1;
                let s = t.get(e);
                return s ? r.forEach(e => s.add(e)) : t.set(e, r), n.delete(e), !0
            }
            class xE {
                constructor(e, t, n) {
                    this.bodyNode = e, this._driver = t, this._triggerCache = {}, this.onRemovalComplete = (e, t) => {}, this._transitionEngine = new pE(e, t, n), this._timelineEngine = new nE(e, t, n), this._transitionEngine.onRemovalComplete = (e, t) => this.onRemovalComplete(e, t)
                }
                registerTrigger(e, t, n, r, s) {
                    const i = e + "-" + r;
                    let o = this._triggerCache[i];
                    if (!o) {
                        const e = [],
                            t = Tx(this._driver, s, e);
                        if (e.length) throw new Error(`The animation trigger "${r}" has failed to build due to the following errors:\n - ${e.join("\n - ")}`);
                        o = function(e, t) {
                            return new Xx(e, t)
                        }(r, t), this._triggerCache[i] = o
                    }
                    this._transitionEngine.registerTrigger(t, r, o)
                }
                register(e, t) {
                    this._transitionEngine.register(e, t)
                }
                destroy(e, t) {
                    this._transitionEngine.destroy(e, t)
                }
                onInsert(e, t, n, r) {
                    this._transitionEngine.insertNode(e, t, n, r)
                }
                onRemove(e, t, n, r) {
                    this._transitionEngine.removeNode(e, t, r || !1, n)
                }
                disableAnimations(e, t) {
                    this._transitionEngine.markElementAsDisabled(e, t)
                }
                process(e, t, n, r) {
                    if ("@" == n.charAt(0)) {
                        const [e, s] = LS(n);
                        this._timelineEngine.command(e, t, s, r)
                    } else this._transitionEngine.trigger(e, t, n, r)
                }
                listen(e, t, n, r, s) {
                    if ("@" == n.charAt(0)) {
                        const [e, r] = LS(n);
                        return this._timelineEngine.listen(e, t, r, s)
                    }
                    return this._transitionEngine.listen(e, t, n, r, s)
                }
                flush(e = -1) {
                    this._transitionEngine.flush(e)
                }
                get players() {
                    return this._transitionEngine.players.concat(this._timelineEngine.players)
                }
                whenRenderingDone() {
                    return this._transitionEngine.whenRenderingDone()
                }
            }

            function EE(e, t) {
                let n = null,
                    r = null;
                return Array.isArray(t) && t.length ? (n = AE(t[0]), t.length > 1 && (r = AE(t[t.length - 1]))) : t && (n = AE(t)), n || r ? new kE(e, n, r) : null
            }
            let kE = (() => {
                class e {
                    constructor(t, n, r) {
                        this._element = t, this._startStyles = n, this._endStyles = r, this._state = 0;
                        let s = e.initialStylesByElement.get(t);
                        s || e.initialStylesByElement.set(t, s = {}), this._initialStyles = s
                    }
                    start() {
                        this._state < 1 && (this._startStyles && cx(this._element, this._startStyles, this._initialStyles), this._state = 1)
                    }
                    finish() {
                        this.start(), this._state < 2 && (cx(this._element, this._initialStyles), this._endStyles && (cx(this._element, this._endStyles), this._endStyles = null), this._state = 1)
                    }
                    destroy() {
                        this.finish(), this._state < 3 && (e.initialStylesByElement.delete(this._element), this._startStyles && (hx(this._element, this._startStyles), this._endStyles = null), this._endStyles && (hx(this._element, this._endStyles), this._endStyles = null), cx(this._element, this._initialStyles), this._state = 3)
                    }
                }
                return e.initialStylesByElement = new WeakMap, e
            })();

            function AE(e) {
                let t = null;
                const n = Object.keys(e);
                for (let r = 0; r < n.length; r++) {
                    const s = n[r];
                    DE(s) && (t = t || {}, t[s] = e[s])
                }
                return t
            }

            function DE(e) {
                return "display" === e || "position" === e
            }
            const TE = "animation",
                OE = "animationend";
            class FE {
                constructor(e, t, n, r, s, i, o) {
                    this._element = e, this._name = t, this._duration = n, this._delay = r, this._easing = s, this._fillMode = i, this._onDoneFn = o, this._finished = !1, this._destroyed = !1, this._startTime = 0, this._position = 0, this._eventFn = e => this._handleCallback(e)
                }
                apply() {
                    ! function(e, t) {
                        const n = LE(e, "").trim();
                        n.length && (function(e, t) {
                            let n = 0;
                            for (let r = 0; r < e.length; r++) "," === e.charAt(r) && n++
                        }(n), t = `${n}, ${t}`), NE(e, "", t)
                    }(this._element, `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`), RE(this._element, this._eventFn, !1), this._startTime = Date.now()
                }
                pause() {
                    PE(this._element, this._name, "paused")
                }
                resume() {
                    PE(this._element, this._name, "running")
                }
                setPosition(e) {
                    const t = IE(this._element, this._name);
                    this._position = e * this._duration, NE(this._element, "Delay", `-${this._position}ms`, t)
                }
                getPosition() {
                    return this._position
                }
                _handleCallback(e) {
                    const t = e._ngTestManualTimestamp || Date.now(),
                        n = 1e3 * parseFloat(e.elapsedTime.toFixed(3));
                    e.animationName == this._name && Math.max(t - this._startTime, 0) >= this._delay && n >= this._duration && this.finish()
                }
                finish() {
                    this._finished || (this._finished = !0, this._onDoneFn(), RE(this._element, this._eventFn, !0))
                }
                destroy() {
                    this._destroyed || (this._destroyed = !0, this.finish(), function(e, t) {
                        const n = LE(e, "").split(","),
                            r = ME(n, t);
                        r >= 0 && (n.splice(r, 1), NE(e, "", n.join(",")))
                    }(this._element, this._name))
                }
            }

            function PE(e, t, n) {
                NE(e, "PlayState", n, IE(e, t))
            }

            function IE(e, t) {
                const n = LE(e, "");
                return n.indexOf(",") > 0 ? ME(n.split(","), t) : ME([n], t)
            }

            function ME(e, t) {
                for (let n = 0; n < e.length; n++)
                    if (e[n].indexOf(t) >= 0) return n;
                return -1
            }

            function RE(e, t, n) {
                n ? e.removeEventListener(OE, t) : e.addEventListener(OE, t)
            }

            function NE(e, t, n, r) {
                const s = TE + t;
                if (null != r) {
                    const t = e.style[s];
                    if (t.length) {
                        const e = t.split(",");
                        e[r] = n, n = e.join(",")
                    }
                }
                e.style[s] = n
            }

            function LE(e, t) {
                return e.style[TE + t] || ""
            }
            class jE {
                constructor(e, t, n, r, s, i, o, a) {
                    this.element = e, this.keyframes = t, this.animationName = n, this._duration = r, this._delay = s, this._finalStyles = o, this._specialStyles = a, this._onDoneFns = [], this._onStartFns = [], this._onDestroyFns = [], this._started = !1, this.currentSnapshot = {}, this._state = 0, this.easing = i || "linear", this.totalTime = r + s, this._buildStyler()
                }
                onStart(e) {
                    this._onStartFns.push(e)
                }
                onDone(e) {
                    this._onDoneFns.push(e)
                }
                onDestroy(e) {
                    this._onDestroyFns.push(e)
                }
                destroy() {
                    this.init(), this._state >= 4 || (this._state = 4, this._styler.destroy(), this._flushStartFns(), this._flushDoneFns(), this._specialStyles && this._specialStyles.destroy(), this._onDestroyFns.forEach(e => e()), this._onDestroyFns = [])
                }
                _flushDoneFns() {
                    this._onDoneFns.forEach(e => e()), this._onDoneFns = []
                }
                _flushStartFns() {
                    this._onStartFns.forEach(e => e()), this._onStartFns = []
                }
                finish() {
                    this.init(), this._state >= 3 || (this._state = 3, this._styler.finish(), this._flushStartFns(), this._specialStyles && this._specialStyles.finish(), this._flushDoneFns())
                }
                setPosition(e) {
                    this._styler.setPosition(e)
                }
                getPosition() {
                    return this._styler.getPosition()
                }
                hasStarted() {
                    return this._state >= 2
                }
                init() {
                    this._state >= 1 || (this._state = 1, this._styler.apply(), this._delay && this._styler.pause())
                }
                play() {
                    this.init(), this.hasStarted() || (this._flushStartFns(), this._state = 2, this._specialStyles && this._specialStyles.start()), this._styler.resume()
                }
                pause() {
                    this.init(), this._styler.pause()
                }
                restart() {
                    this.reset(), this.play()
                }
                reset() {
                    this._styler.destroy(), this._buildStyler(), this._styler.apply()
                }
                _buildStyler() {
                    this._styler = new FE(this.element, this.animationName, this._duration, this._delay, this.easing, "forwards", () => this.finish())
                }
                triggerCallback(e) {
                    const t = "start" == e ? this._onStartFns : this._onDoneFns;
                    t.forEach(e => e()), t.length = 0
                }
                beforeDestroy() {
                    this.init();
                    const e = {};
                    if (this.hasStarted()) {
                        const t = this._state >= 3;
                        Object.keys(this._finalStyles).forEach(n => {
                            "offset" != n && (e[n] = t ? this._finalStyles[n] : Cx(this.element, n))
                        })
                    }
                    this.currentSnapshot = e
                }
            }
            class BE extends DS {
                constructor(e, t) {
                    super(), this.element = e, this._startingStyles = {}, this.__initialized = !1, this._styles = KS(t)
                }
                init() {
                    !this.__initialized && this._startingStyles && (this.__initialized = !0, Object.keys(this._styles).forEach(e => {
                        this._startingStyles[e] = this.element.style[e]
                    }), super.init())
                }
                play() {
                    this._startingStyles && (this.init(), Object.keys(this._styles).forEach(e => this.element.style.setProperty(e, this._styles[e])), super.play())
                }
                destroy() {
                    this._startingStyles && (Object.keys(this._startingStyles).forEach(e => {
                        const t = this._startingStyles[e];
                        t ? this.element.style.setProperty(e, t) : this.element.style.removeProperty(e)
                    }), this._startingStyles = null, super.destroy())
                }
            }
            class VE {
                constructor() {
                    this._count = 0, this._head = document.querySelector("head")
                }
                validateStyleProperty(e) {
                    return zS(e)
                }
                matchesElement(e, t) {
                    return qS(e, t)
                }
                containsElement(e, t) {
                    return GS(e, t)
                }
                query(e, t, n) {
                    return WS(e, t, n)
                }
                computeStyle(e, t, n) {
                    return window.getComputedStyle(e)[t]
                }
                buildKeyframeElement(e, t, n) {
                    n = n.map(e => KS(e));
                    let r = `@keyframes ${t} {\n`,
                        s = "";
                    n.forEach(e => {
                        s = " ";
                        const t = parseFloat(e.offset);
                        r += `${s}${100*t}% {\n`, s += " ", Object.keys(e).forEach(t => {
                            const n = e[t];
                            switch (t) {
                                case "offset":
                                    return;
                                case "easing":
                                    return void(n && (r += `${s}animation-timing-function: ${n};\n`));
                                default:
                                    return void(r += `${s}${t}: ${n};\n`)
                            }
                        }), r += `${s}}\n`
                    }), r += "}\n";
                    const i = document.createElement("style");
                    return i.textContent = r, i
                }
                animate(e, t, n, r, s, i = [], o) {
                    const a = i.filter(e => e instanceof jE),
                        l = {};
                    vx(n, r) && a.forEach(e => {
                        let t = e.currentSnapshot;
                        Object.keys(t).forEach(e => l[e] = t[e])
                    });
                    const u = function(e) {
                        let t = {};
                        return e && (Array.isArray(e) ? e : [e]).forEach(e => {
                            Object.keys(e).forEach(n => {
                                "offset" != n && "easing" != n && (t[n] = e[n])
                            })
                        }), t
                    }(t = _x(e, t, l));
                    if (0 == n) return new BE(e, u);
                    const c = "gen_css_kf_" + this._count++,
                        h = this.buildKeyframeElement(e, c, t);
                    document.querySelector("head").appendChild(h);
                    const d = EE(e, t),
                        p = new jE(e, t, c, n, r, s, u, d);
                    return p.onDestroy(() => {
                        var e;
                        (e = h).parentNode.removeChild(e)
                    }), p
                }
            }
            class UE {
                constructor(e, t, n, r) {
                    this.element = e, this.keyframes = t, this.options = n, this._specialStyles = r, this._onDoneFns = [], this._onStartFns = [], this._onDestroyFns = [], this._initialized = !1, this._finished = !1, this._started = !1, this._destroyed = !1, this.time = 0, this.parentPlayer = null, this.currentSnapshot = {}, this._duration = n.duration, this._delay = n.delay || 0, this.time = this._duration + this._delay
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(e => e()), this._onDoneFns = [])
                }
                init() {
                    this._buildPlayer(), this._preparePlayerBeforeStart()
                }
                _buildPlayer() {
                    if (this._initialized) return;
                    this._initialized = !0;
                    const e = this.keyframes;
                    this.domPlayer = this._triggerWebAnimation(this.element, e, this.options), this._finalKeyframe = e.length ? e[e.length - 1] : {}, this.domPlayer.addEventListener("finish", () => this._onFinish())
                }
                _preparePlayerBeforeStart() {
                    this._delay ? this._resetDomPlayerState() : this.domPlayer.pause()
                }
                _triggerWebAnimation(e, t, n) {
                    return e.animate(t, n)
                }
                onStart(e) {
                    this._onStartFns.push(e)
                }
                onDone(e) {
                    this._onDoneFns.push(e)
                }
                onDestroy(e) {
                    this._onDestroyFns.push(e)
                }
                play() {
                    this._buildPlayer(), this.hasStarted() || (this._onStartFns.forEach(e => e()), this._onStartFns = [], this._started = !0, this._specialStyles && this._specialStyles.start()), this.domPlayer.play()
                }
                pause() {
                    this.init(), this.domPlayer.pause()
                }
                finish() {
                    this.init(), this._specialStyles && this._specialStyles.finish(), this._onFinish(), this.domPlayer.finish()
                }
                reset() {
                    this._resetDomPlayerState(), this._destroyed = !1, this._finished = !1, this._started = !1
                }
                _resetDomPlayerState() {
                    this.domPlayer && this.domPlayer.cancel()
                }
                restart() {
                    this.reset(), this.play()
                }
                hasStarted() {
                    return this._started
                }
                destroy() {
                    this._destroyed || (this._destroyed = !0, this._resetDomPlayerState(), this._onFinish(), this._specialStyles && this._specialStyles.destroy(), this._onDestroyFns.forEach(e => e()), this._onDestroyFns = [])
                }
                setPosition(e) {
                    void 0 === this.domPlayer && this.init(), this.domPlayer.currentTime = e * this.time
                }
                getPosition() {
                    return this.domPlayer.currentTime / this.time
                }
                get totalTime() {
                    return this._delay + this._duration
                }
                beforeDestroy() {
                    const e = {};
                    this.hasStarted() && Object.keys(this._finalKeyframe).forEach(t => {
                        "offset" != t && (e[t] = this._finished ? this._finalKeyframe[t] : Cx(this.element, t))
                    }), this.currentSnapshot = e
                }
                triggerCallback(e) {
                    const t = "start" == e ? this._onStartFns : this._onDoneFns;
                    t.forEach(e => e()), t.length = 0
                }
            }
            class $E {
                constructor() {
                    this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(HE().toString()), this._cssKeyframesDriver = new VE
                }
                validateStyleProperty(e) {
                    return zS(e)
                }
                matchesElement(e, t) {
                    return qS(e, t)
                }
                containsElement(e, t) {
                    return GS(e, t)
                }
                query(e, t, n) {
                    return WS(e, t, n)
                }
                computeStyle(e, t, n) {
                    return window.getComputedStyle(e)[t]
                }
                overrideWebAnimationsSupport(e) {
                    this._isNativeImpl = e
                }
                animate(e, t, n, r, s, i = [], o) {
                    if (!o && !this._isNativeImpl) return this._cssKeyframesDriver.animate(e, t, n, r, s, i);
                    const a = {
                        duration: n,
                        delay: r,
                        fill: 0 == r ? "both" : "forwards"
                    };
                    s && (a.easing = s);
                    const l = {},
                        u = i.filter(e => e instanceof UE);
                    vx(n, r) && u.forEach(e => {
                        let t = e.currentSnapshot;
                        Object.keys(t).forEach(e => l[e] = t[e])
                    });
                    const c = EE(e, t = _x(e, t = t.map(e => ax(e, !1)), l));
                    return new UE(e, t, a, c)
                }
            }

            function HE() {
                return "undefined" != typeof window && void 0 !== window.document && Element.prototype.animate || {}
            }
            let zE = (() => {
                class e extends SS {
                    constructor(e, t) {
                        super(), this._nextAnimationId = 0, this._renderer = e.createRenderer(t.body, {
                            id: "0",
                            encapsulation: ke.None,
                            styles: [],
                            data: {
                                animation: []
                            }
                        })
                    }
                    build(e) {
                        const t = this._nextAnimationId.toString();
                        this._nextAnimationId++;
                        const n = Array.isArray(e) ? ES(e) : e;
                        return WE(this._renderer, null, t, "register", [n]), new qE(t, this._renderer)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(sl), dr(Ic))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            class qE extends class {} {
                constructor(e, t) {
                    super(), this._id = e, this._renderer = t
                }
                create(e, t) {
                    return new GE(this._id, e, t || {}, this._renderer)
                }
            }
            class GE {
                constructor(e, t, n, r) {
                    this.id = e, this.element = t, this._renderer = r, this.parentPlayer = null, this._started = !1, this.totalTime = 0, this._command("create", n)
                }
                _listen(e, t) {
                    return this._renderer.listen(this.element, `@@${this.id}:${e}`, t)
                }
                _command(e, ...t) {
                    return WE(this._renderer, this.element, this.id, e, t)
                }
                onDone(e) {
                    this._listen("done", e)
                }
                onStart(e) {
                    this._listen("start", e)
                }
                onDestroy(e) {
                    this._listen("destroy", e)
                }
                init() {
                    this._command("init")
                }
                hasStarted() {
                    return this._started
                }
                play() {
                    this._command("play"), this._started = !0
                }
                pause() {
                    this._command("pause")
                }
                restart() {
                    this._command("restart")
                }
                finish() {
                    this._command("finish")
                }
                destroy() {
                    this._command("destroy")
                }
                reset() {
                    this._command("reset")
                }
                setPosition(e) {
                    this._command("setPosition", e)
                }
                getPosition() {
                    var e, t;
                    return null !== (t = null === (e = this._renderer.engine.players[+this.id]) || void 0 === e ? void 0 : e.getPosition()) && void 0 !== t ? t : 0
                }
            }

            function WE(e, t, n, r, s) {
                return e.setProperty(t, `@@${n}:${r}`, s)
            }
            const KE = "@",
                ZE = "@.disabled";
            let QE = (() => {
                class e {
                    constructor(e, t, n) {
                        this.delegate = e, this.engine = t, this._zone = n, this._currentId = 0, this._microtaskId = 1, this._animationCallbacksBuffer = [], this._rendererCache = new Map, this._cdRecurDepth = 0, this.promise = Promise.resolve(0), t.onRemovalComplete = (e, t) => {
                            t && t.parentNode(e) && t.removeChild(e.parentNode, e)
                        }
                    }
                    createRenderer(e, t) {
                        const n = this.delegate.createRenderer(e, t);
                        if (!(e && t && t.data && t.data.animation)) {
                            let e = this._rendererCache.get(n);
                            return e || (e = new YE("", n, this.engine), this._rendererCache.set(n, e)), e
                        }
                        const r = t.id,
                            s = t.id + "-" + this._currentId;
                        this._currentId++, this.engine.register(s, e);
                        const i = t => {
                            Array.isArray(t) ? t.forEach(i) : this.engine.registerTrigger(r, s, e, t.name, t)
                        };
                        return t.data.animation.forEach(i), new JE(this, s, n, this.engine)
                    }
                    begin() {
                        this._cdRecurDepth++, this.delegate.begin && this.delegate.begin()
                    }
                    _scheduleCountTask() {
                        this.promise.then(() => {
                            this._microtaskId++
                        })
                    }
                    scheduleListenerCallback(e, t, n) {
                        e >= 0 && e < this._microtaskId ? this._zone.run(() => t(n)) : (0 == this._animationCallbacksBuffer.length && Promise.resolve(null).then(() => {
                            this._zone.run(() => {
                                this._animationCallbacksBuffer.forEach(e => {
                                    const [t, n] = e;
                                    t(n)
                                }), this._animationCallbacksBuffer = []
                            })
                        }), this._animationCallbacksBuffer.push([t, n]))
                    }
                    end() {
                        this._cdRecurDepth--, 0 == this._cdRecurDepth && this._zone.runOutsideAngular(() => {
                            this._scheduleCountTask(), this.engine.flush(this._microtaskId)
                        }), this.delegate.end && this.delegate.end()
                    }
                    whenRenderingDone() {
                        return this.engine.whenRenderingDone()
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(sl), dr(xE), dr(tc))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            class YE {
                constructor(e, t, n) {
                    this.namespaceId = e, this.delegate = t, this.engine = n, this.destroyNode = this.delegate.destroyNode ? e => t.destroyNode(e) : null
                }
                get data() {
                    return this.delegate.data
                }
                destroy() {
                    this.engine.destroy(this.namespaceId, this.delegate), this.delegate.destroy()
                }
                createElement(e, t) {
                    return this.delegate.createElement(e, t)
                }
                createComment(e) {
                    return this.delegate.createComment(e)
                }
                createText(e) {
                    return this.delegate.createText(e)
                }
                appendChild(e, t) {
                    this.delegate.appendChild(e, t), this.engine.onInsert(this.namespaceId, t, e, !1)
                }
                insertBefore(e, t, n, r = !0) {
                    this.delegate.insertBefore(e, t, n), this.engine.onInsert(this.namespaceId, t, e, r)
                }
                removeChild(e, t, n) {
                    this.engine.onRemove(this.namespaceId, t, this.delegate, n)
                }
                selectRootElement(e, t) {
                    return this.delegate.selectRootElement(e, t)
                }
                parentNode(e) {
                    return this.delegate.parentNode(e)
                }
                nextSibling(e) {
                    return this.delegate.nextSibling(e)
                }
                setAttribute(e, t, n, r) {
                    this.delegate.setAttribute(e, t, n, r)
                }
                removeAttribute(e, t, n) {
                    this.delegate.removeAttribute(e, t, n)
                }
                addClass(e, t) {
                    this.delegate.addClass(e, t)
                }
                removeClass(e, t) {
                    this.delegate.removeClass(e, t)
                }
                setStyle(e, t, n, r) {
                    this.delegate.setStyle(e, t, n, r)
                }
                removeStyle(e, t, n) {
                    this.delegate.removeStyle(e, t, n)
                }
                setProperty(e, t, n) {
                    t.charAt(0) == KE && t == ZE ? this.disableAnimations(e, !!n) : this.delegate.setProperty(e, t, n)
                }
                setValue(e, t) {
                    this.delegate.setValue(e, t)
                }
                listen(e, t, n) {
                    return this.delegate.listen(e, t, n)
                }
                disableAnimations(e, t) {
                    this.engine.disableAnimations(e, t)
                }
            }
            class JE extends YE {
                constructor(e, t, n, r) {
                    super(t, n, r), this.factory = e, this.namespaceId = t
                }
                setProperty(e, t, n) {
                    t.charAt(0) == KE ? "." == t.charAt(1) && t == ZE ? this.disableAnimations(e, n = void 0 === n || !!n) : this.engine.process(this.namespaceId, e, t.substr(1), n) : this.delegate.setProperty(e, t, n)
                }
                listen(e, t, n) {
                    if (t.charAt(0) == KE) {
                        const r = function(e) {
                            switch (e) {
                                case "body":
                                    return document.body;
                                case "document":
                                    return document;
                                case "window":
                                    return window;
                                default:
                                    return e
                            }
                        }(e);
                        let s = t.substr(1),
                            i = "";
                        return s.charAt(0) != KE && ([s, i] = function(e) {
                            const t = e.indexOf(".");
                            return [e.substring(0, t), e.substr(t + 1)]
                        }(s)), this.engine.listen(this.namespaceId, r, s, i, e => {
                            this.factory.scheduleListenerCallback(e._data || -1, n, e)
                        })
                    }
                    return this.delegate.listen(e, t, n)
                }
            }
            let XE = (() => {
                class e extends xE {
                    constructor(e, t, n) {
                        super(e.body, t, n)
                    }
                }
                return e.\u0275fac = function(t) {
                    return new(t || e)(dr(Ic), dr(QS), dr(Gx))
                }, e.\u0275prov = he({
                    token: e,
                    factory: e.\u0275fac
                }), e
            })();
            const ek = [{
                provide: QS,
                useFactory: function() {
                    return "function" == typeof HE() ? new $E : new VE
                }
            }, {
                provide: new Kn("AnimationModuleType"),
                useValue: "BrowserAnimations"
            }, {
                provide: SS,
                useClass: zE
            }, {
                provide: Gx,
                useFactory: function() {
                    return new Wx
                }
            }, {
                provide: xE,
                useClass: XE
            }, {
                provide: sl,
                useFactory: function(e, t, n) {
                    return new QE(e, t, n)
                },
                deps: [fd, xE, tc]
            }];
            let tk = (() => {
                class e {}
                return e.\u0275fac = function(t) {
                    return new(t || e)
                }, e.\u0275mod = We({
                    type: e
                }), e.\u0275inj = de({
                    providers: ek,
                    imports: [Dd]
                }), e
            })();

            function nk(e, t, n, r) {
                var s, i = arguments.length,
                    o = i < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, n, r);
                else
                    for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(t, n, o) : s(t, n)) || o);
                return i > 3 && o && Object.defineProperty(t, n, o), o
            }

            function rk(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }
            let sk = (() => {
                    let e = class {
                        constructor(e) {
                            this.loader = e
                        }
                        intercept(e, t) {
                            if (e.headers.has("ignoreLoadingBar")) return t.handle(e.clone({
                                headers: e.headers.delete("ignoreLoadingBar")
                            }));
                            let n = !1;
                            const r = this.loader.useRef("http");
                            return t.handle(e).pipe(Ap(() => {
                                n || (r.start(), n = !0)
                            }), Op(() => n && r.complete()))
                        }
                    };
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(VC))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: function(t) {
                            return e.\u0275fac(t)
                        }
                    }), e = nk([rk("design:paramtypes", [VC])], e), e
                })(),
                ik = (() => {
                    let e = class {};
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: [{
                            provide: qm,
                            useClass: sk,
                            multi: !0
                        }],
                        imports: [
                            [sy, $C], sy, $C
                        ]
                    }), e
                })(),
                ok = (() => {
                    let e = class {
                        constructor(e, t) {
                            const n = t.useRef("router");
                            e.events.subscribe(t => {
                                const r = this.getCurrentNavigationState(e);
                                r && r.ignoreLoadingBar || (t instanceof Mp && n.start(), (t instanceof Lp || t instanceof Rp || t instanceof Np) && n.complete())
                            })
                        }
                        getCurrentNavigationState(e) {
                            const t = e.getCurrentNavigation && e.getCurrentNavigation();
                            return t && t.extras ? t.extras.state : {}
                        }
                    };
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(im), dr(VC))
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        imports: [
                            [bm, $C], bm, $C
                        ]
                    }), e = nk([rk("design:paramtypes", [im, VC])], e), e
                })();

            function ak(e) {
                const t = {};
                for (const n of e.keys()) t[n] = e.getAll(n);
                return t
            }
            let lk = (() => {
                    class e {
                        constructor(e, t) {
                            this.transferState = t, this.isCacheActive = !0, e.isStable.pipe(lp(e => e), tp(1)).toPromise().then(() => {
                                this.isCacheActive = !1
                            })
                        }
                        invalidateCacheEntry(e) {
                            Object.keys(this.transferState.store).forEach(t => t.includes(e) ? this.transferState.remove(t) : null)
                        }
                        makeCacheKey(e, t, n) {
                            return ("GET" === e ? "G." : "H.") + t + "?" + n.keys().sort().map(e => `${e}=${n.getAll(e)}`).join("&")
                        }
                        intercept(e, t) {
                            if ("GET" !== e.method && "HEAD" !== e.method && (this.isCacheActive = !1, this.invalidateCacheEntry(e.url)), !this.isCacheActive) return t.handle(e);
                            const n = this.makeCacheKey(e.method, e.url, e.params);
                            if (this.transferState.hasKey(n)) {
                                const e = this.transferState.get(n, {});
                                return Ld(new Vm({
                                    body: e.body,
                                    headers: new Tm(e.headers),
                                    status: e.status,
                                    statusText: e.statusText,
                                    url: e.url
                                }))
                            }
                            return t.handle(e).pipe(Ap(e => {
                                e instanceof Vm && this.transferState.set(n, {
                                    body: e.body,
                                    headers: ak(e.headers),
                                    status: e.status,
                                    statusText: e.statusText,
                                    url: e.url || ""
                                })
                            }))
                        }
                    }
                    return e.\u0275fac = function(t) {
                        return new(t || e)(dr(wc), dr(Md))
                    }, e.\u0275prov = he({
                        token: e,
                        factory: e.\u0275fac
                    }), e
                })(),
                uk = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e
                    }), e.\u0275inj = de({
                        providers: [lk, {
                            provide: qm,
                            useExisting: lk,
                            multi: !0
                        }],
                        imports: [
                            [Nd]
                        ]
                    }), e
                })(),
                ck = (() => {
                    class e {}
                    return e.\u0275fac = function(t) {
                        return new(t || e)
                    }, e.\u0275mod = We({
                        type: e,
                        bootstrap: [CS]
                    }), e.\u0275inj = de({
                        providers: [Wb, {
                            provide: "SocialAuthServiceConfig",
                            useValue: {
                                autoLogin: !1,
                                providers: [{
                                    id: qC.PROVIDER_ID,
                                    provider: new qC("645299590353-4kpb0apcr2dgrol3hj49vrpka1it2d43")
                                }]
                            }
                        }],
                        imports: [
                            [Dd.withServerTransition({
                                appId: "serverApp"
                            }), bC, tk, sy, Bb, Gb, ik, ok, WC, uk, C_, jv, n_]
                        ]
                    }), e
                })();
            (function() {
                if (fc) throw new Error("Cannot enable prod mode after platform setup.");
                pc = !1
            })(), document.addEventListener("DOMContentLoaded", () => {
                kd().bootstrapModule(ck).catch(e => console.error(e))
            })
        }
    },
    [
        [0, 0]
    ]
]);